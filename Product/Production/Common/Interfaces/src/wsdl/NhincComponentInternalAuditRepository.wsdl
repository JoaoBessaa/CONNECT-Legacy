<?xml version="1.0" encoding="UTF-8"?>
<definitions name="NhincComponentInternalAuditRepository" 
    targetNamespace="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns:tns="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository" 
    xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" 
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
    xmlns:audit="urn:gov:hhs:fha:nhinc:common:auditlog" 
    xmlns:hiemaudit="urn:gov:hhs:fha:nhinc:common:hiemauditlog">
    <types>
        <xsd:schema targetNamespace="urn:gov:hhs:fha:nhinc:nhinccomponentinternalauditrepository">
            <xsd:import schemaLocation="../schemas/nhinc/common/AuditLog.xsd" 
                        namespace="urn:gov:hhs:fha:nhinc:common:auditlog" />            
            <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:hiemauditlog" 
                        schemaLocation="../schemas/nhinc/common/HiemAuditLog.xsd"/>
        </xsd:schema>
    </types>
    <message name="LogSubjectAddedRequestMessage">
        <part name="LogSubjectAddedRequest" element="audit:LogSubjectAddedRequest"/>
    </message>
    <message name="LogSubjectRevisedRequestMessage">
        <part name="LogSubjectRevisedRequest" element="audit:LogSubjectRevisedRequest"/>
    </message>
 <!--   <message name="LogSubjectRevokedRequestMessage">
        <part name="LogSubjectRevokedRequest" element="audit:LogSubjectRevokedRequest"/>
    </message>-->
    <message name="LogNhinSubjectDiscoveryAckRequestMessage">
        <part name="LogNhinSubjectDiscoveryAckRequest" element="audit:LogNhinSubjectDiscoveryAckRequest"/>
    </message>
    <message name="LogAdhocQueryRequestMessage">
        <part name="LogAdhocQueryRequest" element="audit:LogAdhocQueryRequest"/>
    </message>
    <message name="LogAdhocQueryResultRequestMessage">
        <part name="LogAdhocQueryResultRequest" element="audit:LogAdhocQueryResultRequest"/>
    </message>
    <message name="LogDocRetrieveRequestMessage">
        <part name="LogDocRetrieveRequest" element="audit:LogDocRetrieveRequest"/>
    </message>
    <message name="LogDocRetrieveResultRequestMessage">
        <part name="LogDocRetrieveResultRequest" element="audit:LogDocRetrieveResultRequest"/>
    </message>
    <message name="LogFindAuditEventsRequestMessage">
        <part name="LogFindAuditEventsRequest" element="audit:LogFindAuditEventsRequest"/>
    </message>
    <message name="LogFindAuditEventsResultRequestMessage">
        <part name="LogFindAuditEventsResultRequest" element="audit:LogFindAuditEventsResultRequest"/>
    </message>
    <message name="LogEventResponseMessage">
        <part name="LogEventResponse" element="audit:LogEventResponse"/>
    </message>
    <message name="LogSubjectReidentRequestMessage">
        <part name="LogSubjectReidentRequest" element="audit:LogSubjectReidentificationRequest"/>
    </message>
    <message name="LogSubjectReidentResponseMessage">
        <part name="LogSubjectReidentResponse" element="audit:LogSubjectReidentificationResponse"/>
    </message>
    <message name="LogNhinSubscribeRequestMessage">
        <part name="LogNhinSubscribeRequest" element="hiemaudit:LogNhinSubscribeRequest"/>
    </message>
    <message name="LogNhinNotifyRequestMessage">
        <part name="LogNhinNotifyRequest" element="hiemaudit:LogNhinNotifyRequest"/>
    </message>
    <message name="LogNhinUnsubscribeRequestMessage">
        <part name="LogNhinUnsubscribeRequest" element="hiemaudit:LogNhinUnsubscribeRequest"/>
    </message>
    <message name="LogUnsubscribeRespRequestMessage">
        <part name="LogUnsubscribeRespRequest" element="hiemaudit:LogUnsubscribeResponse"/>
    </message>
    <message name="LogSubscribeRespRequestMessage">
        <part name="LogSubscribeRespRequest" element="hiemaudit:LogSubscribeResponse"/>
    </message>
    <message name="LogEntityDocSubscribeRequestMessage">
        <part name="LogmEntityDocSubscribeRequest" element="hiemaudit:LogEntityDocumentSubscribeRequest"/>
    </message>
    <message name="LogEntityCdcSubscribeRequestMessage">
        <part name="LogEntityCdcSubscribetRequest" element="hiemaudit:LogEntityCdcSubscribeRequest"/>
    </message>
    <message name="LogEntityDocNotifyRequestMessage">
        <part name="LogEntityDocNotifyRequest" element="hiemaudit:LogEntityDocumentNotifyRequest"/>
    </message>
    <message name="LogEntityCdcNotifyRequestMessage">
        <part name="LogEntityCdcNotifyRequest" element="hiemaudit:LogEntityCdcNotifyRequest"/>
    </message>
    <message name="LogEntityNotifyRespRequestMessage">
        <part name="LogEntityNotifyRespRequest" element="hiemaudit:LogEntityNotifyResponse"/>
    </message>
    <message name="LogEntityUnsubscribeRequestMessage">
        <part name="LogEntityUnsubscribeRequest" element="hiemaudit:LogEntityUnsubscribeRequest"/>
    </message>
    <portType name="NhincComponentInternalAuditRepositoryPortType">
        <operation name="LogSubjectAdded">
            <input name="LogSubjectAddedRequest" message="tns:LogSubjectAddedRequestMessage"/>
            <output name="LogSubjectAddedResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogAdhocQuery">
            <input name="LogAdhocQueryRequest" message="tns:LogAdhocQueryRequestMessage"/>
            <output name="LogAdhocQueryResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogSubjectRevised">
            <input name="LogSubjectRevisedRequest" message="tns:LogSubjectRevisedRequestMessage"/>
            <output name="LogSubjectRevisedResponse" message="tns:LogEventResponseMessage"/>
        </operation>
 <!--       <operation name="LogSubjectRevoked">
            <input name="LogSubjectRevokedRequest" message="tns:LogSubjectRevokedRequestMessage"/>
            <output name="LogSubjectRevokedResponse" message="tns:LogEventResponseMessage"/>
        </operation>-->
        <operation name="LogNhinSubjectDiscoveryAck">
            <input name="LogNhinSubjectDiscoveryAckRequest" message="tns:LogNhinSubjectDiscoveryAckRequestMessage"/>
            <output name="LogNhinSubjectDiscoveryAckResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogAdhocQueryResult">
            <input name="LogAdhocQueryResultRequest" message="tns:LogAdhocQueryResultRequestMessage"/>
            <output name="LogAdhocQueryResultResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogDocRetrieve">
            <input name="LogDocRetrieveRequest" message="tns:LogDocRetrieveRequestMessage"/>
            <output name="LogDocRetrieveResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogDocRetrieveResult">
            <input name="LogDocRetrieveResultRequest" message="tns:LogDocRetrieveResultRequestMessage"/>
            <output name="LogDocRetrieveResultResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogFindAuditEvents">
            <input name="LogFindAuditEventsRequest" message="tns:LogFindAuditEventsRequestMessage"/>
            <output name="LogFindAuditEventsResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogFindAuditEventsResult">
            <input name="LogFindAuditEventsResultRequest" message="tns:LogFindAuditEventsResultRequestMessage"/>
            <output name="LogFindAuditEventsResultResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogSubjectReident">
            <input name="LogSubjectReidentRequest" message="tns:LogSubjectReidentRequestMessage"/>
            <output name="LogSubjectReidentResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogSubjectReidentResult">
            <input name="LogSubjectReidentResultRequest" message="tns:LogSubjectReidentResponseMessage"/>
            <output name="LogSubjectReidentResultResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogNhinSubscribeRequest">
            <input name="LogNhinSubscribeRequest" message="tns:LogNhinSubscribeRequestMessage"/>
            <output name="LogNhinSubscribeResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogNhinNotifyRequest">
            <input name="LogNhinNotifyRequest" message="tns:LogNhinNotifyRequestMessage"/>
            <output name="LogNhinNotifyResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogNhinUnsubscribeRequest">
            <input name="LogNhinUnsubscribeRequest" message="tns:LogNhinUnsubscribeRequestMessage"/>
            <output name="LogNhinUnsubscribeResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogUnsubscribeRespRequest">
            <input name="LogUnsubscribeRespRequest" message="tns:LogUnsubscribeRespRequestMessage"/>
            <output name="LogUnsubscribeRespResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogSubscribeRespRequest">
            <input name="LogSubscribeRespRequest" message="tns:LogSubscribeRespRequestMessage"/>
            <output name="LogSubscribeRespResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogEntityDocSubscribeRequest">
            <input name="LogEntityDocSubscribeRequest" message="tns:LogEntityDocSubscribeRequestMessage"/>
            <output name="LogEntityDocSubscribeResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogEntityCdcSubscribeRequest">
            <input name="LogEntityCdcSubscribeRequest" message="tns:LogEntityCdcSubscribeRequestMessage"/>
            <output name="LogEntityCdcSubscribeResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogEntityDocNotifyRequest">
            <input name="LogEntityDocNotifyRequest" message="tns:LogEntityDocNotifyRequestMessage"/>
            <output name="LogEntityDocNotifyResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogEntityCdcNotifyRequest">
            <input name="LogEntityCdcNotifyRequest" message="tns:LogEntityCdcNotifyRequestMessage"/>
            <output name="LogEntityCdcNotifyResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogEntityNotifyRespRequest">
            <input name="LogEntityNotifyRespRequest" message="tns:LogEntityNotifyRespRequestMessage"/>
            <output name="LogEntityNotifyRespResponse" message="tns:LogEventResponseMessage"/>
        </operation>
        <operation name="LogEntityUnsubscribeRequest">
            <input name="LogEntityUnsubscribeRequest" message="tns:LogEntityUnsubscribeRequestMessage"/>
            <output name="LogEntityUnsubscribeResponse" message="tns:LogEventResponseMessage"/>
        </operation>
    </portType>
    <binding name="NhincComponentInternalAuditRepositoryPortTypeBinding" 
    type="tns:NhincComponentInternalAuditRepositoryPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="LogSubjectAdded">
            <soap:operation soapAction="urn:LogSubjectAdded"/>
            <input name="LogSubjectAddedRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogSubjectAddedResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogAdhocQuery">
            <soap:operation soapAction="urn:LogAdhocQuery"/>
            <input name="LogAdhocQueryRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogAdhocQueryResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogSubjectRevised">
            <soap:operation soapAction="urn:LogSubjectRevised"/>
            <input name="LogSubjectRevisedRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogSubjectRevisedResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
  <!--      <operation name="LogSubjectRevoked">
            <soap:operation soapAction="urn:LogSubjectRevoked"/>
            <input name="LogSubjectRevokedRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogSubjectRevokedResponse">
                <soap:body use="literal"/>
            </output>
        </operation>-->
        <operation name="LogNhinSubjectDiscoveryAck">
            <soap:operation soapAction="urn:LogNhinSubjectDiscoveryAck"/>
            <input name="LogNhinSubjectDiscoveryAckRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogNhinSubjectDiscoveryAckResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogAdhocQueryResult">
            <soap:operation soapAction="urn:LogAdhocQueryResult"/>
            <input name="LogAdhocQueryResultRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogAdhocQueryResultResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogDocRetrieve">
            <soap:operation soapAction="urn:LogDocRetrieve"/>
            <input name="LogDocRetrieveRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogDocRetrieveResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogDocRetrieveResult">
            <soap:operation soapAction="urn:LogDocRetrieveResult"/>
            <input name="LogDocRetrieveResultRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogDocRetrieveResultResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogFindAuditEvents">
            <soap:operation soapAction="urn:LogFindAuditEvents"/>
            <input name="LogFindAuditEventsRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogFindAuditEventsResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogFindAuditEventsResult">
            <soap:operation soapAction="urn:LogFindAuditEventsResult"/>
            <input name="LogFindAuditEventsResultRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogFindAuditEventsResultResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogSubjectReident">
            <soap:operation soapAction="urn:LogSubjectReident"/>
            <input name="LogSubjectReidentRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogSubjectReidentResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogSubjectReidentResult">
            <soap:operation soapAction="urn:LogSubjectReidentResult"/>
            <input name="LogSubjectReidentResultRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogSubjectReidentResultResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogNhinSubscribeRequest">
            <soap:operation soapAction="urn:LogNhinSubscribeRequest"/>
            <input name="LogNhinSubscribeRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogNhinSubscribeResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogNhinNotifyRequest">
            <soap:operation soapAction="urn:LogNhinNotifyRequest"/>
            <input name="LogNhinNotifyRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogNhinNotifyResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogNhinUnsubscribeRequest">
            <soap:operation soapAction="urn:LogNhinUnsubscribeRequest"/>
            <input name="LogNhinUnsubscribeRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogNhinUnsubscribeResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogUnsubscribeRespRequest">
            <soap:operation soapAction="urn:LogUnsubscribeRespRequest"/>
            <input name="LogUnsubscribeRespRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogUnsubscribeRespResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogSubscribeRespRequest">
            <soap:operation soapAction="urn:LogSubscribeRespRequest"/>
            <input name="LogSubscribeRespRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogSubscribeRespResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogEntityDocSubscribeRequest">
            <soap:operation soapAction="urn:LogEntityDocSubscribeRequest"/>
            <input name="LogEntityDocSubscribeRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogEntityDocSubscribeResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogEntityCdcSubscribeRequest">
            <soap:operation soapAction="urn:LogEntityCdcSubscribeRequest"/>
            <input name="LogEntityCdcSubscribeRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogEntityCdcSubscribeResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogEntityDocNotifyRequest">
            <soap:operation soapAction="urn:LogEntityDocNotifyRequest"/>
            <input name="LogEntityDocNotifyRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogEntityDocNotifyResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogEntityCdcNotifyRequest">
            <soap:operation soapAction="urn:LogEntityCdcNotifyRequest"/>
            <input name="LogEntityCdcNotifyRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogEntityCdcNotifyResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogEntityNotifyRespRequest">
            <soap:operation soapAction="urn:LogEntityNotifyRespRequest"/>
            <input name="LogEntityNotifyRespRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogEntityNotifyRespResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="LogEntityUnsubscribeRequest">
            <soap:operation soapAction="urn:LogEntityUnsubscribeRequest"/>
            <input name="LogEntityUnsubscribeRequest">
                <soap:body use="literal"/>
            </input>
            <output name="LogEntityUnsubscribeResponse">
                <soap:body use="literal"/>
            </output>
        </operation>
    </binding>
    <service name="NhincComponentInternalAuditRepositoryService">
        <port name="NhincComponentInternalAuditRepositoryPortTypeBindingPort" 
              binding="tns:NhincComponentInternalAuditRepositoryPortTypeBinding">
            <soap:address location="http://localhost:${NhincHttpPort}/NhinConnect/NhincComponentInternalAuditRepositoryService" />
        </port>
    </service>
    <plnk:partnerLinkType name="NhincComponentInternalAuditRepository">
        <plnk:role name="NhincComponentInternalAuditRepositoryPortTypeRole" portType="tns:NhincComponentInternalAuditRepositoryPortType"/>
    </plnk:partnerLinkType>
</definitions>
