<?xml version="1.0" encoding="utf-8"?>
<project name="build.lib" default="none">
  <property environment="env"/>
  <property name="project.dir" location="."/>
  <basename file="${project.dir}" property="project.name"/>

  <property name="libs.CopyLibs.classpath" value="${ant.home}/extra/org-netbeans-modules-java-j2seproject-copylibstask.jar"/>

  <import file="build.properties.xml"/>

  <import file="Install/deploy.xml"/>

  <import file="build/checkstyle/checkstyle.targets.xml"/>

  <macrodef name="call">
    <attribute name="target"/>
    <attribute name="if" default="true"/>
    <sequential>
      <if>
        <and>
          <istrue value="@{if}"/>
          <isfalse value="@{unless}"/>
        </and>
        <then>
          <runtarget target="@{target}"/>
        </then>
      </if>
    </sequential>
  </macrodef>

  <target name="create.deploy.list.xml">
    <xmltask dest="${deploy.application.list.file.path}" outputter="simple:3"> 
      <insert path="/"> 
        <![CDATA[ 
			  <applications>
			  <wars/>
			  <shared/>
			  <ejbs/>
			  </applications>
			  ]]>
      </insert>  
    </xmltask> 
  </target>

  <target name="addentry.deploy.list.xml">
    <if>
      <istrue value="${deploy.isDeployable}"/>
      <then>
        <switch value="${deploy.type}">
          <case value="war">
            <var name="deploy.list.entry.xpath" value="/applications/wars"/>
            <var name="deploy.list.entry" value="&lt;war&gt;&lt;name&gt;${project.name}&lt;/name&gt;&lt;/war&gt;"/>
            <runtarget target="insert.entry.to.deploy.app.list"/>
          </case>
          <case value="shared">
            <var name="deploy.list.entry.xpath" value="/applications/shared"/>
            <var name="deploy.list.entry" value="&lt;lib&gt;&lt;name&gt;${project.name}&lt;/name&gt;&lt;/lib&gt;"/>
            <runtarget target="insert.entry.to.deploy.app.list"/>       
          </case>
          <case value="ejb">
            <var name="deploy.list.entry.xpath" value="/applications/ejbs"/>
            <var name="deploy.list.entry" value="&lt;ejb&gt;&lt;name&gt;${project.name}&lt;/name&gt;&lt;/ejb&gt;"/>
            <runtarget target="insert.entry.to.deploy.app.list"/>
          </case>
          <default>
            <fail message="Deploy type ${deploy.type} is not supported."/>
          </default>
        </switch>
      </then>
    </if>
  </target>

  <target name="insert.entry.to.deploy.app.list">
    <xmltask  source="${deploy.application.list.file.path}" dest="${deploy.application.list.file.path}" outputter="simple:3">
      <insert path="${deploy.list.entry.xpath}" xml="${deploy.list.entry}"/>
    </xmltask>
  </target>

  <target name="copy.deployable.artifacts">
    <property file="${project.dir}/nbproject/project.properties"/>
    <switch value="${deploy.type}">
      <case value="war">
        <property name="dist.file" value="${project.dir}/${dist.war}"/>
      </case>
      <default>
        <condition property="dist.file" value="${project.dir}/${sedeployment.jar}" else="${project.dir}/${dist.jar}">
          <isset property="sedeployment.jar"/>
        </condition>
      </default>
    </switch>

    <call target="addentry.deploy.list.xml" if="${deploy.isDeployable}"/>
    <call target="copy.artifacts.to.development" if="${deploy.isDeployable}"/>
  </target>

  <target name="deploy">
    <call target="create.deploy.list.xml" if="${deploy.isDeployable}"/>
    <call target="copy.deployable.artifacts" if="${deploy.isDeployable}"/>
    <call target="deploy.to.production" if="${deploy.isDeployable}"/>
  </target>

  <target name="undeploy">
    <call target="create.deploy.list.xml" if="${deploy.isDeployable}"/>
    <call target="copy.deployable.artifacts" if="${deploy.isDeployable}"/>
    <call target="undeploy.from.production" if="${deploy.isDeployable}"/>
  </target>

  <target name="checkstyle">
    <call target="checkstyle.style"/>
  </target>

  <!-- 
  ***** Properties used as params to this target *****
  <property name="target-to-call" value=""/>
  -->
  <target name="call-target-in-isolation-if-out-of-date">
    <property location="." name="project-to-build"/>
    <property name="target-to-call" value="dist"/>
    <property name="base" value="${project-to-build}/lib"/>
    <property file="${project-to-build}/lib/nblibraries.properties"/>
    <property file="${project-to-build}/nbproject/project.properties"/>
    <antcall target="build-project-if-out-of-date"/>
  </target>

  <!-- 
  ***** Properties used as params to this target *****
  <property name="project-to-build" value=""/>
  <property name="target-to-call" value=""/>
  -->
  <target name="build-project-if-out-of-date" >
    <switch value="${deploy.type}">
      <case value="war">
        <property name="dist.file" value="${dist.war}"/>
      </case>
      <default>
        <condition property="dist.file" value="${sedeployment.jar}" else="${dist.jar}">
          <isset property="sedeployment.jar"/>
        </condition>
      </default>
    </switch>

    <var name="javac.classpath.exists" value="true"/>
    <if>
      <isset property="javac.classpath"/>
      <then>
        <for delimiter=":;" list="${javac.classpath}" param="jar.file">
          <sequential>
            <if>
              <length string="@{jar.file}" trim="true" length="1"/>
              <then>
              </then>
              <else>
                <available property="@{jar.file}.exists" file="@{jar.file}"/>
                <if>
                  <isset property="@{jar.file}.exists"/>
                  <else>
                    <echo message="${project-to-build} missing dependency:" level="error"/>
                    <echo message="Failed to resolve artifact: @{jar.file}" level="error"/>
                    <var name="javac.classpath.exists" value="false"/>
                  </else>
                </if>
              </else>
            </if>
          </sequential>
        </for>
      </then>
      <else>
        <property name="javac.classpath" value=""/>
      </else>
    </if>

    <if>
      <istrue value="${javac.classpath.exists}"/>
      <then>
        <outofdate verbose="true" force="${outofdate.force}" property="need.build">
          <sourcefiles>
            <pathelement path="${javac.classpath}"/>
            <fileset dir="${project-to-build}" casesensitive="no">
              <patternset>
                <include name="${source.root}/**/*"/>
              </patternset>
            </fileset>
          </sourcefiles>
          <targetfiles path="${project-to-build}/${dist.file}"/>
        </outofdate>
      </then>
      <else>
        <property name="need.build" value="true"/>
      </else>
    </if>

    <if>
      <istrue value="${need.build}"/>
      <then>
        <ant
            dir="${project-to-build}"
            target="${target-to-call}"
            inheritall="false"
            antfile="${project-to-build}/build.xml"
        />
      </then>
    </if>
  </target>
</project>
