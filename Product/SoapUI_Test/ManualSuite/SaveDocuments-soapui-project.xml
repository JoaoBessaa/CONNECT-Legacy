<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="SaveDocuments" resourceRoot="${projectDir}" soapui-version="3.5" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="xdsrepositorybSoap11Binding" type="wsdl" bindingName="{http://serviceimpl.repository.xds.services.hieos.vangent.com}xdsrepositorybSoap11Binding" soapVersion="1_1" anonymous="optional" definition="http://172.16.50.45:9080/axis2/services/xdsrepositoryb?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://172.16.50.45:9080/axis2/services/xdsrepositoryb?wsdl"><con:part><con:url>http://172.16.50.45:9080/axis2/services/xdsrepositoryb?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://serviceimpl.repository.xds.services.hieos.vangent.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://serviceimpl.repository.xds.services.hieos.vangent.com" xmlns:ax221="http://response.xutil.hieos.vangent.com/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax216="http://exception.xutil.hieos.vangent.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax219="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>xdsrepositoryb</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://structure.metadata.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="Metadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="allDefinedIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allUids" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associationIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="classifications" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="documentUidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjectIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folderIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folders" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="grokMetadata" type="xs:boolean"/>
          <xs:element minOccurs="0" name="majorObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadata" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadataDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nonObjectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectIdsToDeprecate" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefsOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="original" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjectsThatMustHaveSamePatientId" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackageIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSet" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetPatientId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetSourceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetUniqueId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSets" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidHashMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uriChunkSize" type="xs:int"/>
          <xs:element minOccurs="0" name="v2" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v2SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="version2" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wrapper" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="_metadata_containers" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://response.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="ErrorLogger">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Response">
        <xs:complexContent>
          <xs:extension base="ax221:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="response" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="ax221:RegistryErrorList"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RegistryErrorList">
        <xs:complexContent>
          <xs:extension base="ax221:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="verbose" type="xs:boolean"/>
              <xs:element minOccurs="0" name="version" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.xutil.hieos.vangent.com/xsd" xmlns:ax217="http://serviceimpl.repository.xds.services.hieos.vangent.com">
      <xs:import namespace="http://serviceimpl.repository.xds.services.hieos.vangent.com"/>
      <xs:complexType name="XdsException">
        <xs:complexContent>
          <xs:extension base="ax217:Exception">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MetadataException">
        <xs:complexContent>
          <xs:extension base="ax216:XdsException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://serviceimpl.repository.xds.services.hieos.vangent.com" xmlns:ax220="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:ax222="http://response.xutil.hieos.vangent.com/xsd" xmlns:ax218="http://exception.xutil.hieos.vangent.com/xsd">
      <xs:import namespace="http://exception.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://structure.metadata.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://response.xutil.hieos.vangent.com/xsd"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Exception" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="MetadataException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="MetadataException" nillable="true" type="ax218:MetadataException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="m" nillable="true" type="ax219:Metadata"/>
            <xs:element minOccurs="0" name="response" nillable="true" type="ax222:Response"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ProvideAndRegisterDocumentSetRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ProvideAndRegisterDocumentSetRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ProvideAndRegisterDocumentSetRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RetrieveDocumentSetRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RetrieveDocumentSetRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RetrieveDocumentSetRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="sor" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="optimize_retrieve">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="opt" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="runContentValidationServiceRequest">
    <wsdl:part name="parameters" element="ns:runContentValidationService"/>
  </wsdl:message>
  <wsdl:message name="runContentValidationServiceResponse">
    <wsdl:part name="parameters" element="ns:runContentValidationServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="MetadataException">
    <wsdl:part name="parameters" element="ns:MetadataException"/>
  </wsdl:message>
  <wsdl:message name="RetrieveDocumentSetRequestRequest">
    <wsdl:part name="parameters" element="ns:RetrieveDocumentSetRequest"/>
  </wsdl:message>
  <wsdl:message name="RetrieveDocumentSetRequestResponse">
    <wsdl:part name="parameters" element="ns:RetrieveDocumentSetRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="ProvideAndRegisterDocumentSetRequestRequest">
    <wsdl:part name="parameters" element="ns:ProvideAndRegisterDocumentSetRequest"/>
  </wsdl:message>
  <wsdl:message name="ProvideAndRegisterDocumentSetRequestResponse">
    <wsdl:part name="parameters" element="ns:ProvideAndRegisterDocumentSetRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="optimize_retrieveRequest">
    <wsdl:part name="parameters" element="ns:optimize_retrieve"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestRequest">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequest"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestResponse">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequestResponse"/>
  </wsdl:message>
  <wsdl:portType name="xdsrepositorybPortType">
    <wsdl:operation name="runContentValidationService">
      <wsdl:input message="ns:runContentValidationServiceRequest" wsaw:Action="urn:runContentValidationService"/>
      <wsdl:output message="ns:runContentValidationServiceResponse" wsaw:Action="urn:runContentValidationServiceResponse"/>
      <wsdl:fault message="ns:MetadataException" name="MetadataException" wsaw:Action="urn:runContentValidationServiceMetadataException"/>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <wsdl:input message="ns:RetrieveDocumentSetRequestRequest" wsaw:Action="urn:RetrieveDocumentSetRequest"/>
      <wsdl:output message="ns:RetrieveDocumentSetRequestResponse" wsaw:Action="urn:RetrieveDocumentSetRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <wsdl:input message="ns:ProvideAndRegisterDocumentSetRequestRequest" wsaw:Action="urn:ProvideAndRegisterDocumentSetRequest"/>
      <wsdl:output message="ns:ProvideAndRegisterDocumentSetRequestResponse" wsaw:Action="urn:ProvideAndRegisterDocumentSetRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <wsdl:input message="ns:optimize_retrieveRequest" wsaw:Action="urn:optimize_retrieve"/>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <wsdl:input message="ns:SubmitObjectsRequestRequest" wsaw:Action="urn:SubmitObjectsRequest"/>
      <wsdl:output message="ns:SubmitObjectsRequestResponse" wsaw:Action="urn:SubmitObjectsRequestResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="xdsrepositorybSoap11Binding" type="ns:xdsrepositorybPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <soap:operation soapAction="urn:RetrieveDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <soap:operation soapAction="urn:ProvideAndRegisterDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <soap:operation soapAction="urn:optimize_retrieve" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsrepositorybSoap12Binding" type="ns:xdsrepositorybPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap12:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap12:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <soap12:operation soapAction="urn:RetrieveDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <soap12:operation soapAction="urn:ProvideAndRegisterDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <soap12:operation soapAction="urn:optimize_retrieve" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap12:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsrepositorybHttpBinding" type="ns:xdsrepositorybPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="runContentValidationService">
      <http:operation location="xdsrepositoryb/runContentValidationService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <http:operation location="xdsrepositoryb/RetrieveDocumentSetRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="RetrieveDocumentSetRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="RetrieveDocumentSetRequest"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <http:operation location="xdsrepositoryb/ProvideAndRegisterDocumentSetRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="ProvideAndRegisterDocumentSetRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="ProvideAndRegisterDocumentSetRequest"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <http:operation location="xdsrepositoryb/optimize_retrieve"/>
      <wsdl:input>
        <mime:content type="text/xml" part="optimize_retrieve"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <http:operation location="xdsrepositoryb/SubmitObjectsRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="xdsrepositoryb">
    <wsdl:port name="xdsrepositorybHttpSoap11Endpoint" binding="ns:xdsrepositorybSoap11Binding">
      <soap:address location="http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsrepositorybHttpSoap12Endpoint" binding="ns:xdsrepositorybSoap12Binding">
      <soap12:address location="http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsrepositorybHttpEndpoint" binding="ns:xdsrepositorybHttpBinding">
      <http:address location="http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpSoap11Endpoint/</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:optimize_retrieve" name="optimize_retrieve" bindingOperationName="optimize_retrieve" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:ProvideAndRegisterDocumentSetRequest" name="ProvideAndRegisterDocumentSetRequest" bindingOperationName="ProvideAndRegisterDocumentSetRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:RetrieveDocumentSetRequest" name="RetrieveDocumentSetRequest" bindingOperationName="RetrieveDocumentSetRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:runContentValidationService" name="runContentValidationService" bindingOperationName="runContentValidationService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:SubmitObjectsRequest" name="SubmitObjectsRequest" bindingOperationName="SubmitObjectsRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="xdsrepositorybSoap12Binding" type="wsdl" bindingName="{http://serviceimpl.repository.xds.services.hieos.vangent.com}xdsrepositorybSoap12Binding" soapVersion="1_2" anonymous="optional" definition="http://172.16.50.45:9080/axis2/services/xdsrepositoryb?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://172.16.50.45:9080/axis2/services/xdsrepositoryb?wsdl"><con:part><con:url>http://172.16.50.45:9080/axis2/services/xdsrepositoryb?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://serviceimpl.repository.xds.services.hieos.vangent.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://serviceimpl.repository.xds.services.hieos.vangent.com" xmlns:ax221="http://response.xutil.hieos.vangent.com/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax216="http://exception.xutil.hieos.vangent.com/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ax219="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>xdsrepositoryb</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://structure.metadata.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="Metadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="allDefinedIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allUids" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associationIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="classifications" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="documentUidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjectIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folderIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folders" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="grokMetadata" type="xs:boolean"/>
          <xs:element minOccurs="0" name="majorObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadata" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadataDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nonObjectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectIdsToDeprecate" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefsOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="original" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjectsThatMustHaveSamePatientId" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackageIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSet" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetPatientId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetSourceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetUniqueId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSets" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidHashMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uriChunkSize" type="xs:int"/>
          <xs:element minOccurs="0" name="v2" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v2SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="version2" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wrapper" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="_metadata_containers" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://response.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="ErrorLogger">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Response">
        <xs:complexContent>
          <xs:extension base="ax221:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="response" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="ax221:RegistryErrorList"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RegistryErrorList">
        <xs:complexContent>
          <xs:extension base="ax221:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="verbose" type="xs:boolean"/>
              <xs:element minOccurs="0" name="version" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.xutil.hieos.vangent.com/xsd" xmlns:ax217="http://serviceimpl.repository.xds.services.hieos.vangent.com">
      <xs:import namespace="http://serviceimpl.repository.xds.services.hieos.vangent.com"/>
      <xs:complexType name="XdsException">
        <xs:complexContent>
          <xs:extension base="ax217:Exception">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MetadataException">
        <xs:complexContent>
          <xs:extension base="ax216:XdsException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://serviceimpl.repository.xds.services.hieos.vangent.com" xmlns:ax220="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:ax222="http://response.xutil.hieos.vangent.com/xsd" xmlns:ax218="http://exception.xutil.hieos.vangent.com/xsd">
      <xs:import namespace="http://exception.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://structure.metadata.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://response.xutil.hieos.vangent.com/xsd"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Exception" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="MetadataException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="MetadataException" nillable="true" type="ax218:MetadataException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="m" nillable="true" type="ax219:Metadata"/>
            <xs:element minOccurs="0" name="response" nillable="true" type="ax222:Response"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ProvideAndRegisterDocumentSetRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="ProvideAndRegisterDocumentSetRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ProvideAndRegisterDocumentSetRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RetrieveDocumentSetRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="RetrieveDocumentSetRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RetrieveDocumentSetRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="sor" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="optimize_retrieve">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="opt" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="runContentValidationServiceRequest">
    <wsdl:part name="parameters" element="ns:runContentValidationService"/>
  </wsdl:message>
  <wsdl:message name="runContentValidationServiceResponse">
    <wsdl:part name="parameters" element="ns:runContentValidationServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="MetadataException">
    <wsdl:part name="parameters" element="ns:MetadataException"/>
  </wsdl:message>
  <wsdl:message name="RetrieveDocumentSetRequestRequest">
    <wsdl:part name="parameters" element="ns:RetrieveDocumentSetRequest"/>
  </wsdl:message>
  <wsdl:message name="RetrieveDocumentSetRequestResponse">
    <wsdl:part name="parameters" element="ns:RetrieveDocumentSetRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="ProvideAndRegisterDocumentSetRequestRequest">
    <wsdl:part name="parameters" element="ns:ProvideAndRegisterDocumentSetRequest"/>
  </wsdl:message>
  <wsdl:message name="ProvideAndRegisterDocumentSetRequestResponse">
    <wsdl:part name="parameters" element="ns:ProvideAndRegisterDocumentSetRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="optimize_retrieveRequest">
    <wsdl:part name="parameters" element="ns:optimize_retrieve"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestRequest">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequest"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestResponse">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequestResponse"/>
  </wsdl:message>
  <wsdl:portType name="xdsrepositorybPortType">
    <wsdl:operation name="runContentValidationService">
      <wsdl:input message="ns:runContentValidationServiceRequest" wsaw:Action="urn:runContentValidationService"/>
      <wsdl:output message="ns:runContentValidationServiceResponse" wsaw:Action="urn:runContentValidationServiceResponse"/>
      <wsdl:fault message="ns:MetadataException" name="MetadataException" wsaw:Action="urn:runContentValidationServiceMetadataException"/>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <wsdl:input message="ns:RetrieveDocumentSetRequestRequest" wsaw:Action="urn:RetrieveDocumentSetRequest"/>
      <wsdl:output message="ns:RetrieveDocumentSetRequestResponse" wsaw:Action="urn:RetrieveDocumentSetRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <wsdl:input message="ns:ProvideAndRegisterDocumentSetRequestRequest" wsaw:Action="urn:ProvideAndRegisterDocumentSetRequest"/>
      <wsdl:output message="ns:ProvideAndRegisterDocumentSetRequestResponse" wsaw:Action="urn:ProvideAndRegisterDocumentSetRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <wsdl:input message="ns:optimize_retrieveRequest" wsaw:Action="urn:optimize_retrieve"/>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <wsdl:input message="ns:SubmitObjectsRequestRequest" wsaw:Action="urn:SubmitObjectsRequest"/>
      <wsdl:output message="ns:SubmitObjectsRequestResponse" wsaw:Action="urn:SubmitObjectsRequestResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="xdsrepositorybSoap11Binding" type="ns:xdsrepositorybPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <soap:operation soapAction="urn:RetrieveDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <soap:operation soapAction="urn:ProvideAndRegisterDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <soap:operation soapAction="urn:optimize_retrieve" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsrepositorybSoap12Binding" type="ns:xdsrepositorybPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap12:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap12:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <soap12:operation soapAction="urn:RetrieveDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <soap12:operation soapAction="urn:ProvideAndRegisterDocumentSetRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <soap12:operation soapAction="urn:optimize_retrieve" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap12:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsrepositorybHttpBinding" type="ns:xdsrepositorybPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="runContentValidationService">
      <http:operation location="xdsrepositoryb/runContentValidationService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RetrieveDocumentSetRequest">
      <http:operation location="xdsrepositoryb/RetrieveDocumentSetRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="RetrieveDocumentSetRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="RetrieveDocumentSetRequest"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ProvideAndRegisterDocumentSetRequest">
      <http:operation location="xdsrepositoryb/ProvideAndRegisterDocumentSetRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="ProvideAndRegisterDocumentSetRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="ProvideAndRegisterDocumentSetRequest"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="optimize_retrieve">
      <http:operation location="xdsrepositoryb/optimize_retrieve"/>
      <wsdl:input>
        <mime:content type="text/xml" part="optimize_retrieve"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <http:operation location="xdsrepositoryb/SubmitObjectsRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="xdsrepositoryb">
    <wsdl:port name="xdsrepositorybHttpSoap11Endpoint" binding="ns:xdsrepositorybSoap11Binding">
      <soap:address location="http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsrepositorybHttpSoap12Endpoint" binding="ns:xdsrepositorybSoap12Binding">
      <soap12:address location="http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsrepositorybHttpEndpoint" binding="ns:xdsrepositorybHttpBinding">
      <http:address location="http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://172.16.50.45:9080/axis2/services/xdsrepositoryb.xdsrepositorybHttpSoap12Endpoint/</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:optimize_retrieve" name="optimize_retrieve" bindingOperationName="optimize_retrieve" type="One-Way" inputName="" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:ProvideAndRegisterDocumentSetRequest" name="ProvideAndRegisterDocumentSetRequest" bindingOperationName="ProvideAndRegisterDocumentSetRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:RetrieveDocumentSetRequest" name="RetrieveDocumentSetRequest" bindingOperationName="RetrieveDocumentSetRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:runContentValidationService" name="runContentValidationService" bindingOperationName="runContentValidationService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:SubmitObjectsRequest" name="SubmitObjectsRequest" bindingOperationName="SubmitObjectsRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="xdsregistrybSoap12Binding" type="wsdl" bindingName="{http://serviceimpl.registry.xds.services.hieos.vangent.com}xdsregistrybSoap12Binding" soapVersion="1_2" anonymous="optional" definition="http://172.16.50.45:9080/axis2/services/xdsregistryb?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://172.16.50.45:9080/axis2/services/xdsregistryb?wsdl"><con:part><con:url>http://172.16.50.45:9080/axis2/services/xdsregistryb?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://serviceimpl.registry.xds.services.hieos.vangent.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax29="http://exception.xutil.hieos.vangent.com/xsd" xmlns:ax214="http://response.xutil.hieos.vangent.com/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://serviceimpl.registry.xds.services.hieos.vangent.com" xmlns:ax212="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>xdsregistryb</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://structure.metadata.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="Metadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="allDefinedIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allUids" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associationIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="classifications" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="documentUidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjectIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folderIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folders" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="grokMetadata" type="xs:boolean"/>
          <xs:element minOccurs="0" name="majorObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadata" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadataDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nonObjectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectIdsToDeprecate" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefsOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="original" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjectsThatMustHaveSamePatientId" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackageIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSet" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetPatientId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetSourceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetUniqueId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSets" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidHashMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uriChunkSize" type="xs:int"/>
          <xs:element minOccurs="0" name="v2" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v2SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="version2" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wrapper" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="_metadata_containers" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://response.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="ErrorLogger">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Response">
        <xs:complexContent>
          <xs:extension base="ax214:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="response" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="ax214:RegistryErrorList"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RegistryErrorList">
        <xs:complexContent>
          <xs:extension base="ax214:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="verbose" type="xs:boolean"/>
              <xs:element minOccurs="0" name="version" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.xutil.hieos.vangent.com/xsd" xmlns:ax210="http://serviceimpl.registry.xds.services.hieos.vangent.com">
      <xs:import namespace="http://serviceimpl.registry.xds.services.hieos.vangent.com"/>
      <xs:complexType name="XdsException">
        <xs:complexContent>
          <xs:extension base="ax210:Exception">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MetadataException">
        <xs:complexContent>
          <xs:extension base="ax29:XdsException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://serviceimpl.registry.xds.services.hieos.vangent.com" xmlns:ax215="http://response.xutil.hieos.vangent.com/xsd" xmlns:ax213="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:ax211="http://exception.xutil.hieos.vangent.com/xsd">
      <xs:import namespace="http://exception.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://structure.metadata.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://response.xutil.hieos.vangent.com/xsd"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Exception" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="MetadataException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="MetadataException" nillable="true" type="ax211:MetadataException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="m" nillable="true" type="ax213:Metadata"/>
            <xs:element minOccurs="0" name="response" nillable="true" type="ax215:Response"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AdhocQueryRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="AdhocQueryRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AdhocQueryRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201301UV02">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DocumentRegistry_PRPA_IN201301UV02" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201301UV02Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201302UV02">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DocumentRegistry_PRPA_IN201302UV02" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201302UV02Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201304UV02">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DocumentRegistry_PRPA_IN201304UV02" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201304UV02Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="runContentValidationServiceRequest">
    <wsdl:part name="parameters" element="ns:runContentValidationService"/>
  </wsdl:message>
  <wsdl:message name="runContentValidationServiceResponse">
    <wsdl:part name="parameters" element="ns:runContentValidationServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="MetadataException">
    <wsdl:part name="parameters" element="ns:MetadataException"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201304UV02Request">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201304UV02"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201304UV02Response">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201304UV02Response"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201302UV02Request">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201302UV02"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201302UV02Response">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201302UV02Response"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestRequest">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequest"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestResponse">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201301UV02Request">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201301UV02"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201301UV02Response">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201301UV02Response"/>
  </wsdl:message>
  <wsdl:message name="AdhocQueryRequestRequest">
    <wsdl:part name="parameters" element="ns:AdhocQueryRequest"/>
  </wsdl:message>
  <wsdl:message name="AdhocQueryRequestResponse">
    <wsdl:part name="parameters" element="ns:AdhocQueryRequestResponse"/>
  </wsdl:message>
  <wsdl:portType name="xdsregistrybPortType">
    <wsdl:operation name="runContentValidationService">
      <wsdl:input message="ns:runContentValidationServiceRequest" wsaw:Action="urn:runContentValidationService"/>
      <wsdl:output message="ns:runContentValidationServiceResponse" wsaw:Action="urn:runContentValidationServiceResponse"/>
      <wsdl:fault message="ns:MetadataException" name="MetadataException" wsaw:Action="urn:runContentValidationServiceMetadataException"/>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <wsdl:input message="ns:DocumentRegistry_PRPA_IN201304UV02Request" wsaw:Action="urn:DocumentRegistry_PRPA_IN201304UV02"/>
      <wsdl:output message="ns:DocumentRegistry_PRPA_IN201304UV02Response" wsaw:Action="urn:DocumentRegistry_PRPA_IN201304UV02Response"/>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <wsdl:input message="ns:DocumentRegistry_PRPA_IN201302UV02Request" wsaw:Action="urn:DocumentRegistry_PRPA_IN201302UV02"/>
      <wsdl:output message="ns:DocumentRegistry_PRPA_IN201302UV02Response" wsaw:Action="urn:DocumentRegistry_PRPA_IN201302UV02Response"/>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <wsdl:input message="ns:SubmitObjectsRequestRequest" wsaw:Action="urn:SubmitObjectsRequest"/>
      <wsdl:output message="ns:SubmitObjectsRequestResponse" wsaw:Action="urn:SubmitObjectsRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <wsdl:input message="ns:DocumentRegistry_PRPA_IN201301UV02Request" wsaw:Action="urn:DocumentRegistry_PRPA_IN201301UV02"/>
      <wsdl:output message="ns:DocumentRegistry_PRPA_IN201301UV02Response" wsaw:Action="urn:DocumentRegistry_PRPA_IN201301UV02Response"/>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <wsdl:input message="ns:AdhocQueryRequestRequest" wsaw:Action="urn:AdhocQueryRequest"/>
      <wsdl:output message="ns:AdhocQueryRequestResponse" wsaw:Action="urn:AdhocQueryRequestResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="xdsregistrybSoap11Binding" type="ns:xdsregistrybPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <soap:operation soapAction="urn:DocumentRegistry_PRPA_IN201304UV02" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <soap:operation soapAction="urn:DocumentRegistry_PRPA_IN201302UV02" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <soap:operation soapAction="urn:DocumentRegistry_PRPA_IN201301UV02" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <soap:operation soapAction="urn:AdhocQueryRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsregistrybSoap12Binding" type="ns:xdsregistrybPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap12:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap12:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <soap12:operation soapAction="urn:DocumentRegistry_PRPA_IN201304UV02" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <soap12:operation soapAction="urn:DocumentRegistry_PRPA_IN201302UV02" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap12:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <soap12:operation soapAction="urn:DocumentRegistry_PRPA_IN201301UV02" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <soap12:operation soapAction="urn:AdhocQueryRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsregistrybHttpBinding" type="ns:xdsregistrybPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="runContentValidationService">
      <http:operation location="xdsregistryb/runContentValidationService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <http:operation location="xdsregistryb/DocumentRegistry_PRPA_IN201304UV02"/>
      <wsdl:input>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201304UV02"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201304UV02"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <http:operation location="xdsregistryb/DocumentRegistry_PRPA_IN201302UV02"/>
      <wsdl:input>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201302UV02"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201302UV02"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <http:operation location="xdsregistryb/SubmitObjectsRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <http:operation location="xdsregistryb/DocumentRegistry_PRPA_IN201301UV02"/>
      <wsdl:input>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201301UV02"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201301UV02"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <http:operation location="xdsregistryb/AdhocQueryRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="AdhocQueryRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="AdhocQueryRequest"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="xdsregistryb">
    <wsdl:port name="xdsregistrybHttpSoap11Endpoint" binding="ns:xdsregistrybSoap11Binding">
      <soap:address location="http://172.16.50.45:9080/axis2/services/xdsregistryb.xdsregistrybHttpSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsregistrybHttpSoap12Endpoint" binding="ns:xdsregistrybSoap12Binding">
      <soap12:address location="http://172.16.50.45:9080/axis2/services/xdsregistryb.xdsregistrybHttpSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsregistrybHttpEndpoint" binding="ns:xdsregistrybHttpBinding">
      <http:address location="http://172.16.50.45:9080/axis2/services/xdsregistryb.xdsregistrybHttpEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint-DocRegistry}</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:AdhocQueryRequest" name="AdhocQueryRequest" bindingOperationName="AdhocQueryRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:DocumentRegistry_PRPA_IN201301UV02" name="DocumentRegistry_PRPA_IN201301UV02" bindingOperationName="DocumentRegistry_PRPA_IN201301UV02" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:DocumentRegistry_PRPA_IN201302UV02" name="DocumentRegistry_PRPA_IN201302UV02" bindingOperationName="DocumentRegistry_PRPA_IN201302UV02" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:DocumentRegistry_PRPA_IN201304UV02" name="DocumentRegistry_PRPA_IN201304UV02" bindingOperationName="DocumentRegistry_PRPA_IN201304UV02" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:runContentValidationService" name="runContentValidationService" bindingOperationName="runContentValidationService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:SubmitObjectsRequest" name="SubmitObjectsRequest" bindingOperationName="SubmitObjectsRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="xdsregistrybSoap11Binding" type="wsdl" bindingName="{http://serviceimpl.registry.xds.services.hieos.vangent.com}xdsregistrybSoap11Binding" soapVersion="1_1" anonymous="optional" definition="http://172.16.50.45:9080/axis2/services/xdsregistryb?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://172.16.50.45:9080/axis2/services/xdsregistryb?wsdl"><con:part><con:url>http://172.16.50.45:9080/axis2/services/xdsregistryb?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://serviceimpl.registry.xds.services.hieos.vangent.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax29="http://exception.xutil.hieos.vangent.com/xsd" xmlns:ax214="http://response.xutil.hieos.vangent.com/xsd" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://serviceimpl.registry.xds.services.hieos.vangent.com" xmlns:ax212="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/">
  <wsdl:documentation>xdsregistryb</wsdl:documentation>
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://structure.metadata.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="Metadata">
        <xs:sequence>
          <xs:element minOccurs="0" name="allDefinedIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="allUids" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associationIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="associations" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="classifications" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="documentUidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjectIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="extrinsicObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folderIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="folders" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="grokMetadata" type="xs:boolean"/>
          <xs:element minOccurs="0" name="majorObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadata" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="metadataDescription" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="nonObjectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectIdsToDeprecate" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefs" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="objectRefsOnly" type="xs:boolean"/>
          <xs:element minOccurs="0" name="original" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjects" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="referencedObjectsThatMustHaveSamePatientId" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackageIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="registryPackages" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSet" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetIds" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="submissionSetPatientId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetSourceId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSetUniqueId" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="submissionSets" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidHashMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uidMap" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="uriChunkSize" type="xs:int"/>
          <xs:element minOccurs="0" name="v2" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v2SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="v3SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="version2" type="xs:boolean"/>
          <xs:element minOccurs="0" name="wrapper" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="_metadata_containers" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://response.xutil.hieos.vangent.com/xsd">
      <xs:complexType name="ErrorLogger">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="Response">
        <xs:complexContent>
          <xs:extension base="ax214:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="response" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="root" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="ax214:RegistryErrorList"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="RegistryErrorList">
        <xs:complexContent>
          <xs:extension base="ax214:ErrorLogger">
            <xs:sequence>
              <xs:element minOccurs="0" name="errorsAndWarnings" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="registryErrorList" nillable="true" type="xs:anyType"/>
              <xs:element minOccurs="0" name="status" nillable="true" type="xs:string"/>
              <xs:element minOccurs="0" name="verbose" type="xs:boolean"/>
              <xs:element minOccurs="0" name="version" type="xs:short"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.xutil.hieos.vangent.com/xsd" xmlns:ax210="http://serviceimpl.registry.xds.services.hieos.vangent.com">
      <xs:import namespace="http://serviceimpl.registry.xds.services.hieos.vangent.com"/>
      <xs:complexType name="XdsException">
        <xs:complexContent>
          <xs:extension base="ax210:Exception">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="MetadataException">
        <xs:complexContent>
          <xs:extension base="ax29:XdsException">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://serviceimpl.registry.xds.services.hieos.vangent.com" xmlns:ax215="http://response.xutil.hieos.vangent.com/xsd" xmlns:ax213="http://structure.metadata.xutil.hieos.vangent.com/xsd" xmlns:ax211="http://exception.xutil.hieos.vangent.com/xsd">
      <xs:import namespace="http://exception.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://structure.metadata.xutil.hieos.vangent.com/xsd"/>
      <xs:import namespace="http://response.xutil.hieos.vangent.com/xsd"/>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="Exception" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="MetadataException">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="MetadataException" nillable="true" type="ax211:MetadataException"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationService">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="m" nillable="true" type="ax213:Metadata"/>
            <xs:element minOccurs="0" name="response" nillable="true" type="ax215:Response"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="runContentValidationServiceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AdhocQueryRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="AdhocQueryRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AdhocQueryRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201301UV02">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DocumentRegistry_PRPA_IN201301UV02" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201301UV02Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201302UV02">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DocumentRegistry_PRPA_IN201302UV02" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201302UV02Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201304UV02">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DocumentRegistry_PRPA_IN201304UV02" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DocumentRegistry_PRPA_IN201304UV02Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="SubmitObjectsRequest" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SubmitObjectsRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" nillable="true" type="xs:anyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="runContentValidationServiceRequest">
    <wsdl:part name="parameters" element="ns:runContentValidationService"/>
  </wsdl:message>
  <wsdl:message name="runContentValidationServiceResponse">
    <wsdl:part name="parameters" element="ns:runContentValidationServiceResponse"/>
  </wsdl:message>
  <wsdl:message name="MetadataException">
    <wsdl:part name="parameters" element="ns:MetadataException"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201304UV02Request">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201304UV02"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201304UV02Response">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201304UV02Response"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201302UV02Request">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201302UV02"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201302UV02Response">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201302UV02Response"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestRequest">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequest"/>
  </wsdl:message>
  <wsdl:message name="SubmitObjectsRequestResponse">
    <wsdl:part name="parameters" element="ns:SubmitObjectsRequestResponse"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201301UV02Request">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201301UV02"/>
  </wsdl:message>
  <wsdl:message name="DocumentRegistry_PRPA_IN201301UV02Response">
    <wsdl:part name="parameters" element="ns:DocumentRegistry_PRPA_IN201301UV02Response"/>
  </wsdl:message>
  <wsdl:message name="AdhocQueryRequestRequest">
    <wsdl:part name="parameters" element="ns:AdhocQueryRequest"/>
  </wsdl:message>
  <wsdl:message name="AdhocQueryRequestResponse">
    <wsdl:part name="parameters" element="ns:AdhocQueryRequestResponse"/>
  </wsdl:message>
  <wsdl:portType name="xdsregistrybPortType">
    <wsdl:operation name="runContentValidationService">
      <wsdl:input message="ns:runContentValidationServiceRequest" wsaw:Action="urn:runContentValidationService"/>
      <wsdl:output message="ns:runContentValidationServiceResponse" wsaw:Action="urn:runContentValidationServiceResponse"/>
      <wsdl:fault message="ns:MetadataException" name="MetadataException" wsaw:Action="urn:runContentValidationServiceMetadataException"/>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <wsdl:input message="ns:DocumentRegistry_PRPA_IN201304UV02Request" wsaw:Action="urn:DocumentRegistry_PRPA_IN201304UV02"/>
      <wsdl:output message="ns:DocumentRegistry_PRPA_IN201304UV02Response" wsaw:Action="urn:DocumentRegistry_PRPA_IN201304UV02Response"/>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <wsdl:input message="ns:DocumentRegistry_PRPA_IN201302UV02Request" wsaw:Action="urn:DocumentRegistry_PRPA_IN201302UV02"/>
      <wsdl:output message="ns:DocumentRegistry_PRPA_IN201302UV02Response" wsaw:Action="urn:DocumentRegistry_PRPA_IN201302UV02Response"/>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <wsdl:input message="ns:SubmitObjectsRequestRequest" wsaw:Action="urn:SubmitObjectsRequest"/>
      <wsdl:output message="ns:SubmitObjectsRequestResponse" wsaw:Action="urn:SubmitObjectsRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <wsdl:input message="ns:DocumentRegistry_PRPA_IN201301UV02Request" wsaw:Action="urn:DocumentRegistry_PRPA_IN201301UV02"/>
      <wsdl:output message="ns:DocumentRegistry_PRPA_IN201301UV02Response" wsaw:Action="urn:DocumentRegistry_PRPA_IN201301UV02Response"/>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <wsdl:input message="ns:AdhocQueryRequestRequest" wsaw:Action="urn:AdhocQueryRequest"/>
      <wsdl:output message="ns:AdhocQueryRequestResponse" wsaw:Action="urn:AdhocQueryRequestResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="xdsregistrybSoap11Binding" type="ns:xdsregistrybPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <soap:operation soapAction="urn:DocumentRegistry_PRPA_IN201304UV02" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <soap:operation soapAction="urn:DocumentRegistry_PRPA_IN201302UV02" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <soap:operation soapAction="urn:DocumentRegistry_PRPA_IN201301UV02" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <soap:operation soapAction="urn:AdhocQueryRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsregistrybSoap12Binding" type="ns:xdsregistrybPortType">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <wsdl:operation name="runContentValidationService">
      <soap12:operation soapAction="urn:runContentValidationService" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MetadataException">
        <soap12:fault use="literal" name="MetadataException"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <soap12:operation soapAction="urn:DocumentRegistry_PRPA_IN201304UV02" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <soap12:operation soapAction="urn:DocumentRegistry_PRPA_IN201302UV02" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <soap12:operation soapAction="urn:SubmitObjectsRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <soap12:operation soapAction="urn:DocumentRegistry_PRPA_IN201301UV02" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <soap12:operation soapAction="urn:AdhocQueryRequest" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="xdsregistrybHttpBinding" type="ns:xdsregistrybPortType">
    <http:binding verb="POST"/>
    <wsdl:operation name="runContentValidationService">
      <http:operation location="xdsregistryb/runContentValidationService"/>
      <wsdl:input>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="runContentValidationService"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201304UV02">
      <http:operation location="xdsregistryb/DocumentRegistry_PRPA_IN201304UV02"/>
      <wsdl:input>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201304UV02"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201304UV02"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201302UV02">
      <http:operation location="xdsregistryb/DocumentRegistry_PRPA_IN201302UV02"/>
      <wsdl:input>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201302UV02"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201302UV02"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SubmitObjectsRequest">
      <http:operation location="xdsregistryb/SubmitObjectsRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="SubmitObjectsRequest"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DocumentRegistry_PRPA_IN201301UV02">
      <http:operation location="xdsregistryb/DocumentRegistry_PRPA_IN201301UV02"/>
      <wsdl:input>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201301UV02"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="DocumentRegistry_PRPA_IN201301UV02"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AdhocQueryRequest">
      <http:operation location="xdsregistryb/AdhocQueryRequest"/>
      <wsdl:input>
        <mime:content type="text/xml" part="AdhocQueryRequest"/>
      </wsdl:input>
      <wsdl:output>
        <mime:content type="text/xml" part="AdhocQueryRequest"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="xdsregistryb">
    <wsdl:port name="xdsregistrybHttpSoap11Endpoint" binding="ns:xdsregistrybSoap11Binding">
      <soap:address location="http://172.16.50.45:9080/axis2/services/xdsregistryb.xdsregistrybHttpSoap11Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsregistrybHttpSoap12Endpoint" binding="ns:xdsregistrybSoap12Binding">
      <soap12:address location="http://172.16.50.45:9080/axis2/services/xdsregistryb.xdsregistrybHttpSoap12Endpoint/"/>
    </wsdl:port>
    <wsdl:port name="xdsregistrybHttpEndpoint" binding="ns:xdsregistrybHttpBinding">
      <http:address location="http://172.16.50.45:9080/axis2/services/xdsregistryb.xdsregistrybHttpEndpoint/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://172.16.50.45:9080/axis2/services/xdsregistryb.xdsregistrybHttpSoap11Endpoint/</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:AdhocQueryRequest" name="AdhocQueryRequest" bindingOperationName="AdhocQueryRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:DocumentRegistry_PRPA_IN201301UV02" name="DocumentRegistry_PRPA_IN201301UV02" bindingOperationName="DocumentRegistry_PRPA_IN201301UV02" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:DocumentRegistry_PRPA_IN201302UV02" name="DocumentRegistry_PRPA_IN201302UV02" bindingOperationName="DocumentRegistry_PRPA_IN201302UV02" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:DocumentRegistry_PRPA_IN201304UV02" name="DocumentRegistry_PRPA_IN201304UV02" bindingOperationName="DocumentRegistry_PRPA_IN201304UV02" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:runContentValidationService" name="runContentValidationService" bindingOperationName="runContentValidationService" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="urn:SubmitObjectsRequest" name="SubmitObjectsRequest" bindingOperationName="SubmitObjectsRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="NhincProxyDocQueryBindingSoap11" type="wsdl" bindingName="{urn:gov:hhs:fha:nhinc:nhincproxydocquery}NhincProxyDocQueryBindingSoap11" soapVersion="1_1" anonymous="optional" definition="http://192.168.25.157:9080/NhinConnect/NhincProxyDocQuery?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://192.168.25.157:9080/NhinConnect/NhincProxyDocQuery?wsdl"><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/lcm.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <!--Import the rs.xsd file with XML schema for base rs related schema-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd"/>
  <element name="SubmitObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The SubmitObjectsRequest allows one to submit a list of RegistryObject elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the id attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="UpdateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The UpdateObjectsRequest allows one to update a list of RegistryObject elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the id attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="ApproveObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList and AdhocQuery identify the list of
        objects being approved.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="DeprecateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList and AdhocQuery identify the list of
        objects being deprecated.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="UndeprecateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList is the list of
        refs to the registry entrys being un-deprecated.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="RemoveObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList is the list of
        refs to the registry entrys being removed</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:DeletionScopeType:DeleteAll" name="deletionScope" type="rim:referenceURI" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="RelocateObjectsRequest">
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="1" name="SourceRegistry" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="DestinationRegistry" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="OwnerAtSource" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="OwnerAtDestination" type="rim:ObjectRefType"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AcceptObjectsRequest">
    <!--The ObjectRefList must only contain local ObjectRefs such that they do not specify home attribute-->
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <attribute name="correlationId" type="anyURI" use="required"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../xmlsoap.org/addressing.xsd</con:url><con:content><![CDATA[<xs:schema blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
  <!--//////////////////// WS-Addressing ////////////////////-->
  <!--Endpoint reference-->
  <xs:element name="EndpointReference" type="wsa:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="wsa:AttributedURI"/>
      <xs:element minOccurs="0" name="ReferenceProperties" type="wsa:ReferencePropertiesType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="wsa:ReferenceParametersType"/>
      <xs:element minOccurs="0" name="PortType" type="wsa:AttributedQName"/>
      <xs:element minOccurs="0" name="ServiceName" type="wsa:ServiceNameType"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax">
        <xs:annotation>
          <xs:documentation>If "Policy" elements from namespace "http://schemas.xmlsoap.org/ws/2002/12/policy#policy" are used, they must appear first (before any extensibility elements).</xs:documentation>
        </xs:annotation>
      </xs:any>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="ReferencePropertiesType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServiceNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:attribute name="PortName" type="xs:NCName"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Message information header blocks-->
  <xs:element name="MessageID" type="wsa:AttributedURI"/>
  <xs:element name="RelatesTo" type="wsa:Relationship"/>
  <xs:element name="To" type="wsa:AttributedURI"/>
  <xs:element name="Action" type="wsa:AttributedURI"/>
  <xs:element name="From" type="wsa:EndpointReferenceType"/>
  <xs:element name="ReplyTo" type="wsa:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="wsa:EndpointReferenceType"/>
  <xs:complexType name="Relationship">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute name="RelationshipType" type="xs:QName" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeValues">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="wsa:Reply"/>
    </xs:restriction>
  </xs:simpleType>
  <!--June 19, 2007: The ReplyAfter element is deprecated. The name of this element does not match the
    name (RetryAfter) used in the specification (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).-->
  <xs:element name="ReplyAfter" type="wsa:ReplyAfterType"/>
  <xs:complexType name="ReplyAfterType">
    <xs:simpleContent>
      <xs:extension base="xs:nonNegativeInteger">
        <xs:anyAttribute namespace="##other"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--June 19, 2007: The RetryAfter element has been added to be consistent with the specification
    (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).-->
  <xs:element name="RetryAfter" type="wsa:RetryAfterType"/>
  <xs:complexType name="RetryAfterType">
    <xs:simpleContent>
      <xs:extension base="xs:nonNegativeInteger">
        <xs:anyAttribute namespace="##other"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="FaultSubcodeValues">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="wsa:InvalidMessageInformationHeader"/>
      <xs:enumeration value="wsa:MessageInformationHeaderRequired"/>
      <xs:enumeration value="wsa:DestinationUnreachable"/>
      <xs:enumeration value="wsa:ActionNotSupported"/>
      <xs:enumeration value="wsa:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="Action" type="xs:anyURI"/>
  <!--Common declarations and definitions-->
  <xs:complexType name="AttributedQName">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="AttributedURI">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/bf-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd">
    <xsd:annotation>
      <xsd:documentation>Get access to the xml: attribute groups for xml:lang as declared on 'schema'
        and 'documentation' below</xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <!--====================== BaseFault Types =======================-->
  <xsd:element name="BaseFault" type="wsrf-bf:BaseFaultType"/>
  <xsd:complexType name="BaseFaultType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      <xsd:element maxOccurs="1" minOccurs="1" name="Timestamp" type="xsd:dateTime"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="Originator" type="wsa:EndpointReferenceType"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="ErrorCode">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="xsd:anyType">
              <xsd:attribute name="dialect" type="xsd:anyURI" use="required"/>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Description">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="xml:lang" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="FaultCause">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##other" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/bf-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd">
    <xsd:annotation>
      <xsd:documentation>Get access to the xml: attribute groups for xml:lang as declared on 'schema'
        and 'documentation' below</xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <!--====================== BaseFault Types =======================-->
  <xsd:element name="BaseFault" type="wsrf-bf:BaseFaultType"/>
  <xsd:complexType name="BaseFaultType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      <xsd:element maxOccurs="1" minOccurs="1" name="Timestamp" type="xsd:dateTime"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="Originator" type="wsa:EndpointReferenceType"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="ErrorCode">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="xsd:anyType">
              <xsd:attribute name="dialect" type="xsd:anyURI" use="required"/>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Description">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="xml:lang" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="FaultCause">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##other" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/b-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/b-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--======================== Imports  ============================-->
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsrf/bf-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/bf-2.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/t-1" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/t-1.xsd"/>
  <!--===================== Misc. Helper Types =====================-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="TopicExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
    <xsd:anyAttribute/>
  </xsd:complexType>
  <xsd:complexType name="FilterType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionPolicyType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=============== Resource Property Related  ===================-->
  <!--======== Resource Properties for NotificationProducer ========-->
  <xsd:element name="TopicExpression" type="wsnt:TopicExpressionType"/>
  <xsd:element default="true" name="FixedTopicSet" type="xsd:boolean"/>
  <xsd:element name="TopicExpressionDialect" type="xsd:anyURI"/>
  <xsd:element name="NotificationProducerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpression"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:FixedTopicSet"/>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpressionDialect"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wstop:TopicSet"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--======== Resource Properties for SubscriptionManager =========-->
  <xsd:element name="ConsumerReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Filter" type="wsnt:FilterType"/>
  <xsd:element name="SubscriptionPolicy" type="wsnt:SubscriptionPolicyType"/>
  <xsd:element name="CreationTime" type="xsd:dateTime"/>
  <xsd:element name="SubscriptionManagerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:ConsumerReference"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Filter"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionPolicy"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CreationTime"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================= Notification Metadata  =====================-->
  <xsd:element name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
  <xsd:element name="ProducerReference" type="wsa:EndpointReferenceType"/>
  <!--================== Message Helper Types  =====================-->
  <xsd:complexType name="NotificationMessageHolderType">
    <xsd:sequence>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionReference"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Topic"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:ProducerReference"/>
      <xsd:element name="Message">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotificationMessage" type="wsnt:NotificationMessageHolderType"/>
  <!--========== Message Types for NotificationConsumer  ===========-->
  <xsd:element name="Notify">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="1" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--========== Message Types for NotificationProducer  ===========-->
  <xsd:simpleType name="AbsoluteOrRelativeTimeType">
    <xsd:union memberTypes="xsd:dateTime xsd:duration"/>
  </xsd:simpleType>
  <xsd:element name="CurrentTime" type="xsd:dateTime"/>
  <xsd:element name="TerminationTime" nillable="true" type="xsd:dateTime"/>
  <xsd:element name="ProducerProperties" type="wsnt:QueryExpressionType"/>
  <xsd:element name="MessageContent" type="wsnt:QueryExpressionType"/>
  <xsd:element name="UseRaw">
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="Subscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="ConsumerReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="Filter" type="wsnt:FilterType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="InitialTerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="SubscriptionPolicy">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:TerminationTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessage">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessageResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="SubscribeCreationFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubscribeCreationFailedFault" type="wsnt:SubscribeCreationFailedFaultType"/>
  <xsd:complexType name="InvalidFilterFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="UnknownFilter" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidFilterFault" type="wsnt:InvalidFilterFaultType"/>
  <xsd:complexType name="TopicExpressionDialectUnknownFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicExpressionDialectUnknownFault" type="wsnt:TopicExpressionDialectUnknownFaultType"/>
  <xsd:complexType name="InvalidTopicExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidTopicExpressionFault" type="wsnt:InvalidTopicExpressionFaultType"/>
  <xsd:complexType name="TopicNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNotSupportedFault" type="wsnt:TopicNotSupportedFaultType"/>
  <xsd:complexType name="MultipleTopicsSpecifiedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="MultipleTopicsSpecifiedFault" type="wsnt:MultipleTopicsSpecifiedFaultType"/>
  <xsd:complexType name="InvalidProducerPropertiesExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidProducerPropertiesExpressionFault" type="wsnt:InvalidProducerPropertiesExpressionFaultType"/>
  <xsd:complexType name="InvalidMessageContentExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidMessageContentExpressionFault" type="wsnt:InvalidMessageContentExpressionFaultType"/>
  <xsd:complexType name="UnrecognizedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnrecognizedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnrecognizedPolicyRequestFault" type="wsnt:UnrecognizedPolicyRequestFaultType"/>
  <xsd:complexType name="UnsupportedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnsupportedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnsupportedPolicyRequestFault" type="wsnt:UnsupportedPolicyRequestFaultType"/>
  <xsd:complexType name="NotifyMessageNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NotifyMessageNotSupportedFault" type="wsnt:NotifyMessageNotSupportedFaultType"/>
  <xsd:complexType name="UnacceptableInitialTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableInitialTerminationTimeFault" type="wsnt:UnacceptableInitialTerminationTimeFaultType"/>
  <xsd:complexType name="NoCurrentMessageOnTopicFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NoCurrentMessageOnTopicFault" type="wsnt:NoCurrentMessageOnTopicFaultType"/>
  <!--======== Message Types for PullPoint  ========================-->
  <xsd:element name="GetMessages">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="MaximumNumber" type="xsd:nonNegativeInteger"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetMessagesResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToGetMessagesFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToGetMessagesFault" type="wsnt:UnableToGetMessagesFaultType"/>
  <xsd:complexType name="UnableToDestroyPullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroyPullPointFault" type="wsnt:UnableToDestroyPullPointFaultType"/>
  <!--======== Message Types for Create PullPoint  =================-->
  <xsd:element name="CreatePullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreatePullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="PullPoint" type="wsa:EndpointReferenceType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToCreatePullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToCreatePullPointFault" type="wsnt:UnableToCreatePullPointFaultType"/>
  <!--======== Message Types for Base SubscriptionManager  =========-->
  <xsd:element name="Renew">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="TerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RenewResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:TerminationTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnacceptableTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableTerminationTimeFault" type="wsnt:UnacceptableTerminationTimeFaultType"/>
  <xsd:element name="Unsubscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UnsubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToDestroySubscriptionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroySubscriptionFault" type="wsnt:UnableToDestroySubscriptionFaultType"/>
  <!--====== Message Types for Pausable SubscriptionManager  =======-->
  <xsd:element name="PauseSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PauseSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PauseFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PauseFailedFault" type="wsnt:PauseFailedFaultType"/>
  <xsd:complexType name="ResumeFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ResumeFailedFault" type="wsnt:ResumeFailedFaultType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../nhinc/common/Cdc.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="http://www.hhs.gov/healthit/nhin/cdc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.hhs.gov/healthit/nhin/cdc">
  <xsd:complexType name="CdcBioPackageSubscriptionCriteriaType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="Frequency">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="FrequencyUnits" type="xsd:integer"/>
            <xsd:element name="FrequencyDuration" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="SizeThreshold" type="xsd:integer"/>
      <xsd:element name="MessageTypes" type="tns:MessageTypesType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageTypesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="MessageType" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="CdcBioPackageSubscriptionCriteria" type="tns:CdcBioPackageSubscriptionCriteriaType"/>
  <xsd:simpleType name="CdcBioPackagePayloadType">
    <xsd:restriction base="xsd:base64Binary"/>
  </xsd:simpleType>
  <xsd:element name="CdcBioPackagePayload" type="tns:CdcBioPackagePayloadType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/query.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rim.xsd"/>
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rs.xsd"/>
  <complexType name="ResponseOptionType">
    <attribute default="RegistryObject" name="returnType">
      <simpleType>
        <restriction base="NCName">
          <enumeration value="ObjectRef"/>
          <enumeration value="RegistryObject"/>
          <enumeration value="LeafClass"/>
          <enumeration value="LeafClassWithRepositoryItem"/>
        </restriction>
      </simpleType>
    </attribute>
    <attribute default="false" name="returnComposedObjects" type="boolean"/>
  </complexType>
  <element name="ResponseOption" type="tns:ResponseOptionType"/>
  <element name="AdhocQueryRequest">
    <annotation>
      <documentation xml:lang="en">An Ad hoc query request specifies an ad hoc query.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="tns:ResponseOption"/>
            <element ref="rim:AdhocQuery"/>
          </sequence>
          <attribute default="false" name="federated" type="boolean" use="optional"/>
          <attribute name="federation" type="anyURI" use="optional"/>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute default="-1" name="maxResults" type="integer"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AdhocQueryResponse">
    <annotation>
      <documentation xml:lang="en">The response includes a RegistryObjectList which has zero or more
        RegistryObjects that match the query specified in AdhocQueryRequest.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryResponseType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute name="totalResultCount" type="integer" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <complexType abstract="true" name="FilterQueryType">
    <sequence>
      <element maxOccurs="1" minOccurs="0" name="PrimaryFilter" type="tns:FilterType"/>
    </sequence>
  </complexType>
  <complexType abstract="true" name="BranchType">
    <complexContent>
      <extension base="tns:FilterQueryType"></extension>
    </complexContent>
  </complexType>
  <complexType name="InternationalStringBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="LocalizedStringFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="SlotBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="RegistryObjectQueryType">
    <complexContent>
      <extension base="tns:FilterQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="SlotBranch" type="tns:SlotBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="NameBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="DescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfoFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifierQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ObjectTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="StatusQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="SourceAssociationQuery" type="tns:AssociationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TargetAssociationQuery" type="tns:AssociationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObjectQuery" type="tns:RegistryObjectQueryType"/>
  <complexType name="AssociationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="AssociationTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="SourceObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="TargetObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AssociationQuery" type="tns:AssociationQueryType"/>
  <complexType name="AuditableEventQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AffectedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="EventTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="UserQuery" type="tns:UserQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEventQuery" type="tns:AuditableEventQueryType"/>
  <complexType name="ClassificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationSchemeQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ClassifiedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationNodeQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationQuery" type="tns:ClassificationQueryType"/>
  <complexType name="ClassificationNodeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNodeQuery" type="tns:ClassificationNodeQueryType"/>
  <complexType name="ClassificationSchemeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="NodeTypeQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
  <complexType name="ExternalIdentifierQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
          <element maxOccurs="1" minOccurs="0" name="IdentificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifierQuery" type="tns:ExternalIdentifierQueryType"/>
  <complexType name="ExternalLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLinkQuery" type="tns:ExternalLinkQueryType"/>
  <complexType name="ExtrinsicObjectQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfoFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExtrinsicObjectQuery" type="tns:ExtrinsicObjectQueryType"/>
  <complexType name="OrganizationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildOrganizationQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="PrimaryContactQuery" type="tns:PersonQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="OrganizationQuery" type="tns:OrganizationQueryType"/>
  <complexType name="RegistryPackageQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType"></extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackageQuery" type="tns:RegistryPackageQueryType"/>
  <complexType name="ServiceQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBindingQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceQuery" type="tns:ServiceQueryType"/>
  <complexType name="ServiceBindingQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLinkQuery"/>
          <element maxOccurs="1" minOccurs="0" name="TargetBindingQuery" type="tns:ServiceBindingQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBindingQuery" type="tns:ServiceBindingQueryType"/>
  <complexType name="SpecificationLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="UsageDescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceBindingQuery"/>
          <element maxOccurs="1" minOccurs="0" name="SpecificationObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLinkQuery" type="tns:SpecificationLinkQueryType"/>
  <complexType name="PersonQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="PersonNameFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="PersonQuery" type="tns:PersonQueryType"/>
  <complexType name="UserQueryType">
    <complexContent>
      <extension base="tns:PersonQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="UserQuery" type="tns:UserQueryType"/>
  <complexType name="RegistryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="OperatorQuery" type="tns:OrganizationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryQuery" type="tns:RegistryQueryType"/>
  <complexType name="FederationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FederationQuery" type="tns:FederationQueryType"/>
  <complexType name="AdhocQueryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryExpressionBranch" type="tns:QueryExpressionBranchType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQueryQuery" type="tns:AdhocQueryQueryType"/>
  <complexType name="QueryExpressionBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryLanguageQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="NotificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotificationQuery" type="tns:NotificationQueryType"/>
  <complexType name="SubscriptionQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="SelectorQuery" type="tns:AdhocQueryQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubscriptionQuery" type="tns:SubscriptionQueryType"/>
  <!--The Filter type hierarchy-->
  <complexType name="FilterType">
    <attribute default="false" name="negate" type="boolean"/>
  </complexType>
  <element abstract="true" name="Filter" type="tns:FilterType"/>
  <complexType name="CompoundFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <sequence>
          <element maxOccurs="1" minOccurs="1" name="LeftFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="1" name="RightFilter" type="tns:FilterType"/>
        </sequence>
        <attribute name="logicalOperator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="AND"/>
              <enumeration value="OR"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="CompoundFilter" type="tns:CompoundFilterType"/>
  <complexType abstract="true" name="SimpleFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <attribute name="domainAttribute" type="string" use="required"/>
        <attribute name="comparator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="LE"/>
              <enumeration value="LT"/>
              <enumeration value="GE"/>
              <enumeration value="GT"/>
              <enumeration value="EQ"/>
              <enumeration value="NE"/>
              <enumeration value="Like"/>
              <enumeration value="NotLike"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="BooleanFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="boolean" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="BooleanFilter" type="tns:BooleanFilterType"/>
  <complexType name="IntegerFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="integer" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="IntegerFilter" type="tns:IntegerFilterType"/>
  <complexType name="FloatFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="float" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FloatFilter" type="tns:FloatFilterType"/>
  <complexType name="DateTimeFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="DateTimeFilter" type="tns:DateTimeFilterType"/>
  <complexType name="StringFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="StringFilter" type="tns:StringFilterType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/rs.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/rim.xsd"/>
  <complexType name="RegistryRequestType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry requests</documentation>
    </annotation>
    <sequence>
      <!--every request may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="RequestSlotList" type="rim:SlotListType"/>
    </sequence>
    <attribute name="id" type="anyURI" use="optional"/>
    <!--Comment may be used by requestor to describe the request. Used in VersionInfo.comment-->
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <element name="RegistryRequest" type="tns:RegistryRequestType"/>
  <element name="RegistryErrorList">
    <annotation>
      <documentation xml:lang="en">The RegistryErrorList is derived from the ErrorList element from the ebXML Message Service Specification</documentation>
    </annotation>
    <complexType>
      <sequence>
        <element maxOccurs="unbounded" ref="tns:RegistryError"/>
      </sequence>
      <attribute name="highestSeverity" type="rim:referenceURI" use="optional"/>
    </complexType>
  </element>
  <element name="RegistryError">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="codeContext" type="string" use="required"/>
          <attribute name="errorCode" type="string" use="required"/>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" name="severity" type="rim:referenceURI"/>
          <attribute name="location" type="string" use="optional"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <complexType name="RegistryResponseType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry responses</documentation>
    </annotation>
    <sequence>
      <!--every response may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="ResponseSlotList" type="rim:SlotListType"/>
      <element minOccurs="0" ref="tns:RegistryErrorList"/>
    </sequence>
    <attribute name="status" type="rim:referenceURI" use="required"/>
    <!--id is the request if for the request for which this is a response-->
    <attribute name="requestId" type="anyURI" use="optional"/>
  </complexType>
  <element name="RegistryResponse" type="tns:RegistryResponseType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/t-1.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/t-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--=============== utility type definitions  ====================-->
  <xsd:complexType mixed="true" name="Documentation">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType abstract="true" mixed="false" name="ExtensibleDocumented">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="documentation" type="wstop:Documentation"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <!--================== Topic-Namespace Related  ================-->
  <xsd:complexType name="TopicNamespaceType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="wstop:TopicType">
                  <xsd:attribute name="parent" type="wstop:ConcreteTopicExpression"/>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName"/>
        <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNamespace" type="wstop:TopicNamespaceType">
    <xsd:unique name="rootTopicUniqueness">
      <xsd:selector xpath="wstop:Topic"/>
      <xsd:field xpath="@name"/>
    </xsd:unique>
  </xsd:element>
  <xsd:attribute name="topicNamespaceLocation" type="xsd:anyURI"/>
  <!--===================== Topic Related  =========================-->
  <xsd:complexType name="TopicType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessagePattern" type="wstop:QueryExpressionType"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic" type="wstop:TopicType">
            <xsd:unique name="childTopicUniqueness">
              <xsd:selector xpath="wstop:topic"/>
              <xsd:field xpath="@name"/>
            </xsd:unique>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
        <xsd:attribute name="messageTypes">
          <xsd:simpleType>
            <xsd:list itemType="xsd:QName"/>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================ Topic Set Related  ===================-->
  <xsd:complexType name="TopicSetType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicSet" type="wstop:TopicSetType"/>
  <xsd:attribute default="false" name="topic" type="xsd:boolean"/>
  <!--================ Topic Expression Related  ===================-->
  <xsd:simpleType name="FullTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>TopicPathExpression  ::=   TopicPath ( '|' TopicPath )*  
        TopicPath       ::=   RootTopic ChildTopicExpression* 
        RootTopic       ::=   NamespacePrefix? ('//')? (NCName | '*')  
        NamespacePrefix ::=   NCName ':'      
        ChildTopicExpression ::=   '/' '/'? (QName | NCName | '*'| '.')</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*(\|([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ConcreteTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    ConcreteTopicPath    ::=   RootTopic ChildTopic*    
    RootTopic            ::=   QName  
    ChildTopic           ::=   '/' (QName | NCName)</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)(/([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimpleTopicExpression">
    <xsd:restriction base="xsd:QName">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    RootTopic            ::=   QName</xsd:documentation>
      </xsd:annotation>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/XDS.b_DocumentRepository.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:ihe:iti:xds-b:2007" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:ihe:iti:xds-b:2007" xmlns:lcm="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/lcm.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/query.xsd"/>
  <xs:complexType name="RetrieveDocumentSetRequestType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="DocumentRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="HomeCommunityId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This corresponds to the home attribute of the Identifiable class in regrep RIM (regrep-rim-3.0-os.pdf, page 20)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="RepositoryUniqueId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This is the XDSDocumentEntry.repositoryUniqueId attribute in the XDS metadata</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="DocumentUniqueId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This is the XDSDocumentEntry.uniqueId attribute in the XDS metadata</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RetrieveDocumentSetResponseType">
    <xs:sequence>
      <xs:element ref="rs:RegistryResponse"/>
      <xs:sequence minOccurs="0">
        <xs:element maxOccurs="unbounded" name="DocumentResponse">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="HomeCommunityId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This corresponds to the home attribute of the Identifiable class in regrep RIM (regrep-rim-3.0-os.pdf, page 20)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RepositoryUniqueId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This is the XDSDocumentEntry.repositoryUniqueId attribute in the XDS metadata</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DocumentUniqueId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This is the XDSDocumentEntry.uniqueId attribute in the XDS metadata</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="mimeType" type="rim:LongName"/>
              <xs:element name="Document" type="xs:base64Binary"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RetrieveDocumentSetRequest" type="RetrieveDocumentSetRequestType"/>
  <xs:element name="RetrieveDocumentSetResponse" type="RetrieveDocumentSetResponseType"/>
  <xs:complexType name="ProvideAndRegisterDocumentSetRequestType">
    <xs:sequence>
      <xs:element ref="lcm:SubmitObjectsRequest"/>
      <xs:sequence minOccurs="0">
        <xs:element maxOccurs="unbounded" name="Document">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:base64Binary">
                <xs:attribute name="id" type="xs:anyURI" use="required">
                  <xs:annotation>
                    <xs:documentation>This corresponds to the ExtrinsicObject id in the eb RIM metadata a provides a linkage between the actual document data and its metadata</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ProvideAndRegisterDocumentSetRequest" type="ProvideAndRegisterDocumentSetRequestType"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Information Model</documentation>
  </annotation>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/../www.w3.org/2001/xml.xsd"/>
  <!--Begin information model mapping from ebRIM.-->
  <!--Define Data Types-->
  <simpleType name="referenceURI">
    <annotation>
      <documentation xml:lang="en">referenceURI is used by reference attributes within RIM.
        Each attribute of type referenceURI references a RegistryObject with
        specified URI as id.</documentation>
    </annotation>
    <restriction base="anyURI"/>
  </simpleType>
  <simpleType name="String4">
    <restriction base="string">
      <maxLength value="4"/>
    </restriction>
  </simpleType>
  <simpleType name="String8">
    <restriction base="string">
      <maxLength value="8"/>
    </restriction>
  </simpleType>
  <simpleType name="String16">
    <restriction base="string">
      <maxLength value="16"/>
    </restriction>
  </simpleType>
  <simpleType name="String32">
    <restriction base="string">
      <maxLength value="32"/>
    </restriction>
  </simpleType>
  <simpleType name="ShortName">
    <restriction base="string">
      <maxLength value="64"/>
    </restriction>
  </simpleType>
  <simpleType name="LongName">
    <restriction base="string">
      <maxLength value="256"/>
    </restriction>
  </simpleType>
  <simpleType name="FreeFormText">
    <restriction base="string">
      <maxLength value="1024"/>
    </restriction>
  </simpleType>
  <complexType name="InternationalStringType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:LocalizedString"/>
    </sequence>
  </complexType>
  <element name="InternationalString" type="tns:InternationalStringType"/>
  <element name="Name" type="tns:InternationalStringType"/>
  <element name="Description" type="tns:InternationalStringType"/>
  <complexType name="LocalizedStringType">
    <attribute default="en-US" ref="xml:lang"/>
    <attribute default="UTF-8" name="charset"/>
    <attribute name="value" type="tns:FreeFormText" use="required"/>
  </complexType>
  <element name="LocalizedString" type="tns:LocalizedStringType"/>
  <complexType name="SlotType1">
    <sequence>
      <element maxOccurs="1" minOccurs="1" ref="tns:ValueList"/>
    </sequence>
    <attribute name="name" type="tns:LongName" use="required"/>
    <!--slotType value MUST reference a ClassificationNode in the canonical DataType scheme-->
    <attribute name="slotType" type="tns:referenceURI" use="optional"/>
  </complexType>
  <element name="Slot" type="tns:SlotType1"/>
  <complexType name="ValueListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:Value"/>
    </sequence>
  </complexType>
  <element name="ValueList" type="tns:ValueListType"/>
  <element name="Value" type="tns:LongName"/>
  <complexType name="SlotListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
  </complexType>
  <element name="SlotList" type="tns:SlotListType"/>
  <complexType name="IdentifiableType">
    <annotation>
      <documentation xml:lang="en">Common base type for all types that have unique identity.     
        If id is provided and is not in proper URN syntax then it is used for
        linkage within document and is ignored by the registry. In this case the
        registry generates a UUID URN for id attribute.
        id must not be null when object is retrieved from the registry.</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
    <attribute name="id" type="anyURI" use="required"/>
    <!--home attribute is required only for remote ObjectRef-->
    <attribute name="home" type="anyURI" use="optional"/>
  </complexType>
  <element name="Identifiable" type="tns:IdentifiableType"/>
  <complexType name="ObjectRefType">
    <annotation>
      <documentation xml:lang="en">Use to reference an Object by its id.
        Specifies the id attribute of the object as its id attribute.
        id attribute in ObjectAttributes is exactly the same syntax and semantics as
        id attribute in RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:IdentifiableType">
        <!--When true and is a remote ObjectRef then the registry must create a replica for this ObjectRef-->
        <attribute default="false" name="createReplica" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="ObjectRefListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:ObjectRef"/>
    </sequence>
  </complexType>
  <element name="ObjectRefList" type="tns:ObjectRefListType"/>
  <element name="ObjectRef" substitutionGroup="tns:Identifiable" type="tns:ObjectRefType"/>
  <complexType name="RegistryObjectType">
    <complexContent>
      <extension base="tns:IdentifiableType">
        <sequence maxOccurs="1" minOccurs="0">
          <element maxOccurs="1" minOccurs="0" ref="tns:Name"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:Description"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfo" type="tns:VersionInfoType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Classification"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifier"/>
        </sequence>
        <attribute name="lid" type="anyURI" use="optional"/>
        <attribute name="objectType" type="tns:referenceURI" use="optional"/>
        <attribute name="status" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObject" substitutionGroup="tns:Identifiable" type="tns:RegistryObjectType"/>
  <complexType name="RegistryObjectListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Identifiable"/>
    </sequence>
  </complexType>
  <element name="RegistryObjectList" type="tns:RegistryObjectListType"/>
  <complexType name="AssociationType1">
    <annotation>
      <documentation xml:lang="en">Association is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        An Association specifies references to two previously submitted
        registry entrys.
        The sourceObject is id of the sourceObject in association
        The targetObject is id of the targetObject in association</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="associationType" type="tns:referenceURI" use="required"/>
        <attribute name="sourceObject" type="tns:referenceURI" use="required"/>
        <attribute name="targetObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Association" substitutionGroup="tns:Identifiable" type="tns:AssociationType1"/>
  <complexType name="AuditableEventType">
    <annotation>
      <documentation xml:lang="en">An Event that forms an audit trail in ebXML Registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--List of all objects that have been effected by this event-->
          <element maxOccurs="1" minOccurs="1" name="affectedObjects" type="tns:ObjectRefListType"/>
        </sequence>
        <attribute name="eventType" type="tns:referenceURI" use="required"/>
        <attribute name="timestamp" type="dateTime" use="required"/>
        <attribute name="user" type="tns:referenceURI" use="required"/>
        <attribute name="requestId" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEvent" substitutionGroup="tns:Identifiable" type="tns:AuditableEventType"/>
  <complexType name="ClassificationType">
    <annotation>
      <documentation xml:lang="en">Classification is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A Classification specifies references to two registry entrys.
        The classifiedObject is id of the Object being classified.
        The classificationNode is id of the ClassificationNode classying the object</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="classificationScheme" type="tns:referenceURI" use="optional"/>
        <attribute name="classifiedObject" type="tns:referenceURI" use="required"/>
        <attribute name="classificationNode" type="tns:referenceURI" use="optional"/>
        <attribute name="nodeRepresentation" type="tns:LongName" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Classification" substitutionGroup="tns:Identifiable" type="tns:ClassificationType"/>
  <complexType name="ClassificationNodeType">
    <annotation>
      <documentation xml:lang="en">ClassificationNode is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        ClassificationNode is used to submit a Classification tree to the Registry.
        The parent attribute is the id to the parent node. code is an optional code value for a ClassificationNode
        often defined by an external taxonomy (e.g. NAICS)</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI" use="optional"/>
        <attribute name="code" type="tns:LongName" use="optional"/>
        <attribute name="path" type="string" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNode" substitutionGroup="tns:Identifiable" type="tns:ClassificationNodeType"/>
  <complexType name="ClassificationSchemeType">
    <annotation>
      <documentation xml:lang="en">ClassificationScheme is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="isInternal" type="boolean" use="required"/>
        <attribute name="nodeType" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationScheme" substitutionGroup="tns:Identifiable" type="tns:ClassificationSchemeType"/>
  <complexType name="ExternalIdentifierType">
    <annotation>
      <documentation xml:lang="en">ExternalIdentifier is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="registryObject" type="tns:referenceURI" use="required"/>
        <attribute name="identificationScheme" type="tns:referenceURI" use="required"/>
        <attribute name="value" type="tns:LongName" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifier" substitutionGroup="tns:Identifiable" type="tns:ExternalIdentifierType"/>
  <complexType name="ExternalLinkType">
    <annotation>
      <documentation xml:lang="en">ExternalLink is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="externalURI" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLink" substitutionGroup="tns:Identifiable" type="tns:ExternalLinkType"/>
  <complexType name="ExtrinsicObjectType">
    <annotation>
      <documentation xml:lang="en">ExtrinsicObject is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfo" type="tns:VersionInfoType"/>
        </sequence>
        <attribute default="application/octet-stream" name="mimeType" type="tns:LongName"/>
        <attribute default="false" name="isOpaque" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <!--Following element decl nneds to be lower case but using upper camel case for backward compatibility-->
  <element name="ExtrinsicObject" substitutionGroup="tns:Identifiable" type="tns:ExtrinsicObjectType"/>
  <element name="Address" type="tns:PostalAddressType"/>
  <complexType name="OrganizationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI"/>
        <attribute name="primaryContact" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Organization" substitutionGroup="tns:Identifiable" type="tns:OrganizationType"/>
  <complexType name="PersonNameType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="firstName" type="tns:ShortName" use="optional"/>
    <attribute name="middleName" type="tns:ShortName" use="optional"/>
    <attribute name="lastName" type="tns:ShortName" use="optional"/>
  </complexType>
  <element name="PersonName" type="tns:PersonNameType"/>
  <complexType name="EmailAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="address" type="tns:ShortName" use="required"/>
    <attribute name="type" type="tns:String32" use="optional"/>
  </complexType>
  <element name="EmailAddress" type="tns:EmailAddressType"/>
  <complexType name="PostalAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="city" type="tns:ShortName" use="optional"/>
    <attribute name="country" type="tns:ShortName" use="optional"/>
    <attribute name="postalCode" type="tns:ShortName" use="optional"/>
    <attribute name="stateOrProvince" type="tns:ShortName" use="optional"/>
    <attribute name="street" type="tns:ShortName" use="optional"/>
    <attribute name="streetNumber" type="tns:String32" use="optional"/>
  </complexType>
  <element name="PostalAddress" type="tns:PostalAddressType"/>
  <complexType name="VersionInfoType">
    <attribute default="1.1" name="versionName" type="tns:String16" use="optional"/>
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <complexType name="RegistryPackageType">
    <annotation>
      <documentation xml:lang="en">RegistryPackage is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A RegistryPackage is a named collection of objects.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectList"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackage" substitutionGroup="tns:Identifiable" type="tns:RegistryPackageType"/>
  <complexType name="ServiceType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBinding"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Service" substitutionGroup="tns:Identifiable" type="tns:ServiceType"/>
  <complexType name="ServiceBindingType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLink"/>
        </sequence>
        <attribute name="service" type="tns:referenceURI" use="required"/>
        <attribute name="accessURI" type="anyURI" use="optional"/>
        <attribute name="targetBinding" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBinding" substitutionGroup="tns:Identifiable" type="tns:ServiceBindingType"/>
  <complexType name="SpecificationLinkType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:UsageDescription"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:UsageParameter"/>
        </sequence>
        <attribute name="serviceBinding" type="tns:referenceURI" use="required"/>
        <attribute name="specificationObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLink" substitutionGroup="tns:Identifiable" type="tns:SpecificationLinkType"/>
  <element name="UsageDescription" type="tns:InternationalStringType"/>
  <element name="UsageParameter" type="tns:FreeFormText"/>
  <complexType name="TelephoneNumberType">
    <annotation>
      <documentation xml:lang="en">TelephoneNumber is the mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="areaCode" type="tns:String8" use="optional"/>
    <attribute name="countryCode" type="tns:String8" use="optional"/>
    <attribute name="extension" type="tns:String8" use="optional"/>
    <attribute name="number" type="tns:String16" use="optional"/>
    <attribute name="phoneType" type="tns:String32" use="optional"/>
  </complexType>
  <element name="TelephoneNumber" type="tns:TelephoneNumberType"/>
  <complexType name="TelephoneNumberListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
    </sequence>
  </complexType>
  <complexType name="PersonType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence maxOccurs="1" minOccurs="1">
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <!--PersonName is optional because it is not needed in SAML Profile 
          when an external IdentityProvider is used.-->
          <element maxOccurs="1" minOccurs="0" ref="tns:PersonName"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Person" substitutionGroup="tns:Identifiable" type="tns:PersonType"/>
  <complexType name="UserType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:PersonType"></extension>
    </complexContent>
  </complexType>
  <element name="User" substitutionGroup="tns:Identifiable" type="tns:UserType"/>
  <complexType name="RegistryType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="operator" type="tns:referenceURI" use="required"/>
        <attribute name="specificationVersion" type="string" use="required"/>
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
        <attribute default="P1D" name="catalogingLatency" type="duration" use="optional"/>
        <attribute default="registryLite" name="conformanceProfile" use="optional">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="registryFull"/>
              <enumeration value="registryLite"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="Registry" substitutionGroup="tns:Identifiable" type="tns:RegistryType"/>
  <complexType name="FederationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Federation" substitutionGroup="tns:Identifiable" type="tns:FederationType"/>
  <complexType name="AdhocQueryType">
    <annotation>
      <documentation xml:lang="en">A registry query.
      A QueryExpression child element is not required when invoking a stored query.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:QueryExpression"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQuery" substitutionGroup="tns:RegistryObject" type="tns:AdhocQueryType"/>
  <complexType mixed="true" name="QueryExpressionType">
    <sequence>
      <!--MAY be any query language syntax supported. 
      MUST support FilterQuery. SHOULD support SQLQuery-->
      <any maxOccurs="1" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="queryLanguage" type="tns:referenceURI" use="required"/>
  </complexType>
  <element name="QueryExpression" type="tns:QueryExpressionType"/>
  <complexType name="NotificationType">
    <annotation>
      <documentation>Notification of registry events.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--May contain ObjectRefs and RegistryObjects-->
          <element maxOccurs="1" minOccurs="1" ref="tns:RegistryObjectList"/>
        </sequence>
        <attribute name="subscription" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Notification" type="tns:NotificationType"/>
  <element name="Action" type="tns:ActionType"/>
  <complexType name="SubscriptionType">
    <annotation>
      <documentation xml:lang="en">A Subscription for specified Events in an ebXML V3+ registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Action"/>
        </sequence>
        <!--Ref to a AdhocQueryType instance-->
        <attribute name="selector" type="tns:referenceURI" use="required"/>
        <attribute name="startTime" type="dateTime" use="optional"/>
        <attribute name="endTime" type="dateTime" use="optional"/>
        <attribute default="P1D" name="notificationInterval" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subscription" substitutionGroup="tns:Identifiable" type="tns:SubscriptionType"/>
  <complexType abstract="true" name="ActionType">
    <annotation>
      <documentation>Abstract Base type for all types of Actions.</documentation>
    </annotation>
  </complexType>
  <complexType name="NotifyActionType">
    <annotation>
      <documentation xml:lang="en">Abstract Base type for all types of Notify Actions</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:ActionType">
        <attribute default="urn:oasis:names:tc:ebxml-regrep:NotificationOptionType:ObjectRefs" name="notificationOption" type="tns:referenceURI"/>
        <attribute name="endPoint" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotifyAction" substitutionGroup="tns:Action" type="tns:NotifyActionType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/auditmessage.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://nhinc.services.com/schema/auditmessage" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://nhinc.services.com/schema/auditmessage">
  <xs:complexType name="AuditMessageType">
    <xs:sequence>
      <xs:element name="EventIdentification" type="tns:EventIdentificationType"/>
      <xs:element maxOccurs="unbounded" name="ActiveParticipant">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="tns:ActiveParticipantType"/>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="AuditSourceIdentification" type="tns:AuditSourceIdentificationType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ParticipantObjectIdentification" type="tns:ParticipantObjectIdentificationType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AuditMessage" type="tns:AuditMessageType"/>
  <xs:complexType name="EventIdentificationType">
    <xs:sequence>
      <xs:element name="EventID" type="tns:CodedValueType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="EventTypeCode" type="tns:CodedValueType"/>
    </xs:sequence>
    <xs:attribute name="EventActionCode" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="C">
            <xs:annotation>
              <xs:appinfo>Create</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="R">
            <xs:annotation>
              <xs:appinfo>Read</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="U">
            <xs:annotation>
              <xs:appinfo>Update</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="D">
            <xs:annotation>
              <xs:appinfo>Delete</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="E">
            <xs:annotation>
              <xs:documentation>Execute</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="EventDateTime" type="xs:dateTime" use="required"/>
    <xs:attribute name="EventOutcomeIndicator" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:integer">
          <xs:enumeration value="0">
            <xs:annotation>
              <xs:appinfo>Success</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="4">
            <xs:annotation>
              <xs:appinfo>Minor failure</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="8">
            <xs:annotation>
              <xs:appinfo>Serious failure</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="12">
            <xs:annotation>
              <xs:appinfo>Major failure; action made unavailable</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AuditSourceIdentificationType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="AuditSourceTypeCode" type="tns:CodedValueType"/>
    </xs:sequence>
    <xs:attribute name="AuditEnterpriseSiteID" type="xs:string" use="optional"/>
    <xs:attribute name="AuditSourceID" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="ActiveParticipantType">
    <xs:sequence minOccurs="0">
      <xs:element maxOccurs="unbounded" minOccurs="0" name="RoleIDCode" type="tns:CodedValueType"/>
    </xs:sequence>
    <xs:attribute name="UserID" type="xs:string" use="required"/>
    <xs:attribute name="AlternativeUserID" type="xs:string" use="optional"/>
    <xs:attribute name="UserName" type="xs:string" use="optional"/>
    <xs:attribute default="true" name="UserIsRequestor" type="xs:boolean" use="optional"/>
    <xs:attribute name="NetworkAccessPointID" type="xs:string" use="optional"/>
    <xs:attribute name="NetworkAccessPointTypeCode" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:unsignedByte">
          <xs:enumeration value="1">
            <xs:annotation>
              <xs:appinfo>Machine Name, including DNS name</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="2">
            <xs:annotation>
              <xs:appinfo>IP Address</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="3">
            <xs:annotation>
              <xs:appinfo>Telephone Number</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ParticipantObjectIdentificationType">
    <xs:sequence>
      <xs:element name="ParticipantObjectIDTypeCode" type="tns:CodedValueType"/>
      <xs:choice minOccurs="0">
        <xs:element minOccurs="0" name="ParticipantObjectName" type="xs:string"/>
        <xs:element minOccurs="0" name="ParticipantObjectQuery" type="xs:base64Binary"/>
      </xs:choice>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ParticipantObjectDetail" type="tns:TypeValuePairType"/>
    </xs:sequence>
    <xs:attribute name="ParticipantObjectID" type="xs:string" use="required"/>
    <xs:attribute name="ParticipantObjectTypeCode" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:unsignedByte">
          <xs:enumeration value="1">
            <xs:annotation>
              <xs:appinfo>Person</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="2">
            <xs:annotation>
              <xs:appinfo>System object</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="3">
            <xs:annotation>
              <xs:appinfo>Organization</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="4">
            <xs:annotation>
              <xs:appinfo>Other</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="ParticipantObjectTypeCodeRole" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:unsignedByte">
          <xs:enumeration value="1">
            <xs:annotation>
              <xs:appinfo>Patient</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="2">
            <xs:annotation>
              <xs:appinfo>Location</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="3">
            <xs:annotation>
              <xs:appinfo>Report</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="4">
            <xs:annotation>
              <xs:appinfo>Resource</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="5">
            <xs:annotation>
              <xs:appinfo>Master file</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="6">
            <xs:annotation>
              <xs:appinfo>User</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="7">
            <xs:annotation>
              <xs:appinfo>List</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="8">
            <xs:annotation>
              <xs:appinfo>Doctor</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="9">
            <xs:annotation>
              <xs:appinfo>Subscriber</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="10">
            <xs:annotation>
              <xs:appinfo>Guarantor</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="11">
            <xs:annotation>
              <xs:appinfo>Security User Entity</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="12">
            <xs:annotation>
              <xs:appinfo>Security User Group</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="13">
            <xs:annotation>
              <xs:appinfo>Security Resource</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="14">
            <xs:annotation>
              <xs:appinfo>Security Granualarity Definition</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="15">
            <xs:annotation>
              <xs:appinfo>Provider</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="16">
            <xs:annotation>
              <xs:appinfo>Report Destination</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="17">
            <xs:annotation>
              <xs:appinfo>Report Library</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="18">
            <xs:annotation>
              <xs:appinfo>Schedule</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="19">
            <xs:annotation>
              <xs:appinfo>Customer</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="20">
            <xs:annotation>
              <xs:appinfo>Job</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="21">
            <xs:annotation>
              <xs:appinfo>Job Stream</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="22">
            <xs:annotation>
              <xs:appinfo>Table</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="23">
            <xs:annotation>
              <xs:appinfo>Routing Criteria</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="24">
            <xs:annotation>
              <xs:appinfo>Query</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="ParticipantObjectDataLifeCycle" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:unsignedByte">
          <xs:enumeration value="1">
            <xs:annotation>
              <xs:appinfo>Origination / Creation</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="2">
            <xs:annotation>
              <xs:appinfo>Import / Copy from original</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="3">
            <xs:annotation>
              <xs:appinfo>Amendment</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="4">
            <xs:annotation>
              <xs:appinfo>Verification</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="5">
            <xs:annotation>
              <xs:appinfo>Translation</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="6">
            <xs:annotation>
              <xs:appinfo>Access / Use</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="7">
            <xs:annotation>
              <xs:appinfo>De-identification</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="8">
            <xs:annotation>
              <xs:appinfo>Aggregation, summarization, derivation</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="9">
            <xs:annotation>
              <xs:appinfo>Report</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="10">
            <xs:annotation>
              <xs:appinfo>Export / Copy to target</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="11">
            <xs:annotation>
              <xs:appinfo>Disclosure</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="12">
            <xs:annotation>
              <xs:appinfo>Receipt of disclosure</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="13">
            <xs:annotation>
              <xs:appinfo>Archiving</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="14">
            <xs:annotation>
              <xs:appinfo>Logical deletion</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="15">
            <xs:annotation>
              <xs:appinfo>Permanent erasure / Physical destruction</xs:appinfo>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="ParticipantObjectSensitivity" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="CodedValueType">
    <xs:attribute name="code" type="xs:string" use="required"/>
    <xs:attributeGroup ref="tns:CodeSystem"/>
    <xs:attribute name="displayName" type="xs:string" use="optional"/>
    <xs:attribute name="originalText" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="TypeValuePairType">
    <xs:attribute name="type" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:base64Binary" use="required"/>
  </xs:complexType>
  <xs:attributeGroup name="CodeSystem">
    <xs:attribute name="codeSystem" type="tns:OID" use="optional"/>
    <xs:attribute name="codeSystemName" type="xs:string" use="optional"/>
  </xs:attributeGroup>
  <xs:simpleType name="OID">
    <xs:restriction base="xs:string">
      <xs:whiteSpace value="collapse"/>
    </xs:restriction>
  </xs:simpleType>
  <!--The following were added from the AuditLogQuery WSDL-->
  <xs:complexType name="FindAuditEventsType">
    <xs:sequence>
      <xs:element minOccurs="1" name="patientId" type="xs:string"/>
      <xs:element name="userId" type="xs:string"/>
      <xs:element name="beginDateTime" type="xs:dateTime"/>
      <xs:element name="endDateTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FindAuditEvents" type="tns:FindAuditEventsType"/>
  <xs:complexType name="FindAuditEventsResponseType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="findAuditEventsReturn" type="tns:AuditMessageType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="FindAuditEventsResponse" type="tns:FindAuditEventsResponseType"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/bf-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd">
    <xsd:annotation>
      <xsd:documentation>Get access to the xml: attribute groups for xml:lang as declared on 'schema'
        and 'documentation' below</xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <!--====================== BaseFault Types =======================-->
  <xsd:element name="BaseFault" type="wsrf-bf:BaseFaultType"/>
  <xsd:complexType name="BaseFaultType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      <xsd:element maxOccurs="1" minOccurs="1" name="Timestamp" type="xsd:dateTime"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="Originator" type="wsa:EndpointReferenceType"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="ErrorCode">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="xsd:anyType">
              <xsd:attribute name="dialect" type="xsd:anyURI" use="required"/>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Description">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="xml:lang" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="FaultCause">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##other" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/XDS.b_DocumentRepository.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:ihe:iti:xds-b:2007" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:ihe:iti:xds-b:2007" xmlns:lcm="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/lcm.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/query.xsd"/>
  <xs:complexType name="RetrieveDocumentSetRequestType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="DocumentRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="HomeCommunityId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This corresponds to the home attribute of the Identifiable class in regrep RIM (regrep-rim-3.0-os.pdf, page 20)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="RepositoryUniqueId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This is the XDSDocumentEntry.repositoryUniqueId attribute in the XDS metadata</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="DocumentUniqueId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This is the XDSDocumentEntry.uniqueId attribute in the XDS metadata</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RetrieveDocumentSetResponseType">
    <xs:sequence>
      <xs:element ref="rs:RegistryResponse"/>
      <xs:sequence minOccurs="0">
        <xs:element maxOccurs="unbounded" name="DocumentResponse">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="HomeCommunityId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This corresponds to the home attribute of the Identifiable class in regrep RIM (regrep-rim-3.0-os.pdf, page 20)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RepositoryUniqueId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This is the XDSDocumentEntry.repositoryUniqueId attribute in the XDS metadata</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DocumentUniqueId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This is the XDSDocumentEntry.uniqueId attribute in the XDS metadata</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="mimeType" type="rim:LongName"/>
              <xs:element name="Document" type="xs:base64Binary"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RetrieveDocumentSetRequest" type="RetrieveDocumentSetRequestType"/>
  <xs:element name="RetrieveDocumentSetResponse" type="RetrieveDocumentSetResponseType"/>
  <xs:complexType name="ProvideAndRegisterDocumentSetRequestType">
    <xs:sequence>
      <xs:element ref="lcm:SubmitObjectsRequest"/>
      <xs:sequence minOccurs="0">
        <xs:element maxOccurs="unbounded" name="Document">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:base64Binary">
                <xs:attribute name="id" type="xs:anyURI" use="required">
                  <xs:annotation>
                    <xs:documentation>This corresponds to the ExtrinsicObject id in the eb RIM metadata a provides a linkage between the actual document data and its metadata</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ProvideAndRegisterDocumentSetRequest" type="ProvideAndRegisterDocumentSetRequestType"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/b-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/b-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--======================== Imports  ============================-->
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsrf/bf-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/bf-2.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/t-1" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/t-1.xsd"/>
  <!--===================== Misc. Helper Types =====================-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="TopicExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
    <xsd:anyAttribute/>
  </xsd:complexType>
  <xsd:complexType name="FilterType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionPolicyType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=============== Resource Property Related  ===================-->
  <!--======== Resource Properties for NotificationProducer ========-->
  <xsd:element name="TopicExpression" type="wsnt:TopicExpressionType"/>
  <xsd:element default="true" name="FixedTopicSet" type="xsd:boolean"/>
  <xsd:element name="TopicExpressionDialect" type="xsd:anyURI"/>
  <xsd:element name="NotificationProducerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpression"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:FixedTopicSet"/>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpressionDialect"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wstop:TopicSet"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--======== Resource Properties for SubscriptionManager =========-->
  <xsd:element name="ConsumerReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Filter" type="wsnt:FilterType"/>
  <xsd:element name="SubscriptionPolicy" type="wsnt:SubscriptionPolicyType"/>
  <xsd:element name="CreationTime" type="xsd:dateTime"/>
  <xsd:element name="SubscriptionManagerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:ConsumerReference"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Filter"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionPolicy"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CreationTime"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================= Notification Metadata  =====================-->
  <xsd:element name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
  <xsd:element name="ProducerReference" type="wsa:EndpointReferenceType"/>
  <!--================== Message Helper Types  =====================-->
  <xsd:complexType name="NotificationMessageHolderType">
    <xsd:sequence>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionReference"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Topic"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:ProducerReference"/>
      <xsd:element name="Message">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotificationMessage" type="wsnt:NotificationMessageHolderType"/>
  <!--========== Message Types for NotificationConsumer  ===========-->
  <xsd:element name="Notify">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="1" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--========== Message Types for NotificationProducer  ===========-->
  <xsd:simpleType name="AbsoluteOrRelativeTimeType">
    <xsd:union memberTypes="xsd:dateTime xsd:duration"/>
  </xsd:simpleType>
  <xsd:element name="CurrentTime" type="xsd:dateTime"/>
  <xsd:element name="TerminationTime" nillable="true" type="xsd:dateTime"/>
  <xsd:element name="ProducerProperties" type="wsnt:QueryExpressionType"/>
  <xsd:element name="MessageContent" type="wsnt:QueryExpressionType"/>
  <xsd:element name="UseRaw">
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="Subscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="ConsumerReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="Filter" type="wsnt:FilterType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="InitialTerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="SubscriptionPolicy">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:TerminationTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessage">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessageResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="SubscribeCreationFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubscribeCreationFailedFault" type="wsnt:SubscribeCreationFailedFaultType"/>
  <xsd:complexType name="InvalidFilterFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="UnknownFilter" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidFilterFault" type="wsnt:InvalidFilterFaultType"/>
  <xsd:complexType name="TopicExpressionDialectUnknownFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicExpressionDialectUnknownFault" type="wsnt:TopicExpressionDialectUnknownFaultType"/>
  <xsd:complexType name="InvalidTopicExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidTopicExpressionFault" type="wsnt:InvalidTopicExpressionFaultType"/>
  <xsd:complexType name="TopicNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNotSupportedFault" type="wsnt:TopicNotSupportedFaultType"/>
  <xsd:complexType name="MultipleTopicsSpecifiedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="MultipleTopicsSpecifiedFault" type="wsnt:MultipleTopicsSpecifiedFaultType"/>
  <xsd:complexType name="InvalidProducerPropertiesExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidProducerPropertiesExpressionFault" type="wsnt:InvalidProducerPropertiesExpressionFaultType"/>
  <xsd:complexType name="InvalidMessageContentExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidMessageContentExpressionFault" type="wsnt:InvalidMessageContentExpressionFaultType"/>
  <xsd:complexType name="UnrecognizedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnrecognizedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnrecognizedPolicyRequestFault" type="wsnt:UnrecognizedPolicyRequestFaultType"/>
  <xsd:complexType name="UnsupportedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnsupportedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnsupportedPolicyRequestFault" type="wsnt:UnsupportedPolicyRequestFaultType"/>
  <xsd:complexType name="NotifyMessageNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NotifyMessageNotSupportedFault" type="wsnt:NotifyMessageNotSupportedFaultType"/>
  <xsd:complexType name="UnacceptableInitialTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableInitialTerminationTimeFault" type="wsnt:UnacceptableInitialTerminationTimeFaultType"/>
  <xsd:complexType name="NoCurrentMessageOnTopicFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NoCurrentMessageOnTopicFault" type="wsnt:NoCurrentMessageOnTopicFaultType"/>
  <!--======== Message Types for PullPoint  ========================-->
  <xsd:element name="GetMessages">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="MaximumNumber" type="xsd:nonNegativeInteger"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetMessagesResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToGetMessagesFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToGetMessagesFault" type="wsnt:UnableToGetMessagesFaultType"/>
  <xsd:complexType name="UnableToDestroyPullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroyPullPointFault" type="wsnt:UnableToDestroyPullPointFaultType"/>
  <!--======== Message Types for Create PullPoint  =================-->
  <xsd:element name="CreatePullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreatePullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="PullPoint" type="wsa:EndpointReferenceType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToCreatePullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToCreatePullPointFault" type="wsnt:UnableToCreatePullPointFaultType"/>
  <!--======== Message Types for Base SubscriptionManager  =========-->
  <xsd:element name="Renew">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="TerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RenewResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:TerminationTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnacceptableTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableTerminationTimeFault" type="wsnt:UnacceptableTerminationTimeFaultType"/>
  <xsd:element name="Unsubscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UnsubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToDestroySubscriptionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroySubscriptionFault" type="wsnt:UnableToDestroySubscriptionFaultType"/>
  <!--====== Message Types for Pausable SubscriptionManager  =======-->
  <xsd:element name="PauseSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PauseSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PauseFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PauseFailedFault" type="wsnt:PauseFailedFaultType"/>
  <xsd:complexType name="ResumeFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ResumeFailedFault" type="wsnt:ResumeFailedFaultType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/rim.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Information Model</documentation>
  </annotation>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/../www.w3.org/2001/xml.xsd"/>
  <!--Begin information model mapping from ebRIM.-->
  <!--Define Data Types-->
  <simpleType name="referenceURI">
    <annotation>
      <documentation xml:lang="en">referenceURI is used by reference attributes within RIM.
        Each attribute of type referenceURI references a RegistryObject with
        specified URI as id.</documentation>
    </annotation>
    <restriction base="anyURI"/>
  </simpleType>
  <simpleType name="String4">
    <restriction base="string">
      <maxLength value="4"/>
    </restriction>
  </simpleType>
  <simpleType name="String8">
    <restriction base="string">
      <maxLength value="8"/>
    </restriction>
  </simpleType>
  <simpleType name="String16">
    <restriction base="string">
      <maxLength value="16"/>
    </restriction>
  </simpleType>
  <simpleType name="String32">
    <restriction base="string">
      <maxLength value="32"/>
    </restriction>
  </simpleType>
  <simpleType name="ShortName">
    <restriction base="string">
      <maxLength value="64"/>
    </restriction>
  </simpleType>
  <simpleType name="LongName">
    <restriction base="string">
      <maxLength value="256"/>
    </restriction>
  </simpleType>
  <simpleType name="FreeFormText">
    <restriction base="string">
      <maxLength value="1024"/>
    </restriction>
  </simpleType>
  <complexType name="InternationalStringType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:LocalizedString"/>
    </sequence>
  </complexType>
  <element name="InternationalString" type="tns:InternationalStringType"/>
  <element name="Name" type="tns:InternationalStringType"/>
  <element name="Description" type="tns:InternationalStringType"/>
  <complexType name="LocalizedStringType">
    <attribute default="en-US" ref="xml:lang"/>
    <attribute default="UTF-8" name="charset"/>
    <attribute name="value" type="tns:FreeFormText" use="required"/>
  </complexType>
  <element name="LocalizedString" type="tns:LocalizedStringType"/>
  <complexType name="SlotType1">
    <sequence>
      <element maxOccurs="1" minOccurs="1" ref="tns:ValueList"/>
    </sequence>
    <attribute name="name" type="tns:LongName" use="required"/>
    <!--slotType value MUST reference a ClassificationNode in the canonical DataType scheme-->
    <attribute name="slotType" type="tns:referenceURI" use="optional"/>
  </complexType>
  <element name="Slot" type="tns:SlotType1"/>
  <complexType name="ValueListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:Value"/>
    </sequence>
  </complexType>
  <element name="ValueList" type="tns:ValueListType"/>
  <element name="Value" type="tns:LongName"/>
  <complexType name="SlotListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
  </complexType>
  <element name="SlotList" type="tns:SlotListType"/>
  <complexType name="IdentifiableType">
    <annotation>
      <documentation xml:lang="en">Common base type for all types that have unique identity.     
        If id is provided and is not in proper URN syntax then it is used for
        linkage within document and is ignored by the registry. In this case the
        registry generates a UUID URN for id attribute.
        id must not be null when object is retrieved from the registry.</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
    <attribute name="id" type="anyURI" use="required"/>
    <!--home attribute is required only for remote ObjectRef-->
    <attribute name="home" type="anyURI" use="optional"/>
  </complexType>
  <element name="Identifiable" type="tns:IdentifiableType"/>
  <complexType name="ObjectRefType">
    <annotation>
      <documentation xml:lang="en">Use to reference an Object by its id.
        Specifies the id attribute of the object as its id attribute.
        id attribute in ObjectAttributes is exactly the same syntax and semantics as
        id attribute in RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:IdentifiableType">
        <!--When true and is a remote ObjectRef then the registry must create a replica for this ObjectRef-->
        <attribute default="false" name="createReplica" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="ObjectRefListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:ObjectRef"/>
    </sequence>
  </complexType>
  <element name="ObjectRefList" type="tns:ObjectRefListType"/>
  <element name="ObjectRef" substitutionGroup="tns:Identifiable" type="tns:ObjectRefType"/>
  <complexType name="RegistryObjectType">
    <complexContent>
      <extension base="tns:IdentifiableType">
        <sequence maxOccurs="1" minOccurs="0">
          <element maxOccurs="1" minOccurs="0" ref="tns:Name"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:Description"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfo" type="tns:VersionInfoType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Classification"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifier"/>
        </sequence>
        <attribute name="lid" type="anyURI" use="optional"/>
        <attribute name="objectType" type="tns:referenceURI" use="optional"/>
        <attribute name="status" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObject" substitutionGroup="tns:Identifiable" type="tns:RegistryObjectType"/>
  <complexType name="RegistryObjectListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Identifiable"/>
    </sequence>
  </complexType>
  <element name="RegistryObjectList" type="tns:RegistryObjectListType"/>
  <complexType name="AssociationType1">
    <annotation>
      <documentation xml:lang="en">Association is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        An Association specifies references to two previously submitted
        registry entrys.
        The sourceObject is id of the sourceObject in association
        The targetObject is id of the targetObject in association</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="associationType" type="tns:referenceURI" use="required"/>
        <attribute name="sourceObject" type="tns:referenceURI" use="required"/>
        <attribute name="targetObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Association" substitutionGroup="tns:Identifiable" type="tns:AssociationType1"/>
  <complexType name="AuditableEventType">
    <annotation>
      <documentation xml:lang="en">An Event that forms an audit trail in ebXML Registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--List of all objects that have been effected by this event-->
          <element maxOccurs="1" minOccurs="1" name="affectedObjects" type="tns:ObjectRefListType"/>
        </sequence>
        <attribute name="eventType" type="tns:referenceURI" use="required"/>
        <attribute name="timestamp" type="dateTime" use="required"/>
        <attribute name="user" type="tns:referenceURI" use="required"/>
        <attribute name="requestId" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEvent" substitutionGroup="tns:Identifiable" type="tns:AuditableEventType"/>
  <complexType name="ClassificationType">
    <annotation>
      <documentation xml:lang="en">Classification is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A Classification specifies references to two registry entrys.
        The classifiedObject is id of the Object being classified.
        The classificationNode is id of the ClassificationNode classying the object</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="classificationScheme" type="tns:referenceURI" use="optional"/>
        <attribute name="classifiedObject" type="tns:referenceURI" use="required"/>
        <attribute name="classificationNode" type="tns:referenceURI" use="optional"/>
        <attribute name="nodeRepresentation" type="tns:LongName" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Classification" substitutionGroup="tns:Identifiable" type="tns:ClassificationType"/>
  <complexType name="ClassificationNodeType">
    <annotation>
      <documentation xml:lang="en">ClassificationNode is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        ClassificationNode is used to submit a Classification tree to the Registry.
        The parent attribute is the id to the parent node. code is an optional code value for a ClassificationNode
        often defined by an external taxonomy (e.g. NAICS)</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI" use="optional"/>
        <attribute name="code" type="tns:LongName" use="optional"/>
        <attribute name="path" type="string" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNode" substitutionGroup="tns:Identifiable" type="tns:ClassificationNodeType"/>
  <complexType name="ClassificationSchemeType">
    <annotation>
      <documentation xml:lang="en">ClassificationScheme is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="isInternal" type="boolean" use="required"/>
        <attribute name="nodeType" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationScheme" substitutionGroup="tns:Identifiable" type="tns:ClassificationSchemeType"/>
  <complexType name="ExternalIdentifierType">
    <annotation>
      <documentation xml:lang="en">ExternalIdentifier is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="registryObject" type="tns:referenceURI" use="required"/>
        <attribute name="identificationScheme" type="tns:referenceURI" use="required"/>
        <attribute name="value" type="tns:LongName" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifier" substitutionGroup="tns:Identifiable" type="tns:ExternalIdentifierType"/>
  <complexType name="ExternalLinkType">
    <annotation>
      <documentation xml:lang="en">ExternalLink is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="externalURI" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLink" substitutionGroup="tns:Identifiable" type="tns:ExternalLinkType"/>
  <complexType name="ExtrinsicObjectType">
    <annotation>
      <documentation xml:lang="en">ExtrinsicObject is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfo" type="tns:VersionInfoType"/>
        </sequence>
        <attribute default="application/octet-stream" name="mimeType" type="tns:LongName"/>
        <attribute default="false" name="isOpaque" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <!--Following element decl nneds to be lower case but using upper camel case for backward compatibility-->
  <element name="ExtrinsicObject" substitutionGroup="tns:Identifiable" type="tns:ExtrinsicObjectType"/>
  <element name="Address" type="tns:PostalAddressType"/>
  <complexType name="OrganizationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI"/>
        <attribute name="primaryContact" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Organization" substitutionGroup="tns:Identifiable" type="tns:OrganizationType"/>
  <complexType name="PersonNameType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="firstName" type="tns:ShortName" use="optional"/>
    <attribute name="middleName" type="tns:ShortName" use="optional"/>
    <attribute name="lastName" type="tns:ShortName" use="optional"/>
  </complexType>
  <element name="PersonName" type="tns:PersonNameType"/>
  <complexType name="EmailAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="address" type="tns:ShortName" use="required"/>
    <attribute name="type" type="tns:String32" use="optional"/>
  </complexType>
  <element name="EmailAddress" type="tns:EmailAddressType"/>
  <complexType name="PostalAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="city" type="tns:ShortName" use="optional"/>
    <attribute name="country" type="tns:ShortName" use="optional"/>
    <attribute name="postalCode" type="tns:ShortName" use="optional"/>
    <attribute name="stateOrProvince" type="tns:ShortName" use="optional"/>
    <attribute name="street" type="tns:ShortName" use="optional"/>
    <attribute name="streetNumber" type="tns:String32" use="optional"/>
  </complexType>
  <element name="PostalAddress" type="tns:PostalAddressType"/>
  <complexType name="VersionInfoType">
    <attribute default="1.1" name="versionName" type="tns:String16" use="optional"/>
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <complexType name="RegistryPackageType">
    <annotation>
      <documentation xml:lang="en">RegistryPackage is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A RegistryPackage is a named collection of objects.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectList"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackage" substitutionGroup="tns:Identifiable" type="tns:RegistryPackageType"/>
  <complexType name="ServiceType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBinding"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Service" substitutionGroup="tns:Identifiable" type="tns:ServiceType"/>
  <complexType name="ServiceBindingType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLink"/>
        </sequence>
        <attribute name="service" type="tns:referenceURI" use="required"/>
        <attribute name="accessURI" type="anyURI" use="optional"/>
        <attribute name="targetBinding" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBinding" substitutionGroup="tns:Identifiable" type="tns:ServiceBindingType"/>
  <complexType name="SpecificationLinkType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:UsageDescription"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:UsageParameter"/>
        </sequence>
        <attribute name="serviceBinding" type="tns:referenceURI" use="required"/>
        <attribute name="specificationObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLink" substitutionGroup="tns:Identifiable" type="tns:SpecificationLinkType"/>
  <element name="UsageDescription" type="tns:InternationalStringType"/>
  <element name="UsageParameter" type="tns:FreeFormText"/>
  <complexType name="TelephoneNumberType">
    <annotation>
      <documentation xml:lang="en">TelephoneNumber is the mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="areaCode" type="tns:String8" use="optional"/>
    <attribute name="countryCode" type="tns:String8" use="optional"/>
    <attribute name="extension" type="tns:String8" use="optional"/>
    <attribute name="number" type="tns:String16" use="optional"/>
    <attribute name="phoneType" type="tns:String32" use="optional"/>
  </complexType>
  <element name="TelephoneNumber" type="tns:TelephoneNumberType"/>
  <complexType name="TelephoneNumberListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
    </sequence>
  </complexType>
  <complexType name="PersonType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence maxOccurs="1" minOccurs="1">
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <!--PersonName is optional because it is not needed in SAML Profile 
          when an external IdentityProvider is used.-->
          <element maxOccurs="1" minOccurs="0" ref="tns:PersonName"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Person" substitutionGroup="tns:Identifiable" type="tns:PersonType"/>
  <complexType name="UserType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:PersonType"></extension>
    </complexContent>
  </complexType>
  <element name="User" substitutionGroup="tns:Identifiable" type="tns:UserType"/>
  <complexType name="RegistryType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="operator" type="tns:referenceURI" use="required"/>
        <attribute name="specificationVersion" type="string" use="required"/>
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
        <attribute default="P1D" name="catalogingLatency" type="duration" use="optional"/>
        <attribute default="registryLite" name="conformanceProfile" use="optional">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="registryFull"/>
              <enumeration value="registryLite"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="Registry" substitutionGroup="tns:Identifiable" type="tns:RegistryType"/>
  <complexType name="FederationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Federation" substitutionGroup="tns:Identifiable" type="tns:FederationType"/>
  <complexType name="AdhocQueryType">
    <annotation>
      <documentation xml:lang="en">A registry query.
      A QueryExpression child element is not required when invoking a stored query.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:QueryExpression"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQuery" substitutionGroup="tns:RegistryObject" type="tns:AdhocQueryType"/>
  <complexType mixed="true" name="QueryExpressionType">
    <sequence>
      <!--MAY be any query language syntax supported. 
      MUST support FilterQuery. SHOULD support SQLQuery-->
      <any maxOccurs="1" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="queryLanguage" type="tns:referenceURI" use="required"/>
  </complexType>
  <element name="QueryExpression" type="tns:QueryExpressionType"/>
  <complexType name="NotificationType">
    <annotation>
      <documentation>Notification of registry events.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--May contain ObjectRefs and RegistryObjects-->
          <element maxOccurs="1" minOccurs="1" ref="tns:RegistryObjectList"/>
        </sequence>
        <attribute name="subscription" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Notification" type="tns:NotificationType"/>
  <element name="Action" type="tns:ActionType"/>
  <complexType name="SubscriptionType">
    <annotation>
      <documentation xml:lang="en">A Subscription for specified Events in an ebXML V3+ registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Action"/>
        </sequence>
        <!--Ref to a AdhocQueryType instance-->
        <attribute name="selector" type="tns:referenceURI" use="required"/>
        <attribute name="startTime" type="dateTime" use="optional"/>
        <attribute name="endTime" type="dateTime" use="optional"/>
        <attribute default="P1D" name="notificationInterval" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subscription" substitutionGroup="tns:Identifiable" type="tns:SubscriptionType"/>
  <complexType abstract="true" name="ActionType">
    <annotation>
      <documentation>Abstract Base type for all types of Actions.</documentation>
    </annotation>
  </complexType>
  <complexType name="NotifyActionType">
    <annotation>
      <documentation xml:lang="en">Abstract Base type for all types of Notify Actions</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:ActionType">
        <attribute default="urn:oasis:names:tc:ebxml-regrep:NotificationOptionType:ObjectRefs" name="notificationOption" type="tns:referenceURI"/>
        <attribute name="endPoint" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotifyAction" substitutionGroup="tns:Action" type="tns:NotifyActionType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/SubscriptionB2OverrideForDocuments.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:subscriptionb2overridefordocuments" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:addr="http://www.w3.org/2005/08/addressing" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:tns="urn:gov:hhs:fha:nhinc:common:subscriptionb2overridefordocuments" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:xdsb="urn:ihe:iti:xds-b:2007">
  <xsd:import namespace="urn:ihe:iti:xds-b:2007" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/XDS.b_DocumentRepository.xsd"/>
  <xsd:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/rim.xsd"/>
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/b-2.xsd"/>
  <!--<xsd:complexType name="UnsubscribeType">
        <xsd:sequence>
            <xsd:element name="Assertion" type="assert:assertion"></xsd:element>
            <xsd:any/>
        </xsd:sequence>
    </xsd:complexType>-->
  <xsd:complexType name="SubscribeDocumentType">
    <xsd:sequence>
      <xsd:element name="ConsumerReference" type="addr:EndpointReferenceType"/>
      <xsd:element name="AdhocQuery" type="rim:AdhocQueryType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NotificationMessageHolderType">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="wsnt:SubscriptionReference"/>
      <xsd:element minOccurs="0" ref="wsnt:Topic"/>
      <xsd:element name="Message">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref="xdsb:RetrieveDocumentSetRequest"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NotifyDocumentType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="NotificationMessage" type="tns:NotificationMessageHolderType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/rim.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Information Model</documentation>
  </annotation>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/../www.w3.org/2001/xml.xsd"/>
  <!--Begin information model mapping from ebRIM.-->
  <!--Define Data Types-->
  <simpleType name="referenceURI">
    <annotation>
      <documentation xml:lang="en">referenceURI is used by reference attributes within RIM.
        Each attribute of type referenceURI references a RegistryObject with
        specified URI as id.</documentation>
    </annotation>
    <restriction base="anyURI"/>
  </simpleType>
  <simpleType name="String4">
    <restriction base="string">
      <maxLength value="4"/>
    </restriction>
  </simpleType>
  <simpleType name="String8">
    <restriction base="string">
      <maxLength value="8"/>
    </restriction>
  </simpleType>
  <simpleType name="String16">
    <restriction base="string">
      <maxLength value="16"/>
    </restriction>
  </simpleType>
  <simpleType name="String32">
    <restriction base="string">
      <maxLength value="32"/>
    </restriction>
  </simpleType>
  <simpleType name="ShortName">
    <restriction base="string">
      <maxLength value="64"/>
    </restriction>
  </simpleType>
  <simpleType name="LongName">
    <restriction base="string">
      <maxLength value="256"/>
    </restriction>
  </simpleType>
  <simpleType name="FreeFormText">
    <restriction base="string">
      <maxLength value="1024"/>
    </restriction>
  </simpleType>
  <complexType name="InternationalStringType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:LocalizedString"/>
    </sequence>
  </complexType>
  <element name="InternationalString" type="tns:InternationalStringType"/>
  <element name="Name" type="tns:InternationalStringType"/>
  <element name="Description" type="tns:InternationalStringType"/>
  <complexType name="LocalizedStringType">
    <attribute default="en-US" ref="xml:lang"/>
    <attribute default="UTF-8" name="charset"/>
    <attribute name="value" type="tns:FreeFormText" use="required"/>
  </complexType>
  <element name="LocalizedString" type="tns:LocalizedStringType"/>
  <complexType name="SlotType1">
    <sequence>
      <element maxOccurs="1" minOccurs="1" ref="tns:ValueList"/>
    </sequence>
    <attribute name="name" type="tns:LongName" use="required"/>
    <!--slotType value MUST reference a ClassificationNode in the canonical DataType scheme-->
    <attribute name="slotType" type="tns:referenceURI" use="optional"/>
  </complexType>
  <element name="Slot" type="tns:SlotType1"/>
  <complexType name="ValueListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:Value"/>
    </sequence>
  </complexType>
  <element name="ValueList" type="tns:ValueListType"/>
  <element name="Value" type="tns:LongName"/>
  <complexType name="SlotListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
  </complexType>
  <element name="SlotList" type="tns:SlotListType"/>
  <complexType name="IdentifiableType">
    <annotation>
      <documentation xml:lang="en">Common base type for all types that have unique identity.     
        If id is provided and is not in proper URN syntax then it is used for
        linkage within document and is ignored by the registry. In this case the
        registry generates a UUID URN for id attribute.
        id must not be null when object is retrieved from the registry.</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
    <attribute name="id" type="anyURI" use="required"/>
    <!--home attribute is required only for remote ObjectRef-->
    <attribute name="home" type="anyURI" use="optional"/>
  </complexType>
  <element name="Identifiable" type="tns:IdentifiableType"/>
  <complexType name="ObjectRefType">
    <annotation>
      <documentation xml:lang="en">Use to reference an Object by its id.
        Specifies the id attribute of the object as its id attribute.
        id attribute in ObjectAttributes is exactly the same syntax and semantics as
        id attribute in RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:IdentifiableType">
        <!--When true and is a remote ObjectRef then the registry must create a replica for this ObjectRef-->
        <attribute default="false" name="createReplica" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="ObjectRefListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:ObjectRef"/>
    </sequence>
  </complexType>
  <element name="ObjectRefList" type="tns:ObjectRefListType"/>
  <element name="ObjectRef" substitutionGroup="tns:Identifiable" type="tns:ObjectRefType"/>
  <complexType name="RegistryObjectType">
    <complexContent>
      <extension base="tns:IdentifiableType">
        <sequence maxOccurs="1" minOccurs="0">
          <element maxOccurs="1" minOccurs="0" ref="tns:Name"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:Description"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfo" type="tns:VersionInfoType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Classification"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifier"/>
        </sequence>
        <attribute name="lid" type="anyURI" use="optional"/>
        <attribute name="objectType" type="tns:referenceURI" use="optional"/>
        <attribute name="status" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObject" substitutionGroup="tns:Identifiable" type="tns:RegistryObjectType"/>
  <complexType name="RegistryObjectListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Identifiable"/>
    </sequence>
  </complexType>
  <element name="RegistryObjectList" type="tns:RegistryObjectListType"/>
  <complexType name="AssociationType1">
    <annotation>
      <documentation xml:lang="en">Association is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        An Association specifies references to two previously submitted
        registry entrys.
        The sourceObject is id of the sourceObject in association
        The targetObject is id of the targetObject in association</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="associationType" type="tns:referenceURI" use="required"/>
        <attribute name="sourceObject" type="tns:referenceURI" use="required"/>
        <attribute name="targetObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Association" substitutionGroup="tns:Identifiable" type="tns:AssociationType1"/>
  <complexType name="AuditableEventType">
    <annotation>
      <documentation xml:lang="en">An Event that forms an audit trail in ebXML Registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--List of all objects that have been effected by this event-->
          <element maxOccurs="1" minOccurs="1" name="affectedObjects" type="tns:ObjectRefListType"/>
        </sequence>
        <attribute name="eventType" type="tns:referenceURI" use="required"/>
        <attribute name="timestamp" type="dateTime" use="required"/>
        <attribute name="user" type="tns:referenceURI" use="required"/>
        <attribute name="requestId" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEvent" substitutionGroup="tns:Identifiable" type="tns:AuditableEventType"/>
  <complexType name="ClassificationType">
    <annotation>
      <documentation xml:lang="en">Classification is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A Classification specifies references to two registry entrys.
        The classifiedObject is id of the Object being classified.
        The classificationNode is id of the ClassificationNode classying the object</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="classificationScheme" type="tns:referenceURI" use="optional"/>
        <attribute name="classifiedObject" type="tns:referenceURI" use="required"/>
        <attribute name="classificationNode" type="tns:referenceURI" use="optional"/>
        <attribute name="nodeRepresentation" type="tns:LongName" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Classification" substitutionGroup="tns:Identifiable" type="tns:ClassificationType"/>
  <complexType name="ClassificationNodeType">
    <annotation>
      <documentation xml:lang="en">ClassificationNode is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        ClassificationNode is used to submit a Classification tree to the Registry.
        The parent attribute is the id to the parent node. code is an optional code value for a ClassificationNode
        often defined by an external taxonomy (e.g. NAICS)</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI" use="optional"/>
        <attribute name="code" type="tns:LongName" use="optional"/>
        <attribute name="path" type="string" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNode" substitutionGroup="tns:Identifiable" type="tns:ClassificationNodeType"/>
  <complexType name="ClassificationSchemeType">
    <annotation>
      <documentation xml:lang="en">ClassificationScheme is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="isInternal" type="boolean" use="required"/>
        <attribute name="nodeType" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationScheme" substitutionGroup="tns:Identifiable" type="tns:ClassificationSchemeType"/>
  <complexType name="ExternalIdentifierType">
    <annotation>
      <documentation xml:lang="en">ExternalIdentifier is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="registryObject" type="tns:referenceURI" use="required"/>
        <attribute name="identificationScheme" type="tns:referenceURI" use="required"/>
        <attribute name="value" type="tns:LongName" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifier" substitutionGroup="tns:Identifiable" type="tns:ExternalIdentifierType"/>
  <complexType name="ExternalLinkType">
    <annotation>
      <documentation xml:lang="en">ExternalLink is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="externalURI" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLink" substitutionGroup="tns:Identifiable" type="tns:ExternalLinkType"/>
  <complexType name="ExtrinsicObjectType">
    <annotation>
      <documentation xml:lang="en">ExtrinsicObject is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfo" type="tns:VersionInfoType"/>
        </sequence>
        <attribute default="application/octet-stream" name="mimeType" type="tns:LongName"/>
        <attribute default="false" name="isOpaque" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <!--Following element decl nneds to be lower case but using upper camel case for backward compatibility-->
  <element name="ExtrinsicObject" substitutionGroup="tns:Identifiable" type="tns:ExtrinsicObjectType"/>
  <element name="Address" type="tns:PostalAddressType"/>
  <complexType name="OrganizationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI"/>
        <attribute name="primaryContact" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Organization" substitutionGroup="tns:Identifiable" type="tns:OrganizationType"/>
  <complexType name="PersonNameType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="firstName" type="tns:ShortName" use="optional"/>
    <attribute name="middleName" type="tns:ShortName" use="optional"/>
    <attribute name="lastName" type="tns:ShortName" use="optional"/>
  </complexType>
  <element name="PersonName" type="tns:PersonNameType"/>
  <complexType name="EmailAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="address" type="tns:ShortName" use="required"/>
    <attribute name="type" type="tns:String32" use="optional"/>
  </complexType>
  <element name="EmailAddress" type="tns:EmailAddressType"/>
  <complexType name="PostalAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="city" type="tns:ShortName" use="optional"/>
    <attribute name="country" type="tns:ShortName" use="optional"/>
    <attribute name="postalCode" type="tns:ShortName" use="optional"/>
    <attribute name="stateOrProvince" type="tns:ShortName" use="optional"/>
    <attribute name="street" type="tns:ShortName" use="optional"/>
    <attribute name="streetNumber" type="tns:String32" use="optional"/>
  </complexType>
  <element name="PostalAddress" type="tns:PostalAddressType"/>
  <complexType name="VersionInfoType">
    <attribute default="1.1" name="versionName" type="tns:String16" use="optional"/>
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <complexType name="RegistryPackageType">
    <annotation>
      <documentation xml:lang="en">RegistryPackage is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A RegistryPackage is a named collection of objects.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectList"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackage" substitutionGroup="tns:Identifiable" type="tns:RegistryPackageType"/>
  <complexType name="ServiceType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBinding"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Service" substitutionGroup="tns:Identifiable" type="tns:ServiceType"/>
  <complexType name="ServiceBindingType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLink"/>
        </sequence>
        <attribute name="service" type="tns:referenceURI" use="required"/>
        <attribute name="accessURI" type="anyURI" use="optional"/>
        <attribute name="targetBinding" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBinding" substitutionGroup="tns:Identifiable" type="tns:ServiceBindingType"/>
  <complexType name="SpecificationLinkType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:UsageDescription"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:UsageParameter"/>
        </sequence>
        <attribute name="serviceBinding" type="tns:referenceURI" use="required"/>
        <attribute name="specificationObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLink" substitutionGroup="tns:Identifiable" type="tns:SpecificationLinkType"/>
  <element name="UsageDescription" type="tns:InternationalStringType"/>
  <element name="UsageParameter" type="tns:FreeFormText"/>
  <complexType name="TelephoneNumberType">
    <annotation>
      <documentation xml:lang="en">TelephoneNumber is the mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="areaCode" type="tns:String8" use="optional"/>
    <attribute name="countryCode" type="tns:String8" use="optional"/>
    <attribute name="extension" type="tns:String8" use="optional"/>
    <attribute name="number" type="tns:String16" use="optional"/>
    <attribute name="phoneType" type="tns:String32" use="optional"/>
  </complexType>
  <element name="TelephoneNumber" type="tns:TelephoneNumberType"/>
  <complexType name="TelephoneNumberListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
    </sequence>
  </complexType>
  <complexType name="PersonType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence maxOccurs="1" minOccurs="1">
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <!--PersonName is optional because it is not needed in SAML Profile 
          when an external IdentityProvider is used.-->
          <element maxOccurs="1" minOccurs="0" ref="tns:PersonName"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Person" substitutionGroup="tns:Identifiable" type="tns:PersonType"/>
  <complexType name="UserType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:PersonType"></extension>
    </complexContent>
  </complexType>
  <element name="User" substitutionGroup="tns:Identifiable" type="tns:UserType"/>
  <complexType name="RegistryType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="operator" type="tns:referenceURI" use="required"/>
        <attribute name="specificationVersion" type="string" use="required"/>
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
        <attribute default="P1D" name="catalogingLatency" type="duration" use="optional"/>
        <attribute default="registryLite" name="conformanceProfile" use="optional">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="registryFull"/>
              <enumeration value="registryLite"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="Registry" substitutionGroup="tns:Identifiable" type="tns:RegistryType"/>
  <complexType name="FederationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Federation" substitutionGroup="tns:Identifiable" type="tns:FederationType"/>
  <complexType name="AdhocQueryType">
    <annotation>
      <documentation xml:lang="en">A registry query.
      A QueryExpression child element is not required when invoking a stored query.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:QueryExpression"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQuery" substitutionGroup="tns:RegistryObject" type="tns:AdhocQueryType"/>
  <complexType mixed="true" name="QueryExpressionType">
    <sequence>
      <!--MAY be any query language syntax supported. 
      MUST support FilterQuery. SHOULD support SQLQuery-->
      <any maxOccurs="1" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="queryLanguage" type="tns:referenceURI" use="required"/>
  </complexType>
  <element name="QueryExpression" type="tns:QueryExpressionType"/>
  <complexType name="NotificationType">
    <annotation>
      <documentation>Notification of registry events.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--May contain ObjectRefs and RegistryObjects-->
          <element maxOccurs="1" minOccurs="1" ref="tns:RegistryObjectList"/>
        </sequence>
        <attribute name="subscription" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Notification" type="tns:NotificationType"/>
  <element name="Action" type="tns:ActionType"/>
  <complexType name="SubscriptionType">
    <annotation>
      <documentation xml:lang="en">A Subscription for specified Events in an ebXML V3+ registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Action"/>
        </sequence>
        <!--Ref to a AdhocQueryType instance-->
        <attribute name="selector" type="tns:referenceURI" use="required"/>
        <attribute name="startTime" type="dateTime" use="optional"/>
        <attribute name="endTime" type="dateTime" use="optional"/>
        <attribute default="P1D" name="notificationInterval" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subscription" substitutionGroup="tns:Identifiable" type="tns:SubscriptionType"/>
  <complexType abstract="true" name="ActionType">
    <annotation>
      <documentation>Abstract Base type for all types of Actions.</documentation>
    </annotation>
  </complexType>
  <complexType name="NotifyActionType">
    <annotation>
      <documentation xml:lang="en">Abstract Base type for all types of Notify Actions</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:ActionType">
        <attribute default="urn:oasis:names:tc:ebxml-regrep:NotificationOptionType:ObjectRefs" name="notificationOption" type="tns:referenceURI"/>
        <attribute name="endPoint" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotifyAction" substitutionGroup="tns:Action" type="tns:NotifyActionType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/NhincCommon.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:addr="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:tns="urn:gov:hhs:fha:nhinc:common:nhinccommon">
  <xsd:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../xmlsoap.org/addressing.xsd"/>
  <xsd:complexType name="QualifiedSubjectIdentifierType">
    <xsd:sequence>
      <xsd:element name="SubjectIdentifier" type="xsd:string"/>
      <xsd:element name="AssigningAuthorityIdentifier" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType"/>
  <xsd:complexType name="AcknowledgementType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Acknowledgement" type="tns:AcknowledgementType"/>
  <xsd:complexType name="QualifiedSubjectIdentifiersType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifiers" type="tns:QualifiedSubjectIdentifiersType"/>
  <xsd:complexType name="AssertionType">
    <xsd:sequence>
      <xsd:element name="address" type="tns:AddressType"/>
      <xsd:element name="dateOfBirth" type="xsd:string"/>
      <xsd:element name="dateOfSignature" type="xsd:string"/>
      <xsd:element name="expirationDate" type="xsd:string"/>
      <xsd:element name="explanationNonClaimantSignature" type="xsd:string"/>
      <xsd:element name="haveSecondWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="haveSignature" type="xsd:boolean"/>
      <xsd:element name="haveWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="phoneNumber" type="tns:PhoneType"/>
      <!--purposeOfDisclosure deprecated element-->
      <xsd:element name="purposeOfDisclosure" type="xsd:string"/>
      <xsd:element name="secondWitnessAddress" type="tns:AddressType"/>
      <xsd:element name="secondWitnessName" type="tns:PersonNameType"/>
      <xsd:element name="secondWitnessPhone" type="tns:PhoneType"/>
      <xsd:element name="SSN" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" name="uniquePatientId" type="xsd:string"/>
      <xsd:element name="witnessAddress" type="tns:AddressType"/>
      <xsd:element name="witnessName" type="tns:PersonNameType"/>
      <xsd:element name="witnessPhone" type="tns:PhoneType"/>
      <xsd:element name="userInfo" type="tns:UserType"/>
      <xsd:element name="authorized" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="purposeOfDisclosureCoded" type="tns:CeType"/>
      <xsd:element minOccurs="0" name="claimFormRef" type="xsd:string"/>
      <xsd:element minOccurs="0" name="claimFormRaw" type="xsd:base64Binary"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Assertion" type="tns:AssertionType"/>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="addressType" type="tns:CeType"/>
      <xsd:element name="city" type="xsd:string"/>
      <xsd:element name="country" type="xsd:string"/>
      <xsd:element name="state" type="xsd:string"/>
      <xsd:element name="streetAddress" type="xsd:string"/>
      <xsd:element name="zipCode" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Address" type="tns:AddressType"/>
  <xsd:complexType name="CeType">
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="codeSystem" type="xsd:string"/>
      <xsd:element name="codeSystemName" type="xsd:string"/>
      <xsd:element name="codeSystemVersion" type="xsd:string"/>
      <xsd:element name="displayName" type="xsd:string"/>
      <xsd:element name="originalText" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" name="translation" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Ce" type="tns:CeType"/>
  <xsd:complexType name="HomeCommunityType">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="homeCommunityId" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunity" type="tns:HomeCommunityType"/>
  <xsd:complexType name="HomeCommunitiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="homeCommunity" type="tns:HomeCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunities" type="tns:HomeCommunitiesType"/>
  <xsd:complexType name="PersonNameType">
    <xsd:sequence>
      <xsd:element name="familyName" type="xsd:string"/>
      <xsd:element name="givenName" type="xsd:string"/>
      <xsd:element name="nameType" type="tns:CeType"/>
      <xsd:element name="secondNameOrInitials" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="PersonName" type="tns:PersonNameType"/>
  <xsd:complexType name="PhoneType">
    <xsd:sequence>
      <xsd:element name="areaCode" type="xsd:string"/>
      <xsd:element name="countryCode" type="xsd:string"/>
      <xsd:element name="extension" type="xsd:string"/>
      <xsd:element name="localNumber" type="xsd:string"/>
      <xsd:element name="phoneNumberType" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Phone" type="tns:PhoneType"/>
  <xsd:complexType name="UserType">
    <xsd:sequence>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="userName" type="xsd:string"/>
      <!--role deprecated element-->
      <xsd:element name="role" type="xsd:string"/>
      <xsd:element name="org" type="tns:HomeCommunityType"/>
      <xsd:element minOccurs="0" name="roleCoded" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="User" type="tns:UserType"/>
  <xsd:complexType name="EPRType">
    <xsd:sequence>
      <xsd:element name="EndpointReference" type="addr:EndpointReferenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="EPR" type="tns:EPRType"/>
  <xsd:complexType name="CreateEPRRequestType">
    <xsd:sequence>
      <xsd:element name="endpointURL" type="xsd:string"/>
      <xsd:element name="namespaceURI" type="xsd:string"/>
      <xsd:element name="namespacePrefix" type="xsd:string"/>
      <xsd:element name="serviceName" type="xsd:string"/>
      <xsd:element name="portName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="CreateEPRRequest" type="tns:CreateEPRRequestType"/>
  <xsd:complexType name="NhinTargetSystemType">
    <xsd:choice>
      <xsd:element name="epr" type="tns:EPRType"/>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element name="url" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element name="NhinTargetSystem" type="tns:NhinTargetSystemType"/>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="status" type="xsd:boolean"/>
      <xsd:element name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Response" type="tns:ResponseType"/>
  <xsd:complexType name="TokenCreationInfoType">
    <xsd:sequence>
      <xsd:element name="assertion" type="tns:AssertionType"/>
      <xsd:element name="actionName" type="xsd:string"/>
      <xsd:element name="resourceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenCreationInfo" type="tns:TokenCreationInfoType"/>
  <xsd:complexType name="TokenRetrieveInfoType">
    <xsd:sequence>
      <xsd:element name="request" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenRetrieveInfo" type="tns:TokenRetrieveInfoType"/>
  <xsd:complexType name="AssigningAuthorityType">
    <xsd:sequence>
      <xsd:element name="assigningAuthorityId" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="AssigningAuthority" type="tns:AssigningAuthorityType"/>
  <xsd:complexType name="AssigningAuthoritiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="assigningAuthority" type="tns:AssigningAuthorityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="assigningAuthorites" type="tns:AssigningAuthoritiesType"/>
  <xsd:complexType name="NhinTargetCommunityType">
    <xsd:sequence>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NhinTargetCommunitiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="nhinTargetCommunity" type="tns:NhinTargetCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NhinTargetCommunities" type="tns:NhinTargetCommunitiesType"/>
  <xsd:element name="NhinTargetCommunity" type="tns:NhinTargetCommunityType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/lcm.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rim.xsd"/>
  <!--Import the rs.xsd file with XML schema for base rs related schema-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rs.xsd"/>
  <element name="SubmitObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The SubmitObjectsRequest allows one to submit a list of RegistryObject elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the id attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="UpdateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The UpdateObjectsRequest allows one to update a list of RegistryObject elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the id attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="ApproveObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList and AdhocQuery identify the list of
        objects being approved.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="DeprecateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList and AdhocQuery identify the list of
        objects being deprecated.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="UndeprecateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList is the list of
        refs to the registry entrys being un-deprecated.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="RemoveObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList is the list of
        refs to the registry entrys being removed</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:DeletionScopeType:DeleteAll" name="deletionScope" type="rim:referenceURI" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="RelocateObjectsRequest">
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="1" name="SourceRegistry" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="DestinationRegistry" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="OwnerAtSource" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="OwnerAtDestination" type="rim:ObjectRefType"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AcceptObjectsRequest">
    <!--The ObjectRefList must only contain local ObjectRefs such that they do not specify home attribute-->
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <attribute name="correlationId" type="anyURI" use="required"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/rim.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Information Model</documentation>
  </annotation>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/../www.w3.org/2001/xml.xsd"/>
  <!--Begin information model mapping from ebRIM.-->
  <!--Define Data Types-->
  <simpleType name="referenceURI">
    <annotation>
      <documentation xml:lang="en">referenceURI is used by reference attributes within RIM.
        Each attribute of type referenceURI references a RegistryObject with
        specified URI as id.</documentation>
    </annotation>
    <restriction base="anyURI"/>
  </simpleType>
  <simpleType name="String4">
    <restriction base="string">
      <maxLength value="4"/>
    </restriction>
  </simpleType>
  <simpleType name="String8">
    <restriction base="string">
      <maxLength value="8"/>
    </restriction>
  </simpleType>
  <simpleType name="String16">
    <restriction base="string">
      <maxLength value="16"/>
    </restriction>
  </simpleType>
  <simpleType name="String32">
    <restriction base="string">
      <maxLength value="32"/>
    </restriction>
  </simpleType>
  <simpleType name="ShortName">
    <restriction base="string">
      <maxLength value="64"/>
    </restriction>
  </simpleType>
  <simpleType name="LongName">
    <restriction base="string">
      <maxLength value="256"/>
    </restriction>
  </simpleType>
  <simpleType name="FreeFormText">
    <restriction base="string">
      <maxLength value="1024"/>
    </restriction>
  </simpleType>
  <complexType name="InternationalStringType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:LocalizedString"/>
    </sequence>
  </complexType>
  <element name="InternationalString" type="tns:InternationalStringType"/>
  <element name="Name" type="tns:InternationalStringType"/>
  <element name="Description" type="tns:InternationalStringType"/>
  <complexType name="LocalizedStringType">
    <attribute default="en-US" ref="xml:lang"/>
    <attribute default="UTF-8" name="charset"/>
    <attribute name="value" type="tns:FreeFormText" use="required"/>
  </complexType>
  <element name="LocalizedString" type="tns:LocalizedStringType"/>
  <complexType name="SlotType1">
    <sequence>
      <element maxOccurs="1" minOccurs="1" ref="tns:ValueList"/>
    </sequence>
    <attribute name="name" type="tns:LongName" use="required"/>
    <!--slotType value MUST reference a ClassificationNode in the canonical DataType scheme-->
    <attribute name="slotType" type="tns:referenceURI" use="optional"/>
  </complexType>
  <element name="Slot" type="tns:SlotType1"/>
  <complexType name="ValueListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:Value"/>
    </sequence>
  </complexType>
  <element name="ValueList" type="tns:ValueListType"/>
  <element name="Value" type="tns:LongName"/>
  <complexType name="SlotListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
  </complexType>
  <element name="SlotList" type="tns:SlotListType"/>
  <complexType name="IdentifiableType">
    <annotation>
      <documentation xml:lang="en">Common base type for all types that have unique identity.     
        If id is provided and is not in proper URN syntax then it is used for
        linkage within document and is ignored by the registry. In this case the
        registry generates a UUID URN for id attribute.
        id must not be null when object is retrieved from the registry.</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
    <attribute name="id" type="anyURI" use="required"/>
    <!--home attribute is required only for remote ObjectRef-->
    <attribute name="home" type="anyURI" use="optional"/>
  </complexType>
  <element name="Identifiable" type="tns:IdentifiableType"/>
  <complexType name="ObjectRefType">
    <annotation>
      <documentation xml:lang="en">Use to reference an Object by its id.
        Specifies the id attribute of the object as its id attribute.
        id attribute in ObjectAttributes is exactly the same syntax and semantics as
        id attribute in RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:IdentifiableType">
        <!--When true and is a remote ObjectRef then the registry must create a replica for this ObjectRef-->
        <attribute default="false" name="createReplica" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="ObjectRefListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:ObjectRef"/>
    </sequence>
  </complexType>
  <element name="ObjectRefList" type="tns:ObjectRefListType"/>
  <element name="ObjectRef" substitutionGroup="tns:Identifiable" type="tns:ObjectRefType"/>
  <complexType name="RegistryObjectType">
    <complexContent>
      <extension base="tns:IdentifiableType">
        <sequence maxOccurs="1" minOccurs="0">
          <element maxOccurs="1" minOccurs="0" ref="tns:Name"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:Description"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfo" type="tns:VersionInfoType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Classification"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifier"/>
        </sequence>
        <attribute name="lid" type="anyURI" use="optional"/>
        <attribute name="objectType" type="tns:referenceURI" use="optional"/>
        <attribute name="status" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObject" substitutionGroup="tns:Identifiable" type="tns:RegistryObjectType"/>
  <complexType name="RegistryObjectListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Identifiable"/>
    </sequence>
  </complexType>
  <element name="RegistryObjectList" type="tns:RegistryObjectListType"/>
  <complexType name="AssociationType1">
    <annotation>
      <documentation xml:lang="en">Association is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        An Association specifies references to two previously submitted
        registry entrys.
        The sourceObject is id of the sourceObject in association
        The targetObject is id of the targetObject in association</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="associationType" type="tns:referenceURI" use="required"/>
        <attribute name="sourceObject" type="tns:referenceURI" use="required"/>
        <attribute name="targetObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Association" substitutionGroup="tns:Identifiable" type="tns:AssociationType1"/>
  <complexType name="AuditableEventType">
    <annotation>
      <documentation xml:lang="en">An Event that forms an audit trail in ebXML Registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--List of all objects that have been effected by this event-->
          <element maxOccurs="1" minOccurs="1" name="affectedObjects" type="tns:ObjectRefListType"/>
        </sequence>
        <attribute name="eventType" type="tns:referenceURI" use="required"/>
        <attribute name="timestamp" type="dateTime" use="required"/>
        <attribute name="user" type="tns:referenceURI" use="required"/>
        <attribute name="requestId" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEvent" substitutionGroup="tns:Identifiable" type="tns:AuditableEventType"/>
  <complexType name="ClassificationType">
    <annotation>
      <documentation xml:lang="en">Classification is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A Classification specifies references to two registry entrys.
        The classifiedObject is id of the Object being classified.
        The classificationNode is id of the ClassificationNode classying the object</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="classificationScheme" type="tns:referenceURI" use="optional"/>
        <attribute name="classifiedObject" type="tns:referenceURI" use="required"/>
        <attribute name="classificationNode" type="tns:referenceURI" use="optional"/>
        <attribute name="nodeRepresentation" type="tns:LongName" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Classification" substitutionGroup="tns:Identifiable" type="tns:ClassificationType"/>
  <complexType name="ClassificationNodeType">
    <annotation>
      <documentation xml:lang="en">ClassificationNode is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        ClassificationNode is used to submit a Classification tree to the Registry.
        The parent attribute is the id to the parent node. code is an optional code value for a ClassificationNode
        often defined by an external taxonomy (e.g. NAICS)</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI" use="optional"/>
        <attribute name="code" type="tns:LongName" use="optional"/>
        <attribute name="path" type="string" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNode" substitutionGroup="tns:Identifiable" type="tns:ClassificationNodeType"/>
  <complexType name="ClassificationSchemeType">
    <annotation>
      <documentation xml:lang="en">ClassificationScheme is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="isInternal" type="boolean" use="required"/>
        <attribute name="nodeType" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationScheme" substitutionGroup="tns:Identifiable" type="tns:ClassificationSchemeType"/>
  <complexType name="ExternalIdentifierType">
    <annotation>
      <documentation xml:lang="en">ExternalIdentifier is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="registryObject" type="tns:referenceURI" use="required"/>
        <attribute name="identificationScheme" type="tns:referenceURI" use="required"/>
        <attribute name="value" type="tns:LongName" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifier" substitutionGroup="tns:Identifiable" type="tns:ExternalIdentifierType"/>
  <complexType name="ExternalLinkType">
    <annotation>
      <documentation xml:lang="en">ExternalLink is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="externalURI" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLink" substitutionGroup="tns:Identifiable" type="tns:ExternalLinkType"/>
  <complexType name="ExtrinsicObjectType">
    <annotation>
      <documentation xml:lang="en">ExtrinsicObject is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfo" type="tns:VersionInfoType"/>
        </sequence>
        <attribute default="application/octet-stream" name="mimeType" type="tns:LongName"/>
        <attribute default="false" name="isOpaque" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <!--Following element decl nneds to be lower case but using upper camel case for backward compatibility-->
  <element name="ExtrinsicObject" substitutionGroup="tns:Identifiable" type="tns:ExtrinsicObjectType"/>
  <element name="Address" type="tns:PostalAddressType"/>
  <complexType name="OrganizationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI"/>
        <attribute name="primaryContact" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Organization" substitutionGroup="tns:Identifiable" type="tns:OrganizationType"/>
  <complexType name="PersonNameType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="firstName" type="tns:ShortName" use="optional"/>
    <attribute name="middleName" type="tns:ShortName" use="optional"/>
    <attribute name="lastName" type="tns:ShortName" use="optional"/>
  </complexType>
  <element name="PersonName" type="tns:PersonNameType"/>
  <complexType name="EmailAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="address" type="tns:ShortName" use="required"/>
    <attribute name="type" type="tns:String32" use="optional"/>
  </complexType>
  <element name="EmailAddress" type="tns:EmailAddressType"/>
  <complexType name="PostalAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="city" type="tns:ShortName" use="optional"/>
    <attribute name="country" type="tns:ShortName" use="optional"/>
    <attribute name="postalCode" type="tns:ShortName" use="optional"/>
    <attribute name="stateOrProvince" type="tns:ShortName" use="optional"/>
    <attribute name="street" type="tns:ShortName" use="optional"/>
    <attribute name="streetNumber" type="tns:String32" use="optional"/>
  </complexType>
  <element name="PostalAddress" type="tns:PostalAddressType"/>
  <complexType name="VersionInfoType">
    <attribute default="1.1" name="versionName" type="tns:String16" use="optional"/>
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <complexType name="RegistryPackageType">
    <annotation>
      <documentation xml:lang="en">RegistryPackage is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A RegistryPackage is a named collection of objects.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectList"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackage" substitutionGroup="tns:Identifiable" type="tns:RegistryPackageType"/>
  <complexType name="ServiceType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBinding"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Service" substitutionGroup="tns:Identifiable" type="tns:ServiceType"/>
  <complexType name="ServiceBindingType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLink"/>
        </sequence>
        <attribute name="service" type="tns:referenceURI" use="required"/>
        <attribute name="accessURI" type="anyURI" use="optional"/>
        <attribute name="targetBinding" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBinding" substitutionGroup="tns:Identifiable" type="tns:ServiceBindingType"/>
  <complexType name="SpecificationLinkType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:UsageDescription"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:UsageParameter"/>
        </sequence>
        <attribute name="serviceBinding" type="tns:referenceURI" use="required"/>
        <attribute name="specificationObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLink" substitutionGroup="tns:Identifiable" type="tns:SpecificationLinkType"/>
  <element name="UsageDescription" type="tns:InternationalStringType"/>
  <element name="UsageParameter" type="tns:FreeFormText"/>
  <complexType name="TelephoneNumberType">
    <annotation>
      <documentation xml:lang="en">TelephoneNumber is the mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="areaCode" type="tns:String8" use="optional"/>
    <attribute name="countryCode" type="tns:String8" use="optional"/>
    <attribute name="extension" type="tns:String8" use="optional"/>
    <attribute name="number" type="tns:String16" use="optional"/>
    <attribute name="phoneType" type="tns:String32" use="optional"/>
  </complexType>
  <element name="TelephoneNumber" type="tns:TelephoneNumberType"/>
  <complexType name="TelephoneNumberListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
    </sequence>
  </complexType>
  <complexType name="PersonType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence maxOccurs="1" minOccurs="1">
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <!--PersonName is optional because it is not needed in SAML Profile 
          when an external IdentityProvider is used.-->
          <element maxOccurs="1" minOccurs="0" ref="tns:PersonName"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Person" substitutionGroup="tns:Identifiable" type="tns:PersonType"/>
  <complexType name="UserType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:PersonType"></extension>
    </complexContent>
  </complexType>
  <element name="User" substitutionGroup="tns:Identifiable" type="tns:UserType"/>
  <complexType name="RegistryType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="operator" type="tns:referenceURI" use="required"/>
        <attribute name="specificationVersion" type="string" use="required"/>
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
        <attribute default="P1D" name="catalogingLatency" type="duration" use="optional"/>
        <attribute default="registryLite" name="conformanceProfile" use="optional">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="registryFull"/>
              <enumeration value="registryLite"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="Registry" substitutionGroup="tns:Identifiable" type="tns:RegistryType"/>
  <complexType name="FederationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Federation" substitutionGroup="tns:Identifiable" type="tns:FederationType"/>
  <complexType name="AdhocQueryType">
    <annotation>
      <documentation xml:lang="en">A registry query.
      A QueryExpression child element is not required when invoking a stored query.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:QueryExpression"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQuery" substitutionGroup="tns:RegistryObject" type="tns:AdhocQueryType"/>
  <complexType mixed="true" name="QueryExpressionType">
    <sequence>
      <!--MAY be any query language syntax supported. 
      MUST support FilterQuery. SHOULD support SQLQuery-->
      <any maxOccurs="1" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="queryLanguage" type="tns:referenceURI" use="required"/>
  </complexType>
  <element name="QueryExpression" type="tns:QueryExpressionType"/>
  <complexType name="NotificationType">
    <annotation>
      <documentation>Notification of registry events.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--May contain ObjectRefs and RegistryObjects-->
          <element maxOccurs="1" minOccurs="1" ref="tns:RegistryObjectList"/>
        </sequence>
        <attribute name="subscription" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Notification" type="tns:NotificationType"/>
  <element name="Action" type="tns:ActionType"/>
  <complexType name="SubscriptionType">
    <annotation>
      <documentation xml:lang="en">A Subscription for specified Events in an ebXML V3+ registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Action"/>
        </sequence>
        <!--Ref to a AdhocQueryType instance-->
        <attribute name="selector" type="tns:referenceURI" use="required"/>
        <attribute name="startTime" type="dateTime" use="optional"/>
        <attribute name="endTime" type="dateTime" use="optional"/>
        <attribute default="P1D" name="notificationInterval" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subscription" substitutionGroup="tns:Identifiable" type="tns:SubscriptionType"/>
  <complexType abstract="true" name="ActionType">
    <annotation>
      <documentation>Abstract Base type for all types of Actions.</documentation>
    </annotation>
  </complexType>
  <complexType name="NotifyActionType">
    <annotation>
      <documentation xml:lang="en">Abstract Base type for all types of Notify Actions</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:ActionType">
        <attribute default="urn:oasis:names:tc:ebxml-regrep:NotificationOptionType:ObjectRefs" name="notificationOption" type="tns:referenceURI"/>
        <attribute name="endPoint" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotifyAction" substitutionGroup="tns:Action" type="tns:NotifyActionType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../xmlsoap.org/addressing.xsd</con:url><con:content><![CDATA[<xs:schema blockDefault="#all" elementFormDefault="qualified" targetNamespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
  <!--//////////////////// WS-Addressing ////////////////////-->
  <!--Endpoint reference-->
  <xs:element name="EndpointReference" type="wsa:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="wsa:AttributedURI"/>
      <xs:element minOccurs="0" name="ReferenceProperties" type="wsa:ReferencePropertiesType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="wsa:ReferenceParametersType"/>
      <xs:element minOccurs="0" name="PortType" type="wsa:AttributedQName"/>
      <xs:element minOccurs="0" name="ServiceName" type="wsa:ServiceNameType"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax">
        <xs:annotation>
          <xs:documentation>If "Policy" elements from namespace "http://schemas.xmlsoap.org/ws/2002/12/policy#policy" are used, they must appear first (before any extensibility elements).</xs:documentation>
        </xs:annotation>
      </xs:any>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="ReferencePropertiesType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServiceNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:attribute name="PortName" type="xs:NCName"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Message information header blocks-->
  <xs:element name="MessageID" type="wsa:AttributedURI"/>
  <xs:element name="RelatesTo" type="wsa:Relationship"/>
  <xs:element name="To" type="wsa:AttributedURI"/>
  <xs:element name="Action" type="wsa:AttributedURI"/>
  <xs:element name="From" type="wsa:EndpointReferenceType"/>
  <xs:element name="ReplyTo" type="wsa:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="wsa:EndpointReferenceType"/>
  <xs:complexType name="Relationship">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute name="RelationshipType" type="xs:QName" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeValues">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="wsa:Reply"/>
    </xs:restriction>
  </xs:simpleType>
  <!--June 19, 2007: The ReplyAfter element is deprecated. The name of this element does not match the
    name (RetryAfter) used in the specification (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).-->
  <xs:element name="ReplyAfter" type="wsa:ReplyAfterType"/>
  <xs:complexType name="ReplyAfterType">
    <xs:simpleContent>
      <xs:extension base="xs:nonNegativeInteger">
        <xs:anyAttribute namespace="##other"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--June 19, 2007: The RetryAfter element has been added to be consistent with the specification
    (http://www.w3.org/Submission/2004/SUBM-ws-addressing-20040810/).-->
  <xs:element name="RetryAfter" type="wsa:RetryAfterType"/>
  <xs:complexType name="RetryAfterType">
    <xs:simpleContent>
      <xs:extension base="xs:nonNegativeInteger">
        <xs:anyAttribute namespace="##other"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="FaultSubcodeValues">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="wsa:InvalidMessageInformationHeader"/>
      <xs:enumeration value="wsa:MessageInformationHeaderRequired"/>
      <xs:enumeration value="wsa:DestinationUnreachable"/>
      <xs:enumeration value="wsa:ActionNotSupported"/>
      <xs:enumeration value="wsa:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="Action" type="xs:anyURI"/>
  <!--Common declarations and definitions-->
  <xs:complexType name="AttributedQName">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="AttributedURI">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/query.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/rim.xsd"/>
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/rs.xsd"/>
  <complexType name="ResponseOptionType">
    <attribute default="RegistryObject" name="returnType">
      <simpleType>
        <restriction base="NCName">
          <enumeration value="ObjectRef"/>
          <enumeration value="RegistryObject"/>
          <enumeration value="LeafClass"/>
          <enumeration value="LeafClassWithRepositoryItem"/>
        </restriction>
      </simpleType>
    </attribute>
    <attribute default="false" name="returnComposedObjects" type="boolean"/>
  </complexType>
  <element name="ResponseOption" type="tns:ResponseOptionType"/>
  <element name="AdhocQueryRequest">
    <annotation>
      <documentation xml:lang="en">An Ad hoc query request specifies an ad hoc query.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="tns:ResponseOption"/>
            <element ref="rim:AdhocQuery"/>
          </sequence>
          <attribute default="false" name="federated" type="boolean" use="optional"/>
          <attribute name="federation" type="anyURI" use="optional"/>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute default="-1" name="maxResults" type="integer"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AdhocQueryResponse">
    <annotation>
      <documentation xml:lang="en">The response includes a RegistryObjectList which has zero or more
        RegistryObjects that match the query specified in AdhocQueryRequest.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryResponseType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute name="totalResultCount" type="integer" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <complexType abstract="true" name="FilterQueryType">
    <sequence>
      <element maxOccurs="1" minOccurs="0" name="PrimaryFilter" type="tns:FilterType"/>
    </sequence>
  </complexType>
  <complexType abstract="true" name="BranchType">
    <complexContent>
      <extension base="tns:FilterQueryType"></extension>
    </complexContent>
  </complexType>
  <complexType name="InternationalStringBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="LocalizedStringFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="SlotBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="RegistryObjectQueryType">
    <complexContent>
      <extension base="tns:FilterQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="SlotBranch" type="tns:SlotBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="NameBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="DescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfoFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifierQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ObjectTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="StatusQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="SourceAssociationQuery" type="tns:AssociationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TargetAssociationQuery" type="tns:AssociationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObjectQuery" type="tns:RegistryObjectQueryType"/>
  <complexType name="AssociationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="AssociationTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="SourceObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="TargetObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AssociationQuery" type="tns:AssociationQueryType"/>
  <complexType name="AuditableEventQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AffectedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="EventTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="UserQuery" type="tns:UserQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEventQuery" type="tns:AuditableEventQueryType"/>
  <complexType name="ClassificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationSchemeQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ClassifiedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationNodeQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationQuery" type="tns:ClassificationQueryType"/>
  <complexType name="ClassificationNodeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNodeQuery" type="tns:ClassificationNodeQueryType"/>
  <complexType name="ClassificationSchemeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="NodeTypeQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
  <complexType name="ExternalIdentifierQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
          <element maxOccurs="1" minOccurs="0" name="IdentificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifierQuery" type="tns:ExternalIdentifierQueryType"/>
  <complexType name="ExternalLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLinkQuery" type="tns:ExternalLinkQueryType"/>
  <complexType name="ExtrinsicObjectQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfoFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExtrinsicObjectQuery" type="tns:ExtrinsicObjectQueryType"/>
  <complexType name="OrganizationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildOrganizationQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="PrimaryContactQuery" type="tns:PersonQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="OrganizationQuery" type="tns:OrganizationQueryType"/>
  <complexType name="RegistryPackageQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType"></extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackageQuery" type="tns:RegistryPackageQueryType"/>
  <complexType name="ServiceQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBindingQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceQuery" type="tns:ServiceQueryType"/>
  <complexType name="ServiceBindingQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLinkQuery"/>
          <element maxOccurs="1" minOccurs="0" name="TargetBindingQuery" type="tns:ServiceBindingQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBindingQuery" type="tns:ServiceBindingQueryType"/>
  <complexType name="SpecificationLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="UsageDescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceBindingQuery"/>
          <element maxOccurs="1" minOccurs="0" name="SpecificationObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLinkQuery" type="tns:SpecificationLinkQueryType"/>
  <complexType name="PersonQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="PersonNameFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="PersonQuery" type="tns:PersonQueryType"/>
  <complexType name="UserQueryType">
    <complexContent>
      <extension base="tns:PersonQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="UserQuery" type="tns:UserQueryType"/>
  <complexType name="RegistryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="OperatorQuery" type="tns:OrganizationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryQuery" type="tns:RegistryQueryType"/>
  <complexType name="FederationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FederationQuery" type="tns:FederationQueryType"/>
  <complexType name="AdhocQueryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryExpressionBranch" type="tns:QueryExpressionBranchType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQueryQuery" type="tns:AdhocQueryQueryType"/>
  <complexType name="QueryExpressionBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryLanguageQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="NotificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotificationQuery" type="tns:NotificationQueryType"/>
  <complexType name="SubscriptionQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="SelectorQuery" type="tns:AdhocQueryQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubscriptionQuery" type="tns:SubscriptionQueryType"/>
  <!--The Filter type hierarchy-->
  <complexType name="FilterType">
    <attribute default="false" name="negate" type="boolean"/>
  </complexType>
  <element abstract="true" name="Filter" type="tns:FilterType"/>
  <complexType name="CompoundFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <sequence>
          <element maxOccurs="1" minOccurs="1" name="LeftFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="1" name="RightFilter" type="tns:FilterType"/>
        </sequence>
        <attribute name="logicalOperator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="AND"/>
              <enumeration value="OR"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="CompoundFilter" type="tns:CompoundFilterType"/>
  <complexType abstract="true" name="SimpleFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <attribute name="domainAttribute" type="string" use="required"/>
        <attribute name="comparator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="LE"/>
              <enumeration value="LT"/>
              <enumeration value="GE"/>
              <enumeration value="GT"/>
              <enumeration value="EQ"/>
              <enumeration value="NE"/>
              <enumeration value="Like"/>
              <enumeration value="NotLike"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="BooleanFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="boolean" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="BooleanFilter" type="tns:BooleanFilterType"/>
  <complexType name="IntegerFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="integer" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="IntegerFilter" type="tns:IntegerFilterType"/>
  <complexType name="FloatFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="float" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FloatFilter" type="tns:FloatFilterType"/>
  <complexType name="DateTimeFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="DateTimeFilter" type="tns:DateTimeFilterType"/>
  <complexType name="StringFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="StringFilter" type="tns:StringFilterType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/b-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/b-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--======================== Imports  ============================-->
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsrf/bf-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/bf-2.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/t-1" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/t-1.xsd"/>
  <!--===================== Misc. Helper Types =====================-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="TopicExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
    <xsd:anyAttribute/>
  </xsd:complexType>
  <xsd:complexType name="FilterType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionPolicyType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=============== Resource Property Related  ===================-->
  <!--======== Resource Properties for NotificationProducer ========-->
  <xsd:element name="TopicExpression" type="wsnt:TopicExpressionType"/>
  <xsd:element default="true" name="FixedTopicSet" type="xsd:boolean"/>
  <xsd:element name="TopicExpressionDialect" type="xsd:anyURI"/>
  <xsd:element name="NotificationProducerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpression"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:FixedTopicSet"/>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpressionDialect"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wstop:TopicSet"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--======== Resource Properties for SubscriptionManager =========-->
  <xsd:element name="ConsumerReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Filter" type="wsnt:FilterType"/>
  <xsd:element name="SubscriptionPolicy" type="wsnt:SubscriptionPolicyType"/>
  <xsd:element name="CreationTime" type="xsd:dateTime"/>
  <xsd:element name="SubscriptionManagerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:ConsumerReference"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Filter"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionPolicy"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CreationTime"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================= Notification Metadata  =====================-->
  <xsd:element name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
  <xsd:element name="ProducerReference" type="wsa:EndpointReferenceType"/>
  <!--================== Message Helper Types  =====================-->
  <xsd:complexType name="NotificationMessageHolderType">
    <xsd:sequence>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionReference"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Topic"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:ProducerReference"/>
      <xsd:element name="Message">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotificationMessage" type="wsnt:NotificationMessageHolderType"/>
  <!--========== Message Types for NotificationConsumer  ===========-->
  <xsd:element name="Notify">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="1" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--========== Message Types for NotificationProducer  ===========-->
  <xsd:simpleType name="AbsoluteOrRelativeTimeType">
    <xsd:union memberTypes="xsd:dateTime xsd:duration"/>
  </xsd:simpleType>
  <xsd:element name="CurrentTime" type="xsd:dateTime"/>
  <xsd:element name="TerminationTime" nillable="true" type="xsd:dateTime"/>
  <xsd:element name="ProducerProperties" type="wsnt:QueryExpressionType"/>
  <xsd:element name="MessageContent" type="wsnt:QueryExpressionType"/>
  <xsd:element name="UseRaw">
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="Subscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="ConsumerReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="Filter" type="wsnt:FilterType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="InitialTerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="SubscriptionPolicy">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:TerminationTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessage">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessageResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="SubscribeCreationFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubscribeCreationFailedFault" type="wsnt:SubscribeCreationFailedFaultType"/>
  <xsd:complexType name="InvalidFilterFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="UnknownFilter" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidFilterFault" type="wsnt:InvalidFilterFaultType"/>
  <xsd:complexType name="TopicExpressionDialectUnknownFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicExpressionDialectUnknownFault" type="wsnt:TopicExpressionDialectUnknownFaultType"/>
  <xsd:complexType name="InvalidTopicExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidTopicExpressionFault" type="wsnt:InvalidTopicExpressionFaultType"/>
  <xsd:complexType name="TopicNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNotSupportedFault" type="wsnt:TopicNotSupportedFaultType"/>
  <xsd:complexType name="MultipleTopicsSpecifiedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="MultipleTopicsSpecifiedFault" type="wsnt:MultipleTopicsSpecifiedFaultType"/>
  <xsd:complexType name="InvalidProducerPropertiesExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidProducerPropertiesExpressionFault" type="wsnt:InvalidProducerPropertiesExpressionFaultType"/>
  <xsd:complexType name="InvalidMessageContentExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidMessageContentExpressionFault" type="wsnt:InvalidMessageContentExpressionFaultType"/>
  <xsd:complexType name="UnrecognizedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnrecognizedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnrecognizedPolicyRequestFault" type="wsnt:UnrecognizedPolicyRequestFaultType"/>
  <xsd:complexType name="UnsupportedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnsupportedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnsupportedPolicyRequestFault" type="wsnt:UnsupportedPolicyRequestFaultType"/>
  <xsd:complexType name="NotifyMessageNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NotifyMessageNotSupportedFault" type="wsnt:NotifyMessageNotSupportedFaultType"/>
  <xsd:complexType name="UnacceptableInitialTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableInitialTerminationTimeFault" type="wsnt:UnacceptableInitialTerminationTimeFaultType"/>
  <xsd:complexType name="NoCurrentMessageOnTopicFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NoCurrentMessageOnTopicFault" type="wsnt:NoCurrentMessageOnTopicFaultType"/>
  <!--======== Message Types for PullPoint  ========================-->
  <xsd:element name="GetMessages">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="MaximumNumber" type="xsd:nonNegativeInteger"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetMessagesResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToGetMessagesFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToGetMessagesFault" type="wsnt:UnableToGetMessagesFaultType"/>
  <xsd:complexType name="UnableToDestroyPullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroyPullPointFault" type="wsnt:UnableToDestroyPullPointFaultType"/>
  <!--======== Message Types for Create PullPoint  =================-->
  <xsd:element name="CreatePullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreatePullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="PullPoint" type="wsa:EndpointReferenceType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToCreatePullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToCreatePullPointFault" type="wsnt:UnableToCreatePullPointFaultType"/>
  <!--======== Message Types for Base SubscriptionManager  =========-->
  <xsd:element name="Renew">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="TerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RenewResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:TerminationTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnacceptableTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableTerminationTimeFault" type="wsnt:UnacceptableTerminationTimeFaultType"/>
  <xsd:element name="Unsubscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UnsubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToDestroySubscriptionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroySubscriptionFault" type="wsnt:UnableToDestroySubscriptionFaultType"/>
  <!--====== Message Types for Pausable SubscriptionManager  =======-->
  <xsd:element name="PauseSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PauseSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PauseFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PauseFailedFault" type="wsnt:PauseFailedFaultType"/>
  <xsd:complexType name="ResumeFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ResumeFailedFault" type="wsnt:ResumeFailedFaultType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/query.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/rim.xsd"/>
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/rs.xsd"/>
  <complexType name="ResponseOptionType">
    <attribute default="RegistryObject" name="returnType">
      <simpleType>
        <restriction base="NCName">
          <enumeration value="ObjectRef"/>
          <enumeration value="RegistryObject"/>
          <enumeration value="LeafClass"/>
          <enumeration value="LeafClassWithRepositoryItem"/>
        </restriction>
      </simpleType>
    </attribute>
    <attribute default="false" name="returnComposedObjects" type="boolean"/>
  </complexType>
  <element name="ResponseOption" type="tns:ResponseOptionType"/>
  <element name="AdhocQueryRequest">
    <annotation>
      <documentation xml:lang="en">An Ad hoc query request specifies an ad hoc query.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="tns:ResponseOption"/>
            <element ref="rim:AdhocQuery"/>
          </sequence>
          <attribute default="false" name="federated" type="boolean" use="optional"/>
          <attribute name="federation" type="anyURI" use="optional"/>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute default="-1" name="maxResults" type="integer"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AdhocQueryResponse">
    <annotation>
      <documentation xml:lang="en">The response includes a RegistryObjectList which has zero or more
        RegistryObjects that match the query specified in AdhocQueryRequest.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryResponseType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute name="totalResultCount" type="integer" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <complexType abstract="true" name="FilterQueryType">
    <sequence>
      <element maxOccurs="1" minOccurs="0" name="PrimaryFilter" type="tns:FilterType"/>
    </sequence>
  </complexType>
  <complexType abstract="true" name="BranchType">
    <complexContent>
      <extension base="tns:FilterQueryType"></extension>
    </complexContent>
  </complexType>
  <complexType name="InternationalStringBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="LocalizedStringFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="SlotBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="RegistryObjectQueryType">
    <complexContent>
      <extension base="tns:FilterQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="SlotBranch" type="tns:SlotBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="NameBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="DescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfoFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifierQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ObjectTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="StatusQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="SourceAssociationQuery" type="tns:AssociationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TargetAssociationQuery" type="tns:AssociationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObjectQuery" type="tns:RegistryObjectQueryType"/>
  <complexType name="AssociationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="AssociationTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="SourceObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="TargetObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AssociationQuery" type="tns:AssociationQueryType"/>
  <complexType name="AuditableEventQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AffectedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="EventTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="UserQuery" type="tns:UserQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEventQuery" type="tns:AuditableEventQueryType"/>
  <complexType name="ClassificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationSchemeQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ClassifiedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationNodeQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationQuery" type="tns:ClassificationQueryType"/>
  <complexType name="ClassificationNodeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNodeQuery" type="tns:ClassificationNodeQueryType"/>
  <complexType name="ClassificationSchemeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="NodeTypeQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
  <complexType name="ExternalIdentifierQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
          <element maxOccurs="1" minOccurs="0" name="IdentificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifierQuery" type="tns:ExternalIdentifierQueryType"/>
  <complexType name="ExternalLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLinkQuery" type="tns:ExternalLinkQueryType"/>
  <complexType name="ExtrinsicObjectQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfoFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExtrinsicObjectQuery" type="tns:ExtrinsicObjectQueryType"/>
  <complexType name="OrganizationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildOrganizationQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="PrimaryContactQuery" type="tns:PersonQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="OrganizationQuery" type="tns:OrganizationQueryType"/>
  <complexType name="RegistryPackageQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType"></extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackageQuery" type="tns:RegistryPackageQueryType"/>
  <complexType name="ServiceQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBindingQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceQuery" type="tns:ServiceQueryType"/>
  <complexType name="ServiceBindingQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLinkQuery"/>
          <element maxOccurs="1" minOccurs="0" name="TargetBindingQuery" type="tns:ServiceBindingQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBindingQuery" type="tns:ServiceBindingQueryType"/>
  <complexType name="SpecificationLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="UsageDescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceBindingQuery"/>
          <element maxOccurs="1" minOccurs="0" name="SpecificationObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLinkQuery" type="tns:SpecificationLinkQueryType"/>
  <complexType name="PersonQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="PersonNameFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="PersonQuery" type="tns:PersonQueryType"/>
  <complexType name="UserQueryType">
    <complexContent>
      <extension base="tns:PersonQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="UserQuery" type="tns:UserQueryType"/>
  <complexType name="RegistryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="OperatorQuery" type="tns:OrganizationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryQuery" type="tns:RegistryQueryType"/>
  <complexType name="FederationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FederationQuery" type="tns:FederationQueryType"/>
  <complexType name="AdhocQueryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryExpressionBranch" type="tns:QueryExpressionBranchType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQueryQuery" type="tns:AdhocQueryQueryType"/>
  <complexType name="QueryExpressionBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryLanguageQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="NotificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotificationQuery" type="tns:NotificationQueryType"/>
  <complexType name="SubscriptionQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="SelectorQuery" type="tns:AdhocQueryQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubscriptionQuery" type="tns:SubscriptionQueryType"/>
  <!--The Filter type hierarchy-->
  <complexType name="FilterType">
    <attribute default="false" name="negate" type="boolean"/>
  </complexType>
  <element abstract="true" name="Filter" type="tns:FilterType"/>
  <complexType name="CompoundFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <sequence>
          <element maxOccurs="1" minOccurs="1" name="LeftFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="1" name="RightFilter" type="tns:FilterType"/>
        </sequence>
        <attribute name="logicalOperator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="AND"/>
              <enumeration value="OR"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="CompoundFilter" type="tns:CompoundFilterType"/>
  <complexType abstract="true" name="SimpleFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <attribute name="domainAttribute" type="string" use="required"/>
        <attribute name="comparator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="LE"/>
              <enumeration value="LT"/>
              <enumeration value="GE"/>
              <enumeration value="GT"/>
              <enumeration value="EQ"/>
              <enumeration value="NE"/>
              <enumeration value="Like"/>
              <enumeration value="NotLike"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="BooleanFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="boolean" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="BooleanFilter" type="tns:BooleanFilterType"/>
  <complexType name="IntegerFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="integer" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="IntegerFilter" type="tns:IntegerFilterType"/>
  <complexType name="FloatFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="float" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FloatFilter" type="tns:FloatFilterType"/>
  <complexType name="DateTimeFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="DateTimeFilter" type="tns:DateTimeFilterType"/>
  <complexType name="StringFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="StringFilter" type="tns:StringFilterType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/SubscriptionB2OverrideForCdc.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:subscriptionb2overrideforcdc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:addr="http://www.w3.org/2005/08/addressing" xmlns:nhin-cdc="http://www.hhs.gov/healthit/nhin/cdc" xmlns:tns="urn:gov:hhs:fha:nhinc:common:subscriptionb2overrideforcdc" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:xdsb="urn:ihe:iti:xds-b:2007">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/b-2.xsd"/>
  <xsd:import namespace="http://www.hhs.gov/healthit/nhin/cdc" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../nhinc/common/Cdc.xsd"/>
  <xsd:complexType name="SubscribeCdcBioPackageType">
    <xsd:sequence>
      <!--<xsd:element name="ConsumerReference" type="addr:EndpointReferenceType"></xsd:element>
            <xsd:element name="Filter" type="wsnt:FilterType" minOccurs="0"></xsd:element>
            <xsd:element name="SubscriptionPolicy" type="tns:SubscriptionPolicy"></xsd:element>-->
      <xsd:element minOccurs="0" ref="wsnt:ConsumerReference"/>
      <xsd:element minOccurs="0" ref="wsnt:Filter"/>
      <xsd:element name="SubscriptionPolicy" type="tns:SubscriptionPolicyType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionPolicyType">
    <xsd:sequence>
      <xsd:element ref="nhin-cdc:CdcBioPackageSubscriptionCriteria"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NotificationMessageHolderType">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="wsnt:SubscriptionReference"/>
      <xsd:element minOccurs="0" ref="wsnt:Topic"/>
      <xsd:element name="Message">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element ref="nhin-cdc:CdcBioPackagePayload"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NotifyCdcBioPackageType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="NotificationMessage" type="tns:NotificationMessageHolderType"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/rim.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Information Model</documentation>
  </annotation>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/../www.w3.org/2001/xml.xsd"/>
  <!--Begin information model mapping from ebRIM.-->
  <!--Define Data Types-->
  <simpleType name="referenceURI">
    <annotation>
      <documentation xml:lang="en">referenceURI is used by reference attributes within RIM.
        Each attribute of type referenceURI references a RegistryObject with
        specified URI as id.</documentation>
    </annotation>
    <restriction base="anyURI"/>
  </simpleType>
  <simpleType name="String4">
    <restriction base="string">
      <maxLength value="4"/>
    </restriction>
  </simpleType>
  <simpleType name="String8">
    <restriction base="string">
      <maxLength value="8"/>
    </restriction>
  </simpleType>
  <simpleType name="String16">
    <restriction base="string">
      <maxLength value="16"/>
    </restriction>
  </simpleType>
  <simpleType name="String32">
    <restriction base="string">
      <maxLength value="32"/>
    </restriction>
  </simpleType>
  <simpleType name="ShortName">
    <restriction base="string">
      <maxLength value="64"/>
    </restriction>
  </simpleType>
  <simpleType name="LongName">
    <restriction base="string">
      <maxLength value="256"/>
    </restriction>
  </simpleType>
  <simpleType name="FreeFormText">
    <restriction base="string">
      <maxLength value="1024"/>
    </restriction>
  </simpleType>
  <complexType name="InternationalStringType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:LocalizedString"/>
    </sequence>
  </complexType>
  <element name="InternationalString" type="tns:InternationalStringType"/>
  <element name="Name" type="tns:InternationalStringType"/>
  <element name="Description" type="tns:InternationalStringType"/>
  <complexType name="LocalizedStringType">
    <attribute default="en-US" ref="xml:lang"/>
    <attribute default="UTF-8" name="charset"/>
    <attribute name="value" type="tns:FreeFormText" use="required"/>
  </complexType>
  <element name="LocalizedString" type="tns:LocalizedStringType"/>
  <complexType name="SlotType1">
    <sequence>
      <element maxOccurs="1" minOccurs="1" ref="tns:ValueList"/>
    </sequence>
    <attribute name="name" type="tns:LongName" use="required"/>
    <!--slotType value MUST reference a ClassificationNode in the canonical DataType scheme-->
    <attribute name="slotType" type="tns:referenceURI" use="optional"/>
  </complexType>
  <element name="Slot" type="tns:SlotType1"/>
  <complexType name="ValueListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:Value"/>
    </sequence>
  </complexType>
  <element name="ValueList" type="tns:ValueListType"/>
  <element name="Value" type="tns:LongName"/>
  <complexType name="SlotListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
  </complexType>
  <element name="SlotList" type="tns:SlotListType"/>
  <complexType name="IdentifiableType">
    <annotation>
      <documentation xml:lang="en">Common base type for all types that have unique identity.     
        If id is provided and is not in proper URN syntax then it is used for
        linkage within document and is ignored by the registry. In this case the
        registry generates a UUID URN for id attribute.
        id must not be null when object is retrieved from the registry.</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
    <attribute name="id" type="anyURI" use="required"/>
    <!--home attribute is required only for remote ObjectRef-->
    <attribute name="home" type="anyURI" use="optional"/>
  </complexType>
  <element name="Identifiable" type="tns:IdentifiableType"/>
  <complexType name="ObjectRefType">
    <annotation>
      <documentation xml:lang="en">Use to reference an Object by its id.
        Specifies the id attribute of the object as its id attribute.
        id attribute in ObjectAttributes is exactly the same syntax and semantics as
        id attribute in RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:IdentifiableType">
        <!--When true and is a remote ObjectRef then the registry must create a replica for this ObjectRef-->
        <attribute default="false" name="createReplica" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="ObjectRefListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:ObjectRef"/>
    </sequence>
  </complexType>
  <element name="ObjectRefList" type="tns:ObjectRefListType"/>
  <element name="ObjectRef" substitutionGroup="tns:Identifiable" type="tns:ObjectRefType"/>
  <complexType name="RegistryObjectType">
    <complexContent>
      <extension base="tns:IdentifiableType">
        <sequence maxOccurs="1" minOccurs="0">
          <element maxOccurs="1" minOccurs="0" ref="tns:Name"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:Description"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfo" type="tns:VersionInfoType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Classification"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifier"/>
        </sequence>
        <attribute name="lid" type="anyURI" use="optional"/>
        <attribute name="objectType" type="tns:referenceURI" use="optional"/>
        <attribute name="status" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObject" substitutionGroup="tns:Identifiable" type="tns:RegistryObjectType"/>
  <complexType name="RegistryObjectListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Identifiable"/>
    </sequence>
  </complexType>
  <element name="RegistryObjectList" type="tns:RegistryObjectListType"/>
  <complexType name="AssociationType1">
    <annotation>
      <documentation xml:lang="en">Association is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        An Association specifies references to two previously submitted
        registry entrys.
        The sourceObject is id of the sourceObject in association
        The targetObject is id of the targetObject in association</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="associationType" type="tns:referenceURI" use="required"/>
        <attribute name="sourceObject" type="tns:referenceURI" use="required"/>
        <attribute name="targetObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Association" substitutionGroup="tns:Identifiable" type="tns:AssociationType1"/>
  <complexType name="AuditableEventType">
    <annotation>
      <documentation xml:lang="en">An Event that forms an audit trail in ebXML Registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--List of all objects that have been effected by this event-->
          <element maxOccurs="1" minOccurs="1" name="affectedObjects" type="tns:ObjectRefListType"/>
        </sequence>
        <attribute name="eventType" type="tns:referenceURI" use="required"/>
        <attribute name="timestamp" type="dateTime" use="required"/>
        <attribute name="user" type="tns:referenceURI" use="required"/>
        <attribute name="requestId" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEvent" substitutionGroup="tns:Identifiable" type="tns:AuditableEventType"/>
  <complexType name="ClassificationType">
    <annotation>
      <documentation xml:lang="en">Classification is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A Classification specifies references to two registry entrys.
        The classifiedObject is id of the Object being classified.
        The classificationNode is id of the ClassificationNode classying the object</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="classificationScheme" type="tns:referenceURI" use="optional"/>
        <attribute name="classifiedObject" type="tns:referenceURI" use="required"/>
        <attribute name="classificationNode" type="tns:referenceURI" use="optional"/>
        <attribute name="nodeRepresentation" type="tns:LongName" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Classification" substitutionGroup="tns:Identifiable" type="tns:ClassificationType"/>
  <complexType name="ClassificationNodeType">
    <annotation>
      <documentation xml:lang="en">ClassificationNode is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        ClassificationNode is used to submit a Classification tree to the Registry.
        The parent attribute is the id to the parent node. code is an optional code value for a ClassificationNode
        often defined by an external taxonomy (e.g. NAICS)</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI" use="optional"/>
        <attribute name="code" type="tns:LongName" use="optional"/>
        <attribute name="path" type="string" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNode" substitutionGroup="tns:Identifiable" type="tns:ClassificationNodeType"/>
  <complexType name="ClassificationSchemeType">
    <annotation>
      <documentation xml:lang="en">ClassificationScheme is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="isInternal" type="boolean" use="required"/>
        <attribute name="nodeType" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationScheme" substitutionGroup="tns:Identifiable" type="tns:ClassificationSchemeType"/>
  <complexType name="ExternalIdentifierType">
    <annotation>
      <documentation xml:lang="en">ExternalIdentifier is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="registryObject" type="tns:referenceURI" use="required"/>
        <attribute name="identificationScheme" type="tns:referenceURI" use="required"/>
        <attribute name="value" type="tns:LongName" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifier" substitutionGroup="tns:Identifiable" type="tns:ExternalIdentifierType"/>
  <complexType name="ExternalLinkType">
    <annotation>
      <documentation xml:lang="en">ExternalLink is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="externalURI" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLink" substitutionGroup="tns:Identifiable" type="tns:ExternalLinkType"/>
  <complexType name="ExtrinsicObjectType">
    <annotation>
      <documentation xml:lang="en">ExtrinsicObject is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfo" type="tns:VersionInfoType"/>
        </sequence>
        <attribute default="application/octet-stream" name="mimeType" type="tns:LongName"/>
        <attribute default="false" name="isOpaque" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <!--Following element decl nneds to be lower case but using upper camel case for backward compatibility-->
  <element name="ExtrinsicObject" substitutionGroup="tns:Identifiable" type="tns:ExtrinsicObjectType"/>
  <element name="Address" type="tns:PostalAddressType"/>
  <complexType name="OrganizationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI"/>
        <attribute name="primaryContact" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Organization" substitutionGroup="tns:Identifiable" type="tns:OrganizationType"/>
  <complexType name="PersonNameType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="firstName" type="tns:ShortName" use="optional"/>
    <attribute name="middleName" type="tns:ShortName" use="optional"/>
    <attribute name="lastName" type="tns:ShortName" use="optional"/>
  </complexType>
  <element name="PersonName" type="tns:PersonNameType"/>
  <complexType name="EmailAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="address" type="tns:ShortName" use="required"/>
    <attribute name="type" type="tns:String32" use="optional"/>
  </complexType>
  <element name="EmailAddress" type="tns:EmailAddressType"/>
  <complexType name="PostalAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="city" type="tns:ShortName" use="optional"/>
    <attribute name="country" type="tns:ShortName" use="optional"/>
    <attribute name="postalCode" type="tns:ShortName" use="optional"/>
    <attribute name="stateOrProvince" type="tns:ShortName" use="optional"/>
    <attribute name="street" type="tns:ShortName" use="optional"/>
    <attribute name="streetNumber" type="tns:String32" use="optional"/>
  </complexType>
  <element name="PostalAddress" type="tns:PostalAddressType"/>
  <complexType name="VersionInfoType">
    <attribute default="1.1" name="versionName" type="tns:String16" use="optional"/>
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <complexType name="RegistryPackageType">
    <annotation>
      <documentation xml:lang="en">RegistryPackage is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A RegistryPackage is a named collection of objects.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectList"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackage" substitutionGroup="tns:Identifiable" type="tns:RegistryPackageType"/>
  <complexType name="ServiceType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBinding"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Service" substitutionGroup="tns:Identifiable" type="tns:ServiceType"/>
  <complexType name="ServiceBindingType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLink"/>
        </sequence>
        <attribute name="service" type="tns:referenceURI" use="required"/>
        <attribute name="accessURI" type="anyURI" use="optional"/>
        <attribute name="targetBinding" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBinding" substitutionGroup="tns:Identifiable" type="tns:ServiceBindingType"/>
  <complexType name="SpecificationLinkType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:UsageDescription"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:UsageParameter"/>
        </sequence>
        <attribute name="serviceBinding" type="tns:referenceURI" use="required"/>
        <attribute name="specificationObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLink" substitutionGroup="tns:Identifiable" type="tns:SpecificationLinkType"/>
  <element name="UsageDescription" type="tns:InternationalStringType"/>
  <element name="UsageParameter" type="tns:FreeFormText"/>
  <complexType name="TelephoneNumberType">
    <annotation>
      <documentation xml:lang="en">TelephoneNumber is the mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="areaCode" type="tns:String8" use="optional"/>
    <attribute name="countryCode" type="tns:String8" use="optional"/>
    <attribute name="extension" type="tns:String8" use="optional"/>
    <attribute name="number" type="tns:String16" use="optional"/>
    <attribute name="phoneType" type="tns:String32" use="optional"/>
  </complexType>
  <element name="TelephoneNumber" type="tns:TelephoneNumberType"/>
  <complexType name="TelephoneNumberListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
    </sequence>
  </complexType>
  <complexType name="PersonType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence maxOccurs="1" minOccurs="1">
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <!--PersonName is optional because it is not needed in SAML Profile 
          when an external IdentityProvider is used.-->
          <element maxOccurs="1" minOccurs="0" ref="tns:PersonName"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Person" substitutionGroup="tns:Identifiable" type="tns:PersonType"/>
  <complexType name="UserType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:PersonType"></extension>
    </complexContent>
  </complexType>
  <element name="User" substitutionGroup="tns:Identifiable" type="tns:UserType"/>
  <complexType name="RegistryType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="operator" type="tns:referenceURI" use="required"/>
        <attribute name="specificationVersion" type="string" use="required"/>
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
        <attribute default="P1D" name="catalogingLatency" type="duration" use="optional"/>
        <attribute default="registryLite" name="conformanceProfile" use="optional">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="registryFull"/>
              <enumeration value="registryLite"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="Registry" substitutionGroup="tns:Identifiable" type="tns:RegistryType"/>
  <complexType name="FederationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Federation" substitutionGroup="tns:Identifiable" type="tns:FederationType"/>
  <complexType name="AdhocQueryType">
    <annotation>
      <documentation xml:lang="en">A registry query.
      A QueryExpression child element is not required when invoking a stored query.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:QueryExpression"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQuery" substitutionGroup="tns:RegistryObject" type="tns:AdhocQueryType"/>
  <complexType mixed="true" name="QueryExpressionType">
    <sequence>
      <!--MAY be any query language syntax supported. 
      MUST support FilterQuery. SHOULD support SQLQuery-->
      <any maxOccurs="1" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="queryLanguage" type="tns:referenceURI" use="required"/>
  </complexType>
  <element name="QueryExpression" type="tns:QueryExpressionType"/>
  <complexType name="NotificationType">
    <annotation>
      <documentation>Notification of registry events.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--May contain ObjectRefs and RegistryObjects-->
          <element maxOccurs="1" minOccurs="1" ref="tns:RegistryObjectList"/>
        </sequence>
        <attribute name="subscription" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Notification" type="tns:NotificationType"/>
  <element name="Action" type="tns:ActionType"/>
  <complexType name="SubscriptionType">
    <annotation>
      <documentation xml:lang="en">A Subscription for specified Events in an ebXML V3+ registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Action"/>
        </sequence>
        <!--Ref to a AdhocQueryType instance-->
        <attribute name="selector" type="tns:referenceURI" use="required"/>
        <attribute name="startTime" type="dateTime" use="optional"/>
        <attribute name="endTime" type="dateTime" use="optional"/>
        <attribute default="P1D" name="notificationInterval" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subscription" substitutionGroup="tns:Identifiable" type="tns:SubscriptionType"/>
  <complexType abstract="true" name="ActionType">
    <annotation>
      <documentation>Abstract Base type for all types of Actions.</documentation>
    </annotation>
  </complexType>
  <complexType name="NotifyActionType">
    <annotation>
      <documentation xml:lang="en">Abstract Base type for all types of Notify Actions</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:ActionType">
        <attribute default="urn:oasis:names:tc:ebxml-regrep:NotificationOptionType:ObjectRefs" name="notificationOption" type="tns:referenceURI"/>
        <attribute name="endPoint" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotifyAction" substitutionGroup="tns:Action" type="tns:NotifyActionType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/Subscription.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:subscription" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:addr="http://www.w3.org/2005/08/addressing" xmlns:ihe="urn:ihe:iti:xds-b:2007" xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:nhin-cdc="http://www.hhs.gov/healthit/nhin/cdc" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:subb2obcdc="urn:gov:hhs:fha:nhinc:common:subscriptionb2overrideforcdc" xmlns:subb2obdoc="urn:gov:hhs:fha:nhinc:common:subscriptionb2overridefordocuments" xmlns:tns="urn:gov:hhs:fha:nhinc:common:subscription" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2">
  <xsd:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/b-2.xsd"/>
  <xsd:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/rim.xsd"/>
  <xsd:import namespace="urn:ihe:iti:xds-b:2007" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/XDS.b_DocumentRepository.xsd"/>
  <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/NhincCommon.xsd"/>
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://www.hhs.gov/healthit/nhin/cdc" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/Cdc.xsd"/>
  <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:subscriptionb2overrideforcdc" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/SubscriptionB2OverrideForCdc.xsd"/>
  <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:subscriptionb2overridefordocuments" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/SubscriptionB2OverrideForDocuments.xsd"/>
  <xsd:complexType name="CommunityType">
    <xsd:sequence>
      <xsd:element name="Id" type="xsd:string"/>
      <xsd:element name="Name" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Community" type="tns:CommunityType"></xsd:element>
  <xsd:complexType name="SubscriberType">
    <xsd:sequence>
      <xsd:element name="Community" type="tns:CommunityType"/>
      <xsd:element name="NotificationConsumerEndpointAddress" type="xsd:string"/>
      <xsd:element name="UserAddress" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Subscriber" type="tns:SubscriberType"></xsd:element>
  <xsd:complexType name="SubscribeeType">
    <xsd:sequence>
      <xsd:element name="Community" type="tns:CommunityType"/>
      <xsd:element name="NotificationProducerEndpointAddress" type="xsd:string"/>
      <xsd:element name="UserAddress" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Subscribee" type="tns:SubscribeeType"></xsd:element>
  <xsd:complexType name="SubscriptionCriteriaType">
    <xsd:sequence>
      <xsd:element name="SubscribeePatient" type="nccommon:QualifiedSubjectIdentifierType"/>
      <xsd:element name="SubscriberPatient" type="nccommon:QualifiedSubjectIdentifierType"></xsd:element>
      <xsd:element minOccurs="0" name="Criteria" type="tns:CriteriaType"></xsd:element>
      <xsd:element minOccurs="0" name="TopicExpression" type="tns:TopicExpressionType"></xsd:element>
      <xsd:element minOccurs="0" name="SubscriptionPolicy" type="tns:SubscriptionPolicyType"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscriptionCriteria" type="tns:SubscriptionCriteriaType"></xsd:element>
  <xsd:complexType name="SubscriptionReferenceType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="SubscriptionManagerEndpointAddress" type="xsd:string"/>
      <xsd:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscriptionReference" type="tns:SubscriptionReferenceType"/>
  <xsd:complexType name="SubscriptionItemType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="Subscriber" type="tns:SubscriberType"/>
      <xsd:element minOccurs="0" name="Subscribee" type="tns:SubscribeeType"/>
      <xsd:element minOccurs="0" name="SubscriptionCriteria" type="tns:SubscriptionCriteriaType"/>
      <xsd:element minOccurs="0" name="SubscriptionReference" type="tns:SubscriptionReferenceType"/>
      <xsd:element minOccurs="0" name="ParentSubscriptionReference" type="tns:SubscriptionReferenceType"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscriptionItem" type="tns:SubscriptionItemType"/>
  <xsd:complexType name="SubscriptionItemsType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="subscriptionItem" type="tns:SubscriptionItemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscriptionItems" type="tns:SubscriptionItemsType"></xsd:element>
  <xsd:complexType name="CriterionType">
    <xsd:sequence>
      <xsd:element name="Key" type="xsd:string"/>
      <xsd:element name="Value" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Criterion" type="tns:CriterionType"></xsd:element>
  <xsd:complexType name="CriteriaType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Criterion" type="tns:CriterionType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Criteria" type="tns:CriteriaType"></xsd:element>
  <xsd:complexType name="ReferenceParameterType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="Prefix" type="xsd:string"/>
      <xsd:element name="Namespace" type="xsd:string"/>
      <xsd:element name="ElementName" type="xsd:string"/>
      <xsd:element name="Value" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ReferenceParameter" type="tns:ReferenceParameterType"></xsd:element>
  <xsd:complexType name="ReferenceParametersType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="ReferenceParameter" type="tns:ReferenceParameterType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="ReferenceParameters" type="tns:ReferenceParametersType"></xsd:element>
  <xsd:complexType name="SubscriptionReferencesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="SubscriptionReference" type="tns:SubscriptionReferenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscriptionReferences" type="tns:SubscriptionReferencesType"></xsd:element>
  <xsd:complexType name="SubscribeDocumentRequestType">
    <xsd:sequence>
      <xsd:element name="Assertion" type="nccommon:AssertionType"/>
      <xsd:element name="Subscribe" type="tns:SubscribeDocumentType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscribeDocumentRequest" type="tns:SubscribeDocumentRequestType"></xsd:element>
  <!--begin CdcBioPackage messages-->
  <!--<xsd:complexType name="SubscribeCdcBioPackageRequestType">
        <xsd:sequence>
            <xsd:element name="Assertion" type="nccommon:AssertionType"/>
            <xsd:element name="Subscribe" type="tns:SubscribeBioPackageType"/>
            <xsd:element name="TargetHomeCommunity" type="nccommon:HomeCommunityType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="SubscribeCdcBioPackageRequest" type="tns:SubscribeCdcBioPackageRequestType">
    </xsd:element>
    <xsd:complexType name="NotifyOfCdcBioPackageType">
        <xsd:sequence>
            <xsd:element name="Assertion" type="nccommon:AssertionType">
            </xsd:element>
            <xsd:element name="Notify" type="subb2obcdc:NotifyCdcBioPackageType">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="NotifySubscribersOfCdcBioPackage" type="tns:NotifyOfCdcBioPackageType"/>
    <xsd:element name="NotifyOfCdcBioPackage" type="tns:NotifyOfCdcBioPackageType"/>-->
  <!--end CdcBioPackage messages-->
  <xsd:complexType name="UnsubscribeType">
    <xsd:sequence>
      <xsd:element name="subscriptionReference" type="tns:SubscriptionReferenceType"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Unsubscribe" type="tns:UnsubscribeType"></xsd:element>
  <!--<xsd:complexType name="NotifyOfDocumentType">
        <xsd:sequence>
            <xsd:element name="Assertion" type="nccommon:AssertionType"/>
            <xsd:element ref="rim:RegistryObjectList" minOccurs="0"/>
            <xsd:element name="Notify" type="tns:NotifyDocumentType"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="NotifyOfDocument" type="tns:NotifyOfDocumentType">
    </xsd:element>
    <xsd:element name="NotifySubscribersOfDocument" type="tns:NotifyOfDocumentType">
    </xsd:element>-->
  <xsd:complexType name="EmptyType">
    <xsd:sequence>
      <xsd:element name="notUsed" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Empty" type="tns:EmptyType"></xsd:element>
  <xsd:complexType name="AckInputType">
    <xsd:sequence>
      <xsd:element name="notUsed" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="AckInput" type="tns:AckInputType"></xsd:element>
  <xsd:complexType name="DeleteSubscriptionMessageRequestType">
    <xsd:sequence>
      <xsd:element name="SubscriptionReference" type="tns:SubscriptionReferenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="DeleteSubscriptionMessageRequest" type="tns:DeleteSubscriptionMessageRequestType"></xsd:element>
  <xsd:complexType name="RetrieveBySubscriptionReferenceRequestMessageType">
    <xsd:sequence>
      <xsd:element name="SubscriptionReference" type="tns:SubscriptionReferenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="RetrieveBySubscriptionReferenceRequestMessage" type="tns:RetrieveBySubscriptionReferenceRequestMessageType"></xsd:element>
  <xsd:complexType name="RetrieveByParentSubscriptionReferenceMessageType">
    <xsd:sequence>
      <xsd:element name="SubscriptionReference" type="tns:SubscriptionReferenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="RetrieveByParentSubscriptionReferenceMessage" type="tns:RetrieveByParentSubscriptionReferenceMessageType"></xsd:element>
  <xsd:complexType name="UpdateCppRequestType">
    <xsd:sequence>
      <xsd:element name="assertion" type="nccommon:AssertionType"/>
      <xsd:element name="RetrieveDocumentSetRequest" type="ihe:RetrieveDocumentSetRequestType"/>
      <xsd:element name="ExtrinsicObject" type="rim:ExtrinsicObjectType"/>
      <xsd:element name="optInOutFlag" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UpdateCppRequest" type="tns:UpdateCppRequestType"></xsd:element>
  <xsd:complexType name="UpdateCppResponseType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UpdateCppResponse" type="tns:UpdateCppResponseType"></xsd:element>
  <xsd:complexType name="InternalNhieUnsubscribeType">
    <xsd:sequence>
      <xsd:element ref="tns:SubscriptionReference"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="InternalNhieUnsubscribe" type="tns:InternalNhieUnsubscribeType"></xsd:element>
  <xsd:complexType name="InternalNhieUnsubscribeResponseType">
    <xsd:sequence>
      <xsd:element name="notUsed" type="xsd:string"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="InternalNhieUnsubscribeResponse" type="tns:InternalNhieUnsubscribeResponseType"></xsd:element>
  <xsd:complexType name="NotifyWrapperType">
    <xsd:sequence>
      <xsd:element name="Assertion" type="nccommon:AssertionType"/>
      <xsd:element ref="wsnt:Notify"/>
      <xsd:element name="TargetHomeCommunity" type="nccommon:HomeCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotifyWrapper" type="tns:NotifyWrapperType"/>
  <xsd:complexType name="TopicExpressionType">
    <xsd:simpleContent>
      <xsd:extension base="tns:TopicExpressionValue">
        <xsd:attribute name="Dialect" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="text"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:element name="TopicExpression" type="tns:TopicExpressionType"/>
  <xsd:simpleType name="TopicExpressionValue">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="SubscriptionPolicyType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="GenericPolicyItems" type="tns:KeyValuePairListType"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscriptionPolicy" type="tns:SubscriptionPolicyType"/>
  <xsd:complexType name="KeyValuePairType">
    <xsd:sequence>
      <xsd:element name="Key" type="xsd:string"/>
      <xsd:element name="Value" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="KeyValuePair" type="tns:KeyValuePairType"/>
  <xsd:complexType name="KeyValuePairListType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="KeyValuePair" type="tns:KeyValuePairType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="KeyValuePairList" type="tns:KeyValuePairListType"/>
  <xsd:complexType name="SubscribeDocumentType">
    <xsd:sequence>
      <xsd:element name="ConsumerReference" type="addr:EndpointReferenceType"></xsd:element>
      <xsd:element name="AdhocQuery" type="rim:AdhocQueryType"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscribeDocument" type="tns:SubscribeDocumentType"></xsd:element>
  <!--<xsd:complexType name="NotificationMessageHolderType">
        <xsd:sequence>
            <xsd:element ref="wsnt:SubscriptionReference" minOccurs="0"/>
            <xsd:element name="Message">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element ref="ihe:RetrieveDocumentSetRequest"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="NotificationMessageHolder" type="tns:NotificationMessageHolderType">
    </xsd:element>
    <xsd:complexType name="NotifyDocumentType">
        <xsd:sequence>
            <xsd:element name="NotificationMessage" type="tns:NotificationMessageHolderType" maxOccurs="unbounded" minOccurs="0">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="NotifyDocument" type="tns:NotifyDocumentType">
    </xsd:element>
    <xsd:complexType name="SubscribeBioPackageType">
        <xsd:sequence>
            <xsd:element ref="wsnt:ConsumerReference" minOccurs="0"/>
            <xsd:element ref="wsnt:Filter" minOccurs="0"/>
            <xsd:element name="SubscriptionPolicy" type="subb2obcdc:SubscriptionPolicyType">
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element name="SubscribeBioPackage" type="tns:SubscribeBioPackageType">
    </xsd:element>-->
  <xsd:complexType name="MessageTypesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="MessageType" type="xsd:string"></xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="MessageTypes" type="tns:MessageTypesType"></xsd:element>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/Nhinccommonproxy.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:hl7="urn:hl7-org:v3" xmlns:ihe="urn:ihe:iti:xds-b:2007" xmlns:iheaudit="http://nhinc.services.com/schema/auditmessage" xmlns:nccommon="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:ncsub="urn:gov:hhs:fha:nhinc:common:subscription" xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:tns="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2">
  <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/NhincCommon.xsd"/>
  <xsd:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/query.xsd"/>
  <xsd:import namespace="urn:ihe:iti:xds-b:2007" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/XDS.b_DocumentRepository.xsd"/>
  <xsd:import namespace="http://nhinc.services.com/schema/auditmessage" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/auditmessage.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/b-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/b-2.xsd"/>
  <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:subscription" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/Subscription.xsd"/>
  <!--====================================================================
         Document Query Schemas.
         ====================================================================-->
  <xsd:complexType name="RespondingGateway_CrossGatewayQueryRequestType">
    <xsd:sequence>
      <xsd:element ref="query:AdhocQueryRequest"/>
      <xsd:element name="assertion" type="nccommon:AssertionType"/>
      <xsd:element name="nhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="RespondingGateway_CrossGatewayQueryRequest" type="tns:RespondingGateway_CrossGatewayQueryRequestType"/>
  <!--====================================================================
         Document Retrieve Schemas.
         ====================================================================-->
  <xsd:complexType name="RespondingGateway_CrossGatewayRetrieveRequestType">
    <xsd:sequence>
      <xsd:element ref="ihe:RetrieveDocumentSetRequest"/>
      <xsd:element name="assertion" type="nccommon:AssertionType"/>
      <xsd:element name="nhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="RespondingGateway_CrossGatewayRetrieveRequest" type="tns:RespondingGateway_CrossGatewayRetrieveRequestType"/>
  <!--====================================================================
         Audit Log Schemas.
         ====================================================================-->
  <xsd:complexType name="FindAuditEventsRequestType">
    <xsd:sequence>
      <xsd:element ref="iheaudit:FindAuditEvents"/>
      <xsd:element name="assertion" type="nccommon:AssertionType"/>
      <xsd:element name="nhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="FindAuditEventsRequest" type="tns:FindAuditEventsRequestType"/>
  <!--====================================================================
         Subscription Management Schemas.
         ====================================================================-->
  <xsd:complexType name="SubscribeRequestType">
    <xsd:sequence>
      <xsd:element ref="wsnt:Subscribe"/>
      <xsd:element name="assertion" type="nccommon:AssertionType"/>
      <xsd:element name="nhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SubscribeRequest" type="tns:SubscribeRequestType"/>
  <xsd:complexType name="UnsubscribeRequestType">
    <xsd:sequence>
      <xsd:element name="unsubscribe" type="ncsub:UnsubscribeType"/>
      <xsd:element name="assertion" type="nccommon:AssertionType"/>
      <xsd:element name="nhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="UnsubscribeRequest" type="tns:UnsubscribeRequestType"/>
  <!--====================================================================
         Notification Schemas.
         ====================================================================-->
  <xsd:complexType name="NotifyRequestType">
    <xsd:sequence>
      <xsd:element ref="wsnt:Notify"/>
      <xsd:element name="assertion" type="nccommon:AssertionType"/>
      <xsd:element name="nhinTargetSystem" type="nccommon:NhinTargetSystemType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotifyRequest" type="tns:NotifyRequestType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Information Model</documentation>
  </annotation>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/../www.w3.org/2001/xml.xsd"/>
  <!--Begin information model mapping from ebRIM.-->
  <!--Define Data Types-->
  <simpleType name="referenceURI">
    <annotation>
      <documentation xml:lang="en">referenceURI is used by reference attributes within RIM.
        Each attribute of type referenceURI references a RegistryObject with
        specified URI as id.</documentation>
    </annotation>
    <restriction base="anyURI"/>
  </simpleType>
  <simpleType name="String4">
    <restriction base="string">
      <maxLength value="4"/>
    </restriction>
  </simpleType>
  <simpleType name="String8">
    <restriction base="string">
      <maxLength value="8"/>
    </restriction>
  </simpleType>
  <simpleType name="String16">
    <restriction base="string">
      <maxLength value="16"/>
    </restriction>
  </simpleType>
  <simpleType name="String32">
    <restriction base="string">
      <maxLength value="32"/>
    </restriction>
  </simpleType>
  <simpleType name="ShortName">
    <restriction base="string">
      <maxLength value="64"/>
    </restriction>
  </simpleType>
  <simpleType name="LongName">
    <restriction base="string">
      <maxLength value="256"/>
    </restriction>
  </simpleType>
  <simpleType name="FreeFormText">
    <restriction base="string">
      <maxLength value="1024"/>
    </restriction>
  </simpleType>
  <complexType name="InternationalStringType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:LocalizedString"/>
    </sequence>
  </complexType>
  <element name="InternationalString" type="tns:InternationalStringType"/>
  <element name="Name" type="tns:InternationalStringType"/>
  <element name="Description" type="tns:InternationalStringType"/>
  <complexType name="LocalizedStringType">
    <attribute default="en-US" ref="xml:lang"/>
    <attribute default="UTF-8" name="charset"/>
    <attribute name="value" type="tns:FreeFormText" use="required"/>
  </complexType>
  <element name="LocalizedString" type="tns:LocalizedStringType"/>
  <complexType name="SlotType1">
    <sequence>
      <element maxOccurs="1" minOccurs="1" ref="tns:ValueList"/>
    </sequence>
    <attribute name="name" type="tns:LongName" use="required"/>
    <!--slotType value MUST reference a ClassificationNode in the canonical DataType scheme-->
    <attribute name="slotType" type="tns:referenceURI" use="optional"/>
  </complexType>
  <element name="Slot" type="tns:SlotType1"/>
  <complexType name="ValueListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:Value"/>
    </sequence>
  </complexType>
  <element name="ValueList" type="tns:ValueListType"/>
  <element name="Value" type="tns:LongName"/>
  <complexType name="SlotListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
  </complexType>
  <element name="SlotList" type="tns:SlotListType"/>
  <complexType name="IdentifiableType">
    <annotation>
      <documentation xml:lang="en">Common base type for all types that have unique identity.     
        If id is provided and is not in proper URN syntax then it is used for
        linkage within document and is ignored by the registry. In this case the
        registry generates a UUID URN for id attribute.
        id must not be null when object is retrieved from the registry.</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
    <attribute name="id" type="anyURI" use="required"/>
    <!--home attribute is required only for remote ObjectRef-->
    <attribute name="home" type="anyURI" use="optional"/>
  </complexType>
  <element name="Identifiable" type="tns:IdentifiableType"/>
  <complexType name="ObjectRefType">
    <annotation>
      <documentation xml:lang="en">Use to reference an Object by its id.
        Specifies the id attribute of the object as its id attribute.
        id attribute in ObjectAttributes is exactly the same syntax and semantics as
        id attribute in RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:IdentifiableType">
        <!--When true and is a remote ObjectRef then the registry must create a replica for this ObjectRef-->
        <attribute default="false" name="createReplica" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="ObjectRefListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:ObjectRef"/>
    </sequence>
  </complexType>
  <element name="ObjectRefList" type="tns:ObjectRefListType"/>
  <element name="ObjectRef" substitutionGroup="tns:Identifiable" type="tns:ObjectRefType"/>
  <complexType name="RegistryObjectType">
    <complexContent>
      <extension base="tns:IdentifiableType">
        <sequence maxOccurs="1" minOccurs="0">
          <element maxOccurs="1" minOccurs="0" ref="tns:Name"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:Description"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfo" type="tns:VersionInfoType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Classification"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifier"/>
        </sequence>
        <attribute name="lid" type="anyURI" use="optional"/>
        <attribute name="objectType" type="tns:referenceURI" use="optional"/>
        <attribute name="status" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObject" substitutionGroup="tns:Identifiable" type="tns:RegistryObjectType"/>
  <complexType name="RegistryObjectListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Identifiable"/>
    </sequence>
  </complexType>
  <element name="RegistryObjectList" type="tns:RegistryObjectListType"/>
  <complexType name="AssociationType1">
    <annotation>
      <documentation xml:lang="en">Association is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        An Association specifies references to two previously submitted
        registry entrys.
        The sourceObject is id of the sourceObject in association
        The targetObject is id of the targetObject in association</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="associationType" type="tns:referenceURI" use="required"/>
        <attribute name="sourceObject" type="tns:referenceURI" use="required"/>
        <attribute name="targetObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Association" substitutionGroup="tns:Identifiable" type="tns:AssociationType1"/>
  <complexType name="AuditableEventType">
    <annotation>
      <documentation xml:lang="en">An Event that forms an audit trail in ebXML Registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--List of all objects that have been effected by this event-->
          <element maxOccurs="1" minOccurs="1" name="affectedObjects" type="tns:ObjectRefListType"/>
        </sequence>
        <attribute name="eventType" type="tns:referenceURI" use="required"/>
        <attribute name="timestamp" type="dateTime" use="required"/>
        <attribute name="user" type="tns:referenceURI" use="required"/>
        <attribute name="requestId" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEvent" substitutionGroup="tns:Identifiable" type="tns:AuditableEventType"/>
  <complexType name="ClassificationType">
    <annotation>
      <documentation xml:lang="en">Classification is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A Classification specifies references to two registry entrys.
        The classifiedObject is id of the Object being classified.
        The classificationNode is id of the ClassificationNode classying the object</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="classificationScheme" type="tns:referenceURI" use="optional"/>
        <attribute name="classifiedObject" type="tns:referenceURI" use="required"/>
        <attribute name="classificationNode" type="tns:referenceURI" use="optional"/>
        <attribute name="nodeRepresentation" type="tns:LongName" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Classification" substitutionGroup="tns:Identifiable" type="tns:ClassificationType"/>
  <complexType name="ClassificationNodeType">
    <annotation>
      <documentation xml:lang="en">ClassificationNode is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        ClassificationNode is used to submit a Classification tree to the Registry.
        The parent attribute is the id to the parent node. code is an optional code value for a ClassificationNode
        often defined by an external taxonomy (e.g. NAICS)</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI" use="optional"/>
        <attribute name="code" type="tns:LongName" use="optional"/>
        <attribute name="path" type="string" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNode" substitutionGroup="tns:Identifiable" type="tns:ClassificationNodeType"/>
  <complexType name="ClassificationSchemeType">
    <annotation>
      <documentation xml:lang="en">ClassificationScheme is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="isInternal" type="boolean" use="required"/>
        <attribute name="nodeType" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationScheme" substitutionGroup="tns:Identifiable" type="tns:ClassificationSchemeType"/>
  <complexType name="ExternalIdentifierType">
    <annotation>
      <documentation xml:lang="en">ExternalIdentifier is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="registryObject" type="tns:referenceURI" use="required"/>
        <attribute name="identificationScheme" type="tns:referenceURI" use="required"/>
        <attribute name="value" type="tns:LongName" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifier" substitutionGroup="tns:Identifiable" type="tns:ExternalIdentifierType"/>
  <complexType name="ExternalLinkType">
    <annotation>
      <documentation xml:lang="en">ExternalLink is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="externalURI" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLink" substitutionGroup="tns:Identifiable" type="tns:ExternalLinkType"/>
  <complexType name="ExtrinsicObjectType">
    <annotation>
      <documentation xml:lang="en">ExtrinsicObject is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfo" type="tns:VersionInfoType"/>
        </sequence>
        <attribute default="application/octet-stream" name="mimeType" type="tns:LongName"/>
        <attribute default="false" name="isOpaque" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <!--Following element decl nneds to be lower case but using upper camel case for backward compatibility-->
  <element name="ExtrinsicObject" substitutionGroup="tns:Identifiable" type="tns:ExtrinsicObjectType"/>
  <element name="Address" type="tns:PostalAddressType"/>
  <complexType name="OrganizationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI"/>
        <attribute name="primaryContact" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Organization" substitutionGroup="tns:Identifiable" type="tns:OrganizationType"/>
  <complexType name="PersonNameType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="firstName" type="tns:ShortName" use="optional"/>
    <attribute name="middleName" type="tns:ShortName" use="optional"/>
    <attribute name="lastName" type="tns:ShortName" use="optional"/>
  </complexType>
  <element name="PersonName" type="tns:PersonNameType"/>
  <complexType name="EmailAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="address" type="tns:ShortName" use="required"/>
    <attribute name="type" type="tns:String32" use="optional"/>
  </complexType>
  <element name="EmailAddress" type="tns:EmailAddressType"/>
  <complexType name="PostalAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="city" type="tns:ShortName" use="optional"/>
    <attribute name="country" type="tns:ShortName" use="optional"/>
    <attribute name="postalCode" type="tns:ShortName" use="optional"/>
    <attribute name="stateOrProvince" type="tns:ShortName" use="optional"/>
    <attribute name="street" type="tns:ShortName" use="optional"/>
    <attribute name="streetNumber" type="tns:String32" use="optional"/>
  </complexType>
  <element name="PostalAddress" type="tns:PostalAddressType"/>
  <complexType name="VersionInfoType">
    <attribute default="1.1" name="versionName" type="tns:String16" use="optional"/>
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <complexType name="RegistryPackageType">
    <annotation>
      <documentation xml:lang="en">RegistryPackage is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A RegistryPackage is a named collection of objects.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectList"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackage" substitutionGroup="tns:Identifiable" type="tns:RegistryPackageType"/>
  <complexType name="ServiceType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBinding"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Service" substitutionGroup="tns:Identifiable" type="tns:ServiceType"/>
  <complexType name="ServiceBindingType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLink"/>
        </sequence>
        <attribute name="service" type="tns:referenceURI" use="required"/>
        <attribute name="accessURI" type="anyURI" use="optional"/>
        <attribute name="targetBinding" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBinding" substitutionGroup="tns:Identifiable" type="tns:ServiceBindingType"/>
  <complexType name="SpecificationLinkType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:UsageDescription"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:UsageParameter"/>
        </sequence>
        <attribute name="serviceBinding" type="tns:referenceURI" use="required"/>
        <attribute name="specificationObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLink" substitutionGroup="tns:Identifiable" type="tns:SpecificationLinkType"/>
  <element name="UsageDescription" type="tns:InternationalStringType"/>
  <element name="UsageParameter" type="tns:FreeFormText"/>
  <complexType name="TelephoneNumberType">
    <annotation>
      <documentation xml:lang="en">TelephoneNumber is the mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="areaCode" type="tns:String8" use="optional"/>
    <attribute name="countryCode" type="tns:String8" use="optional"/>
    <attribute name="extension" type="tns:String8" use="optional"/>
    <attribute name="number" type="tns:String16" use="optional"/>
    <attribute name="phoneType" type="tns:String32" use="optional"/>
  </complexType>
  <element name="TelephoneNumber" type="tns:TelephoneNumberType"/>
  <complexType name="TelephoneNumberListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
    </sequence>
  </complexType>
  <complexType name="PersonType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence maxOccurs="1" minOccurs="1">
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <!--PersonName is optional because it is not needed in SAML Profile 
          when an external IdentityProvider is used.-->
          <element maxOccurs="1" minOccurs="0" ref="tns:PersonName"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Person" substitutionGroup="tns:Identifiable" type="tns:PersonType"/>
  <complexType name="UserType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:PersonType"></extension>
    </complexContent>
  </complexType>
  <element name="User" substitutionGroup="tns:Identifiable" type="tns:UserType"/>
  <complexType name="RegistryType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="operator" type="tns:referenceURI" use="required"/>
        <attribute name="specificationVersion" type="string" use="required"/>
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
        <attribute default="P1D" name="catalogingLatency" type="duration" use="optional"/>
        <attribute default="registryLite" name="conformanceProfile" use="optional">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="registryFull"/>
              <enumeration value="registryLite"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="Registry" substitutionGroup="tns:Identifiable" type="tns:RegistryType"/>
  <complexType name="FederationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Federation" substitutionGroup="tns:Identifiable" type="tns:FederationType"/>
  <complexType name="AdhocQueryType">
    <annotation>
      <documentation xml:lang="en">A registry query.
      A QueryExpression child element is not required when invoking a stored query.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:QueryExpression"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQuery" substitutionGroup="tns:RegistryObject" type="tns:AdhocQueryType"/>
  <complexType mixed="true" name="QueryExpressionType">
    <sequence>
      <!--MAY be any query language syntax supported. 
      MUST support FilterQuery. SHOULD support SQLQuery-->
      <any maxOccurs="1" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="queryLanguage" type="tns:referenceURI" use="required"/>
  </complexType>
  <element name="QueryExpression" type="tns:QueryExpressionType"/>
  <complexType name="NotificationType">
    <annotation>
      <documentation>Notification of registry events.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--May contain ObjectRefs and RegistryObjects-->
          <element maxOccurs="1" minOccurs="1" ref="tns:RegistryObjectList"/>
        </sequence>
        <attribute name="subscription" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Notification" type="tns:NotificationType"/>
  <element name="Action" type="tns:ActionType"/>
  <complexType name="SubscriptionType">
    <annotation>
      <documentation xml:lang="en">A Subscription for specified Events in an ebXML V3+ registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Action"/>
        </sequence>
        <!--Ref to a AdhocQueryType instance-->
        <attribute name="selector" type="tns:referenceURI" use="required"/>
        <attribute name="startTime" type="dateTime" use="optional"/>
        <attribute name="endTime" type="dateTime" use="optional"/>
        <attribute default="P1D" name="notificationInterval" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subscription" substitutionGroup="tns:Identifiable" type="tns:SubscriptionType"/>
  <complexType abstract="true" name="ActionType">
    <annotation>
      <documentation>Abstract Base type for all types of Actions.</documentation>
    </annotation>
  </complexType>
  <complexType name="NotifyActionType">
    <annotation>
      <documentation xml:lang="en">Abstract Base type for all types of Notify Actions</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:ActionType">
        <attribute default="urn:oasis:names:tc:ebxml-regrep:NotificationOptionType:ObjectRefs" name="notificationOption" type="tns:referenceURI"/>
        <attribute name="endPoint" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotifyAction" substitutionGroup="tns:Action" type="tns:NotifyActionType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/Cdc.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="http://www.hhs.gov/healthit/nhin/cdc" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.hhs.gov/healthit/nhin/cdc">
  <xsd:complexType name="CdcBioPackageSubscriptionCriteriaType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="Frequency">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="FrequencyUnits" type="xsd:integer"/>
            <xsd:element name="FrequencyDuration" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="SizeThreshold" type="xsd:integer"/>
      <xsd:element name="MessageTypes" type="tns:MessageTypesType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MessageTypesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="MessageType" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="CdcBioPackageSubscriptionCriteria" type="tns:CdcBioPackageSubscriptionCriteriaType"/>
  <xsd:simpleType name="CdcBioPackagePayloadType">
    <xsd:restriction base="xsd:base64Binary"/>
  </xsd:simpleType>
  <xsd:element name="CdcBioPackagePayload" type="tns:CdcBioPackagePayloadType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <complexType name="RegistryRequestType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry requests</documentation>
    </annotation>
    <sequence>
      <!--every request may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="RequestSlotList" type="rim:SlotListType"/>
    </sequence>
    <attribute name="id" type="anyURI" use="optional"/>
    <!--Comment may be used by requestor to describe the request. Used in VersionInfo.comment-->
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <element name="RegistryRequest" type="tns:RegistryRequestType"/>
  <element name="RegistryErrorList">
    <annotation>
      <documentation xml:lang="en">The RegistryErrorList is derived from the ErrorList element from the ebXML Message Service Specification</documentation>
    </annotation>
    <complexType>
      <sequence>
        <element maxOccurs="unbounded" ref="tns:RegistryError"/>
      </sequence>
      <attribute name="highestSeverity" type="rim:referenceURI" use="optional"/>
    </complexType>
  </element>
  <element name="RegistryError">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="codeContext" type="string" use="required"/>
          <attribute name="errorCode" type="string" use="required"/>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" name="severity" type="rim:referenceURI"/>
          <attribute name="location" type="string" use="optional"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <complexType name="RegistryResponseType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry responses</documentation>
    </annotation>
    <sequence>
      <!--every response may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="ResponseSlotList" type="rim:SlotListType"/>
      <element minOccurs="0" ref="tns:RegistryErrorList"/>
    </sequence>
    <attribute name="status" type="rim:referenceURI" use="required"/>
    <!--id is the request if for the request for which this is a response-->
    <attribute name="requestId" type="anyURI" use="optional"/>
  </complexType>
  <element name="RegistryResponse" type="tns:RegistryResponseType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/NhincCommon.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" targetNamespace="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:addr="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:tns="urn:gov:hhs:fha:nhinc:common:nhinccommon">
  <xsd:import namespace="http://schemas.xmlsoap.org/ws/2004/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../xmlsoap.org/addressing.xsd"/>
  <xsd:complexType name="QualifiedSubjectIdentifierType">
    <xsd:sequence>
      <xsd:element name="SubjectIdentifier" type="xsd:string"/>
      <xsd:element name="AssigningAuthorityIdentifier" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType"/>
  <xsd:complexType name="AcknowledgementType">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Acknowledgement" type="tns:AcknowledgementType"/>
  <xsd:complexType name="QualifiedSubjectIdentifiersType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="QualifiedSubjectIdentifier" type="tns:QualifiedSubjectIdentifierType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="QualifiedSubjectIdentifiers" type="tns:QualifiedSubjectIdentifiersType"/>
  <xsd:complexType name="AssertionType">
    <xsd:sequence>
      <xsd:element name="address" type="tns:AddressType"/>
      <xsd:element name="dateOfBirth" type="xsd:string"/>
      <xsd:element name="dateOfSignature" type="xsd:string"/>
      <xsd:element name="expirationDate" type="xsd:string"/>
      <xsd:element name="explanationNonClaimantSignature" type="xsd:string"/>
      <xsd:element name="haveSecondWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="haveSignature" type="xsd:boolean"/>
      <xsd:element name="haveWitnessSignature" type="xsd:boolean"/>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="phoneNumber" type="tns:PhoneType"/>
      <!--purposeOfDisclosure deprecated element-->
      <xsd:element name="purposeOfDisclosure" type="xsd:string"/>
      <xsd:element name="secondWitnessAddress" type="tns:AddressType"/>
      <xsd:element name="secondWitnessName" type="tns:PersonNameType"/>
      <xsd:element name="secondWitnessPhone" type="tns:PhoneType"/>
      <xsd:element name="SSN" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" name="uniquePatientId" type="xsd:string"/>
      <xsd:element name="witnessAddress" type="tns:AddressType"/>
      <xsd:element name="witnessName" type="tns:PersonNameType"/>
      <xsd:element name="witnessPhone" type="tns:PhoneType"/>
      <xsd:element name="userInfo" type="tns:UserType"/>
      <xsd:element name="authorized" type="xsd:boolean"/>
      <xsd:element minOccurs="0" name="purposeOfDisclosureCoded" type="tns:CeType"/>
      <xsd:element minOccurs="0" name="claimFormRef" type="xsd:string"/>
      <xsd:element minOccurs="0" name="claimFormRaw" type="xsd:base64Binary"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Assertion" type="tns:AssertionType"/>
  <xsd:complexType name="AddressType">
    <xsd:sequence>
      <xsd:element name="addressType" type="tns:CeType"/>
      <xsd:element name="city" type="xsd:string"/>
      <xsd:element name="country" type="xsd:string"/>
      <xsd:element name="state" type="xsd:string"/>
      <xsd:element name="streetAddress" type="xsd:string"/>
      <xsd:element name="zipCode" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Address" type="tns:AddressType"/>
  <xsd:complexType name="CeType">
    <xsd:sequence>
      <xsd:element name="code" type="xsd:string"/>
      <xsd:element name="codeSystem" type="xsd:string"/>
      <xsd:element name="codeSystemName" type="xsd:string"/>
      <xsd:element name="codeSystemVersion" type="xsd:string"/>
      <xsd:element name="displayName" type="xsd:string"/>
      <xsd:element name="originalText" type="xsd:string"/>
      <xsd:element maxOccurs="unbounded" name="translation" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Ce" type="tns:CeType"/>
  <xsd:complexType name="HomeCommunityType">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="homeCommunityId" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunity" type="tns:HomeCommunityType"/>
  <xsd:complexType name="HomeCommunitiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="homeCommunity" type="tns:HomeCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="HomeCommunities" type="tns:HomeCommunitiesType"/>
  <xsd:complexType name="PersonNameType">
    <xsd:sequence>
      <xsd:element name="familyName" type="xsd:string"/>
      <xsd:element name="givenName" type="xsd:string"/>
      <xsd:element name="nameType" type="tns:CeType"/>
      <xsd:element name="secondNameOrInitials" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="PersonName" type="tns:PersonNameType"/>
  <xsd:complexType name="PhoneType">
    <xsd:sequence>
      <xsd:element name="areaCode" type="xsd:string"/>
      <xsd:element name="countryCode" type="xsd:string"/>
      <xsd:element name="extension" type="xsd:string"/>
      <xsd:element name="localNumber" type="xsd:string"/>
      <xsd:element name="phoneNumberType" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Phone" type="tns:PhoneType"/>
  <xsd:complexType name="UserType">
    <xsd:sequence>
      <xsd:element name="personName" type="tns:PersonNameType"/>
      <xsd:element name="userName" type="xsd:string"/>
      <!--role deprecated element-->
      <xsd:element name="role" type="xsd:string"/>
      <xsd:element name="org" type="tns:HomeCommunityType"/>
      <xsd:element minOccurs="0" name="roleCoded" type="tns:CeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="User" type="tns:UserType"/>
  <xsd:complexType name="EPRType">
    <xsd:sequence>
      <xsd:element name="EndpointReference" type="addr:EndpointReferenceType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="EPR" type="tns:EPRType"/>
  <xsd:complexType name="CreateEPRRequestType">
    <xsd:sequence>
      <xsd:element name="endpointURL" type="xsd:string"/>
      <xsd:element name="namespaceURI" type="xsd:string"/>
      <xsd:element name="namespacePrefix" type="xsd:string"/>
      <xsd:element name="serviceName" type="xsd:string"/>
      <xsd:element name="portName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="CreateEPRRequest" type="tns:CreateEPRRequestType"/>
  <xsd:complexType name="NhinTargetSystemType">
    <xsd:choice>
      <xsd:element name="epr" type="tns:EPRType"/>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
      <xsd:element name="url" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:element name="NhinTargetSystem" type="tns:NhinTargetSystemType"/>
  <xsd:complexType name="ResponseType">
    <xsd:sequence>
      <xsd:element name="status" type="xsd:boolean"/>
      <xsd:element name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Response" type="tns:ResponseType"/>
  <xsd:complexType name="TokenCreationInfoType">
    <xsd:sequence>
      <xsd:element name="assertion" type="tns:AssertionType"/>
      <xsd:element name="actionName" type="xsd:string"/>
      <xsd:element name="resourceName" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenCreationInfo" type="tns:TokenCreationInfoType"/>
  <xsd:complexType name="TokenRetrieveInfoType">
    <xsd:sequence>
      <xsd:element name="request" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="TokenRetrieveInfo" type="tns:TokenRetrieveInfoType"/>
  <xsd:complexType name="AssigningAuthorityType">
    <xsd:sequence>
      <xsd:element name="assigningAuthorityId" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="AssigningAuthority" type="tns:AssigningAuthorityType"/>
  <xsd:complexType name="AssigningAuthoritiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="assigningAuthority" type="tns:AssigningAuthorityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="assigningAuthorites" type="tns:AssigningAuthoritiesType"/>
  <xsd:complexType name="NhinTargetCommunityType">
    <xsd:sequence>
      <xsd:element name="homeCommunity" type="tns:HomeCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="NhinTargetCommunitiesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="nhinTargetCommunity" type="tns:NhinTargetCommunityType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NhinTargetCommunities" type="tns:NhinTargetCommunitiesType"/>
  <xsd:element name="NhinTargetCommunity" type="tns:NhinTargetCommunityType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/t-1.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/t-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--=============== utility type definitions  ====================-->
  <xsd:complexType mixed="true" name="Documentation">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType abstract="true" mixed="false" name="ExtensibleDocumented">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="documentation" type="wstop:Documentation"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <!--================== Topic-Namespace Related  ================-->
  <xsd:complexType name="TopicNamespaceType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="wstop:TopicType">
                  <xsd:attribute name="parent" type="wstop:ConcreteTopicExpression"/>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName"/>
        <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNamespace" type="wstop:TopicNamespaceType">
    <xsd:unique name="rootTopicUniqueness">
      <xsd:selector xpath="wstop:Topic"/>
      <xsd:field xpath="@name"/>
    </xsd:unique>
  </xsd:element>
  <xsd:attribute name="topicNamespaceLocation" type="xsd:anyURI"/>
  <!--===================== Topic Related  =========================-->
  <xsd:complexType name="TopicType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessagePattern" type="wstop:QueryExpressionType"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic" type="wstop:TopicType">
            <xsd:unique name="childTopicUniqueness">
              <xsd:selector xpath="wstop:topic"/>
              <xsd:field xpath="@name"/>
            </xsd:unique>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
        <xsd:attribute name="messageTypes">
          <xsd:simpleType>
            <xsd:list itemType="xsd:QName"/>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================ Topic Set Related  ===================-->
  <xsd:complexType name="TopicSetType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicSet" type="wstop:TopicSetType"/>
  <xsd:attribute default="false" name="topic" type="xsd:boolean"/>
  <!--================ Topic Expression Related  ===================-->
  <xsd:simpleType name="FullTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>TopicPathExpression  ::=   TopicPath ( '|' TopicPath )*  
        TopicPath       ::=   RootTopic ChildTopicExpression* 
        RootTopic       ::=   NamespacePrefix? ('//')? (NCName | '*')  
        NamespacePrefix ::=   NCName ':'      
        ChildTopicExpression ::=   '/' '/'? (QName | NCName | '*'| '.')</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*(\|([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ConcreteTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    ConcreteTopicPath    ::=   RootTopic ChildTopic*    
    RootTopic            ::=   QName  
    ChildTopic           ::=   '/' (QName | NCName)</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)(/([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimpleTopicExpression">
    <xsd:restriction base="xsd:QName">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    RootTopic            ::=   QName</xsd:documentation>
      </xsd:annotation>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/query.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd"/>
  <complexType name="ResponseOptionType">
    <attribute default="RegistryObject" name="returnType">
      <simpleType>
        <restriction base="NCName">
          <enumeration value="ObjectRef"/>
          <enumeration value="RegistryObject"/>
          <enumeration value="LeafClass"/>
          <enumeration value="LeafClassWithRepositoryItem"/>
        </restriction>
      </simpleType>
    </attribute>
    <attribute default="false" name="returnComposedObjects" type="boolean"/>
  </complexType>
  <element name="ResponseOption" type="tns:ResponseOptionType"/>
  <element name="AdhocQueryRequest">
    <annotation>
      <documentation xml:lang="en">An Ad hoc query request specifies an ad hoc query.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="tns:ResponseOption"/>
            <element ref="rim:AdhocQuery"/>
          </sequence>
          <attribute default="false" name="federated" type="boolean" use="optional"/>
          <attribute name="federation" type="anyURI" use="optional"/>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute default="-1" name="maxResults" type="integer"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AdhocQueryResponse">
    <annotation>
      <documentation xml:lang="en">The response includes a RegistryObjectList which has zero or more
        RegistryObjects that match the query specified in AdhocQueryRequest.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryResponseType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute name="totalResultCount" type="integer" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <complexType abstract="true" name="FilterQueryType">
    <sequence>
      <element maxOccurs="1" minOccurs="0" name="PrimaryFilter" type="tns:FilterType"/>
    </sequence>
  </complexType>
  <complexType abstract="true" name="BranchType">
    <complexContent>
      <extension base="tns:FilterQueryType"></extension>
    </complexContent>
  </complexType>
  <complexType name="InternationalStringBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="LocalizedStringFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="SlotBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="RegistryObjectQueryType">
    <complexContent>
      <extension base="tns:FilterQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="SlotBranch" type="tns:SlotBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="NameBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="DescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfoFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifierQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ObjectTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="StatusQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="SourceAssociationQuery" type="tns:AssociationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TargetAssociationQuery" type="tns:AssociationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObjectQuery" type="tns:RegistryObjectQueryType"/>
  <complexType name="AssociationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="AssociationTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="SourceObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="TargetObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AssociationQuery" type="tns:AssociationQueryType"/>
  <complexType name="AuditableEventQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AffectedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="EventTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="UserQuery" type="tns:UserQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEventQuery" type="tns:AuditableEventQueryType"/>
  <complexType name="ClassificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationSchemeQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ClassifiedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationNodeQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationQuery" type="tns:ClassificationQueryType"/>
  <complexType name="ClassificationNodeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNodeQuery" type="tns:ClassificationNodeQueryType"/>
  <complexType name="ClassificationSchemeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="NodeTypeQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
  <complexType name="ExternalIdentifierQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
          <element maxOccurs="1" minOccurs="0" name="IdentificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifierQuery" type="tns:ExternalIdentifierQueryType"/>
  <complexType name="ExternalLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLinkQuery" type="tns:ExternalLinkQueryType"/>
  <complexType name="ExtrinsicObjectQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfoFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExtrinsicObjectQuery" type="tns:ExtrinsicObjectQueryType"/>
  <complexType name="OrganizationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildOrganizationQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="PrimaryContactQuery" type="tns:PersonQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="OrganizationQuery" type="tns:OrganizationQueryType"/>
  <complexType name="RegistryPackageQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType"></extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackageQuery" type="tns:RegistryPackageQueryType"/>
  <complexType name="ServiceQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBindingQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceQuery" type="tns:ServiceQueryType"/>
  <complexType name="ServiceBindingQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLinkQuery"/>
          <element maxOccurs="1" minOccurs="0" name="TargetBindingQuery" type="tns:ServiceBindingQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBindingQuery" type="tns:ServiceBindingQueryType"/>
  <complexType name="SpecificationLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="UsageDescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceBindingQuery"/>
          <element maxOccurs="1" minOccurs="0" name="SpecificationObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLinkQuery" type="tns:SpecificationLinkQueryType"/>
  <complexType name="PersonQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="PersonNameFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="PersonQuery" type="tns:PersonQueryType"/>
  <complexType name="UserQueryType">
    <complexContent>
      <extension base="tns:PersonQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="UserQuery" type="tns:UserQueryType"/>
  <complexType name="RegistryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="OperatorQuery" type="tns:OrganizationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryQuery" type="tns:RegistryQueryType"/>
  <complexType name="FederationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FederationQuery" type="tns:FederationQueryType"/>
  <complexType name="AdhocQueryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryExpressionBranch" type="tns:QueryExpressionBranchType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQueryQuery" type="tns:AdhocQueryQueryType"/>
  <complexType name="QueryExpressionBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryLanguageQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="NotificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotificationQuery" type="tns:NotificationQueryType"/>
  <complexType name="SubscriptionQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="SelectorQuery" type="tns:AdhocQueryQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubscriptionQuery" type="tns:SubscriptionQueryType"/>
  <!--The Filter type hierarchy-->
  <complexType name="FilterType">
    <attribute default="false" name="negate" type="boolean"/>
  </complexType>
  <element abstract="true" name="Filter" type="tns:FilterType"/>
  <complexType name="CompoundFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <sequence>
          <element maxOccurs="1" minOccurs="1" name="LeftFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="1" name="RightFilter" type="tns:FilterType"/>
        </sequence>
        <attribute name="logicalOperator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="AND"/>
              <enumeration value="OR"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="CompoundFilter" type="tns:CompoundFilterType"/>
  <complexType abstract="true" name="SimpleFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <attribute name="domainAttribute" type="string" use="required"/>
        <attribute name="comparator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="LE"/>
              <enumeration value="LT"/>
              <enumeration value="GE"/>
              <enumeration value="GT"/>
              <enumeration value="EQ"/>
              <enumeration value="NE"/>
              <enumeration value="Like"/>
              <enumeration value="NotLike"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="BooleanFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="boolean" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="BooleanFilter" type="tns:BooleanFilterType"/>
  <complexType name="IntegerFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="integer" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="IntegerFilter" type="tns:IntegerFilterType"/>
  <complexType name="FloatFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="float" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FloatFilter" type="tns:FloatFilterType"/>
  <complexType name="DateTimeFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="DateTimeFilter" type="tns:DateTimeFilterType"/>
  <complexType name="StringFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="StringFilter" type="tns:StringFilterType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/t-1.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/t-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--=============== utility type definitions  ====================-->
  <xsd:complexType mixed="true" name="Documentation">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType abstract="true" mixed="false" name="ExtensibleDocumented">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="documentation" type="wstop:Documentation"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <!--================== Topic-Namespace Related  ================-->
  <xsd:complexType name="TopicNamespaceType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="wstop:TopicType">
                  <xsd:attribute name="parent" type="wstop:ConcreteTopicExpression"/>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName"/>
        <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNamespace" type="wstop:TopicNamespaceType">
    <xsd:unique name="rootTopicUniqueness">
      <xsd:selector xpath="wstop:Topic"/>
      <xsd:field xpath="@name"/>
    </xsd:unique>
  </xsd:element>
  <xsd:attribute name="topicNamespaceLocation" type="xsd:anyURI"/>
  <!--===================== Topic Related  =========================-->
  <xsd:complexType name="TopicType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessagePattern" type="wstop:QueryExpressionType"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic" type="wstop:TopicType">
            <xsd:unique name="childTopicUniqueness">
              <xsd:selector xpath="wstop:topic"/>
              <xsd:field xpath="@name"/>
            </xsd:unique>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
        <xsd:attribute name="messageTypes">
          <xsd:simpleType>
            <xsd:list itemType="xsd:QName"/>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================ Topic Set Related  ===================-->
  <xsd:complexType name="TopicSetType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicSet" type="wstop:TopicSetType"/>
  <xsd:attribute default="false" name="topic" type="xsd:boolean"/>
  <!--================ Topic Expression Related  ===================-->
  <xsd:simpleType name="FullTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>TopicPathExpression  ::=   TopicPath ( '|' TopicPath )*  
        TopicPath       ::=   RootTopic ChildTopicExpression* 
        RootTopic       ::=   NamespacePrefix? ('//')? (NCName | '*')  
        NamespacePrefix ::=   NCName ':'      
        ChildTopicExpression ::=   '/' '/'? (QName | NCName | '*'| '.')</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*(\|([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ConcreteTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    ConcreteTopicPath    ::=   RootTopic ChildTopic*    
    RootTopic            ::=   QName  
    ChildTopic           ::=   '/' (QName | NCName)</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)(/([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimpleTopicExpression">
    <xsd:restriction base="xsd:QName">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    RootTopic            ::=   QName</xsd:documentation>
      </xsd:annotation>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <complexType name="RegistryRequestType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry requests</documentation>
    </annotation>
    <sequence>
      <!--every request may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="RequestSlotList" type="rim:SlotListType"/>
    </sequence>
    <attribute name="id" type="anyURI" use="optional"/>
    <!--Comment may be used by requestor to describe the request. Used in VersionInfo.comment-->
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <element name="RegistryRequest" type="tns:RegistryRequestType"/>
  <element name="RegistryErrorList">
    <annotation>
      <documentation xml:lang="en">The RegistryErrorList is derived from the ErrorList element from the ebXML Message Service Specification</documentation>
    </annotation>
    <complexType>
      <sequence>
        <element maxOccurs="unbounded" ref="tns:RegistryError"/>
      </sequence>
      <attribute name="highestSeverity" type="rim:referenceURI" use="optional"/>
    </complexType>
  </element>
  <element name="RegistryError">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="codeContext" type="string" use="required"/>
          <attribute name="errorCode" type="string" use="required"/>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" name="severity" type="rim:referenceURI"/>
          <attribute name="location" type="string" use="optional"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <complexType name="RegistryResponseType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry responses</documentation>
    </annotation>
    <sequence>
      <!--every response may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="ResponseSlotList" type="rim:SlotListType"/>
      <element minOccurs="0" ref="tns:RegistryErrorList"/>
    </sequence>
    <attribute name="status" type="rim:referenceURI" use="required"/>
    <!--id is the request if for the request for which this is a response-->
    <attribute name="requestId" type="anyURI" use="optional"/>
  </complexType>
  <element name="RegistryResponse" type="tns:RegistryResponseType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ebRS/../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rs.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rim.xsd"/>
  <complexType name="RegistryRequestType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry requests</documentation>
    </annotation>
    <sequence>
      <!--every request may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="RequestSlotList" type="rim:SlotListType"/>
    </sequence>
    <attribute name="id" type="anyURI" use="optional"/>
    <!--Comment may be used by requestor to describe the request. Used in VersionInfo.comment-->
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <element name="RegistryRequest" type="tns:RegistryRequestType"/>
  <element name="RegistryErrorList">
    <annotation>
      <documentation xml:lang="en">The RegistryErrorList is derived from the ErrorList element from the ebXML Message Service Specification</documentation>
    </annotation>
    <complexType>
      <sequence>
        <element maxOccurs="unbounded" ref="tns:RegistryError"/>
      </sequence>
      <attribute name="highestSeverity" type="rim:referenceURI" use="optional"/>
    </complexType>
  </element>
  <element name="RegistryError">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="codeContext" type="string" use="required"/>
          <attribute name="errorCode" type="string" use="required"/>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" name="severity" type="rim:referenceURI"/>
          <attribute name="location" type="string" use="optional"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <complexType name="RegistryResponseType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry responses</documentation>
    </annotation>
    <sequence>
      <!--every response may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="ResponseSlotList" type="rim:SlotListType"/>
      <element minOccurs="0" ref="tns:RegistryErrorList"/>
    </sequence>
    <attribute name="status" type="rim:referenceURI" use="required"/>
    <!--id is the request if for the request for which this is a response-->
    <attribute name="requestId" type="anyURI" use="optional"/>
  </complexType>
  <element name="RegistryResponse" type="tns:RegistryResponseType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/lcm.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <!--Import the rs.xsd file with XML schema for base rs related schema-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd"/>
  <element name="SubmitObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The SubmitObjectsRequest allows one to submit a list of RegistryObject elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the id attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="UpdateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The UpdateObjectsRequest allows one to update a list of RegistryObject elements. Each RegistryEntry element provides metadata for a single submitted object.  Note that the repository item being submitted is in a separate document that is not in this DTD. The ebXML Messaging Services Specfication defines packaging, for submission, of the metadata of a repository item with the repository item itself. The value of the id attribute of the ExtrinsicObject element must be the same as the xlink:href attribute within the Reference element within the Manifest element of the MessageHeader.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="ApproveObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList and AdhocQuery identify the list of
        objects being approved.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="DeprecateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList and AdhocQuery identify the list of
        objects being deprecated.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="UndeprecateObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList is the list of
        refs to the registry entrys being un-deprecated.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="RemoveObjectsRequest">
    <annotation>
      <documentation xml:lang="en">The ObjectRefList is the list of
        refs to the registry entrys being removed</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="0" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="0" ref="rim:ObjectRefList"/>
          </sequence>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:DeletionScopeType:DeleteAll" name="deletionScope" type="rim:referenceURI" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="RelocateObjectsRequest">
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="rim:AdhocQuery"/>
            <element maxOccurs="1" minOccurs="1" name="SourceRegistry" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="DestinationRegistry" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="OwnerAtSource" type="rim:ObjectRefType"/>
            <element maxOccurs="1" minOccurs="1" name="OwnerAtDestination" type="rim:ObjectRefType"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AcceptObjectsRequest">
    <!--The ObjectRefList must only contain local ObjectRefs such that they do not specify home attribute-->
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <attribute name="correlationId" type="anyURI" use="required"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.

    This schema document describes the XML namespace, in a form
    suitable for import by other schema documents.  

    Note that local names in this namespace are intended to be defined
    only by the World Wide Web Consortium or its subgroups.  The
    following names are currently defined in this namespace and should
    not be used with conflicting semantics by any Working Group,
    specification, or document instance:

    base (as an attribute name): denotes an attribute whose value
         provides a URI to be used as the base for interpreting any
         relative URIs in the scope of the element on which it
         appears; its value is inherited.  This name is reserved
         by virtue of its definition in the XML Base specification.

    id   (as an attribute name): denotes an attribute whose value
         should be interpreted as if declared to be of type ID.
         This name is reserved by virtue of its definition in the
         xml:id specification.

    lang (as an attribute name): denotes an attribute whose value
         is a language code for the natural language of the content of
         any element; its value is inherited.  This name is reserved
         by virtue of its definition in the XML specification.
  
    space (as an attribute name): denotes an attribute whose
         value is a keyword indicating what whitespace processing
         discipline is intended for the content of the element; its
         value is inherited.  This name is reserved by virtue of its
         definition in the XML specification.

    Father (in any context at all): denotes Jon Bosak, the chair of 
         the original XML Working Group.  This name is reserved by 
         the following decision of the W3C XML Plenary and 
         XML Coordination groups:

             In appreciation for his vision, leadership and dedication
             the W3C XML Plenary on this 10th day of February, 2000
             reserves for Jon Bosak in perpetuity the XML name
             xml:Father</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang, xml:space or xml:id
        attributes on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2007/08/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself, or with the XML namespace itself.  In other words, if the XML
   Schema or XML namespaces change, the version of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2007/08/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>Attempting to install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values is probably never
         going to be a realistic possibility.  See
         RFC 3066 at http://www.ietf.org/rfc/rfc3066.txt and the IANA registry
         at http://www.iana.org/assignments/lang-tag-apps.htm for
         further information.

         The union allows for the 'un-declaration' of xml:lang with
         the empty string.</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xml-id/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/bf-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/../../www.w3.org/2001/xml.xsd">
    <xsd:annotation>
      <xsd:documentation>Get access to the xml: attribute groups for xml:lang as declared on 'schema'
        and 'documentation' below</xsd:documentation>
    </xsd:annotation>
  </xsd:import>
  <!--====================== BaseFault Types =======================-->
  <xsd:element name="BaseFault" type="wsrf-bf:BaseFaultType"/>
  <xsd:complexType name="BaseFaultType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      <xsd:element maxOccurs="1" minOccurs="1" name="Timestamp" type="xsd:dateTime"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="Originator" type="wsa:EndpointReferenceType"/>
      <xsd:element maxOccurs="1" minOccurs="0" name="ErrorCode">
        <xsd:complexType>
          <xsd:complexContent>
            <xsd:extension base="xsd:anyType">
              <xsd:attribute name="dialect" type="xsd:anyURI" use="required"/>
            </xsd:extension>
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="unbounded" minOccurs="0" name="Description">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute ref="xml:lang" use="optional"/>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element maxOccurs="1" minOccurs="0" name="FaultCause">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##other" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/b-2.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/b-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsnt="http://docs.oasis-open.org/wsn/b-2" xmlns:wsrf-bf="http://docs.oasis-open.org/wsrf/bf-2" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--======================== Imports  ============================-->
  <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsrf/bf-2" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../wsrf/bf-2.xsd"/>
  <xsd:import namespace="http://docs.oasis-open.org/wsn/t-1" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/t-1.xsd"/>
  <!--===================== Misc. Helper Types =====================-->
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="TopicExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
    <xsd:anyAttribute/>
  </xsd:complexType>
  <xsd:complexType name="FilterType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SubscriptionPolicyType">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <!--=============== Resource Property Related  ===================-->
  <!--======== Resource Properties for NotificationProducer ========-->
  <xsd:element name="TopicExpression" type="wsnt:TopicExpressionType"/>
  <xsd:element default="true" name="FixedTopicSet" type="xsd:boolean"/>
  <xsd:element name="TopicExpressionDialect" type="xsd:anyURI"/>
  <xsd:element name="NotificationProducerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpression"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:FixedTopicSet"/>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:TopicExpressionDialect"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wstop:TopicSet"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--======== Resource Properties for SubscriptionManager =========-->
  <xsd:element name="ConsumerReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Filter" type="wsnt:FilterType"/>
  <xsd:element name="SubscriptionPolicy" type="wsnt:SubscriptionPolicyType"/>
  <xsd:element name="CreationTime" type="xsd:dateTime"/>
  <xsd:element name="SubscriptionManagerRP">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:ConsumerReference"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Filter"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionPolicy"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CreationTime"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--================= Notification Metadata  =====================-->
  <xsd:element name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
  <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
  <xsd:element name="ProducerReference" type="wsa:EndpointReferenceType"/>
  <!--================== Message Helper Types  =====================-->
  <xsd:complexType name="NotificationMessageHolderType">
    <xsd:sequence>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:SubscriptionReference"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:Topic"/>
      <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:ProducerReference"/>
      <xsd:element name="Message">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="NotificationMessage" type="wsnt:NotificationMessageHolderType"/>
  <!--========== Message Types for NotificationConsumer  ===========-->
  <xsd:element name="Notify">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="1" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <!--========== Message Types for NotificationProducer  ===========-->
  <xsd:simpleType name="AbsoluteOrRelativeTimeType">
    <xsd:union memberTypes="xsd:dateTime xsd:duration"/>
  </xsd:simpleType>
  <xsd:element name="CurrentTime" type="xsd:dateTime"/>
  <xsd:element name="TerminationTime" nillable="true" type="xsd:dateTime"/>
  <xsd:element name="ProducerProperties" type="wsnt:QueryExpressionType"/>
  <xsd:element name="MessageContent" type="wsnt:QueryExpressionType"/>
  <xsd:element name="UseRaw">
    <xsd:complexType/>
  </xsd:element>
  <xsd:element name="Subscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="ConsumerReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="Filter" type="wsnt:FilterType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="InitialTerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:element maxOccurs="1" minOccurs="0" name="SubscriptionPolicy">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="SubscriptionReference" type="wsa:EndpointReferenceType"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:TerminationTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessage">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Topic" type="wsnt:TopicExpressionType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetCurrentMessageResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="SubscribeCreationFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="SubscribeCreationFailedFault" type="wsnt:SubscribeCreationFailedFaultType"/>
  <xsd:complexType name="InvalidFilterFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="1" name="UnknownFilter" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidFilterFault" type="wsnt:InvalidFilterFaultType"/>
  <xsd:complexType name="TopicExpressionDialectUnknownFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicExpressionDialectUnknownFault" type="wsnt:TopicExpressionDialectUnknownFaultType"/>
  <xsd:complexType name="InvalidTopicExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidTopicExpressionFault" type="wsnt:InvalidTopicExpressionFaultType"/>
  <xsd:complexType name="TopicNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNotSupportedFault" type="wsnt:TopicNotSupportedFaultType"/>
  <xsd:complexType name="MultipleTopicsSpecifiedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="MultipleTopicsSpecifiedFault" type="wsnt:MultipleTopicsSpecifiedFaultType"/>
  <xsd:complexType name="InvalidProducerPropertiesExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidProducerPropertiesExpressionFault" type="wsnt:InvalidProducerPropertiesExpressionFaultType"/>
  <xsd:complexType name="InvalidMessageContentExpressionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="InvalidMessageContentExpressionFault" type="wsnt:InvalidMessageContentExpressionFaultType"/>
  <xsd:complexType name="UnrecognizedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnrecognizedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnrecognizedPolicyRequestFault" type="wsnt:UnrecognizedPolicyRequestFaultType"/>
  <xsd:complexType name="UnsupportedPolicyRequestFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="UnsupportedPolicy" type="xsd:QName"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnsupportedPolicyRequestFault" type="wsnt:UnsupportedPolicyRequestFaultType"/>
  <xsd:complexType name="NotifyMessageNotSupportedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NotifyMessageNotSupportedFault" type="wsnt:NotifyMessageNotSupportedFaultType"/>
  <xsd:complexType name="UnacceptableInitialTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableInitialTerminationTimeFault" type="wsnt:UnacceptableInitialTerminationTimeFaultType"/>
  <xsd:complexType name="NoCurrentMessageOnTopicFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="NoCurrentMessageOnTopicFault" type="wsnt:NoCurrentMessageOnTopicFaultType"/>
  <!--======== Message Types for PullPoint  ========================-->
  <xsd:element name="GetMessages">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="MaximumNumber" type="xsd:nonNegativeInteger"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GetMessagesResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="wsnt:NotificationMessage"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestroyPullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToGetMessagesFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToGetMessagesFault" type="wsnt:UnableToGetMessagesFaultType"/>
  <xsd:complexType name="UnableToDestroyPullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroyPullPointFault" type="wsnt:UnableToDestroyPullPointFaultType"/>
  <!--======== Message Types for Create PullPoint  =================-->
  <xsd:element name="CreatePullPoint">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreatePullPointResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="PullPoint" type="wsa:EndpointReferenceType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
      <xsd:anyAttribute/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToCreatePullPointFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToCreatePullPointFault" type="wsnt:UnableToCreatePullPointFaultType"/>
  <!--======== Message Types for Base SubscriptionManager  =========-->
  <xsd:element name="Renew">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" name="TerminationTime" nillable="true" type="wsnt:AbsoluteOrRelativeTimeType"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RenewResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="1" minOccurs="1" ref="wsnt:TerminationTime"/>
        <xsd:element maxOccurs="1" minOccurs="0" ref="wsnt:CurrentTime"/>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnacceptableTerminationTimeFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType">
        <xsd:sequence>
          <xsd:element name="MinimumTime" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="MaximumTime" type="xsd:dateTime"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnacceptableTerminationTimeFault" type="wsnt:UnacceptableTerminationTimeFaultType"/>
  <xsd:element name="Unsubscribe">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UnsubscribeResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="UnableToDestroySubscriptionFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="UnableToDestroySubscriptionFault" type="wsnt:UnableToDestroySubscriptionFaultType"/>
  <!--====== Message Types for Pausable SubscriptionManager  =======-->
  <xsd:element name="PauseSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PauseSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscription">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ResumeSubscriptionResponse">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="PauseFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="PauseFailedFault" type="wsnt:PauseFailedFaultType"/>
  <xsd:complexType name="ResumeFailedFaultType">
    <xsd:complexContent>
      <xsd:extension base="wsrf-bf:BaseFaultType"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ResumeFailedFault" type="wsnt:ResumeFailedFaultType"/>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rim.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Information Model</documentation>
  </annotation>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/../www.w3.org/2001/xml.xsd"/>
  <!--Begin information model mapping from ebRIM.-->
  <!--Define Data Types-->
  <simpleType name="referenceURI">
    <annotation>
      <documentation xml:lang="en">referenceURI is used by reference attributes within RIM.
        Each attribute of type referenceURI references a RegistryObject with
        specified URI as id.</documentation>
    </annotation>
    <restriction base="anyURI"/>
  </simpleType>
  <simpleType name="String4">
    <restriction base="string">
      <maxLength value="4"/>
    </restriction>
  </simpleType>
  <simpleType name="String8">
    <restriction base="string">
      <maxLength value="8"/>
    </restriction>
  </simpleType>
  <simpleType name="String16">
    <restriction base="string">
      <maxLength value="16"/>
    </restriction>
  </simpleType>
  <simpleType name="String32">
    <restriction base="string">
      <maxLength value="32"/>
    </restriction>
  </simpleType>
  <simpleType name="ShortName">
    <restriction base="string">
      <maxLength value="64"/>
    </restriction>
  </simpleType>
  <simpleType name="LongName">
    <restriction base="string">
      <maxLength value="256"/>
    </restriction>
  </simpleType>
  <simpleType name="FreeFormText">
    <restriction base="string">
      <maxLength value="1024"/>
    </restriction>
  </simpleType>
  <complexType name="InternationalStringType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:LocalizedString"/>
    </sequence>
  </complexType>
  <element name="InternationalString" type="tns:InternationalStringType"/>
  <element name="Name" type="tns:InternationalStringType"/>
  <element name="Description" type="tns:InternationalStringType"/>
  <complexType name="LocalizedStringType">
    <attribute default="en-US" ref="xml:lang"/>
    <attribute default="UTF-8" name="charset"/>
    <attribute name="value" type="tns:FreeFormText" use="required"/>
  </complexType>
  <element name="LocalizedString" type="tns:LocalizedStringType"/>
  <complexType name="SlotType1">
    <sequence>
      <element maxOccurs="1" minOccurs="1" ref="tns:ValueList"/>
    </sequence>
    <attribute name="name" type="tns:LongName" use="required"/>
    <!--slotType value MUST reference a ClassificationNode in the canonical DataType scheme-->
    <attribute name="slotType" type="tns:referenceURI" use="optional"/>
  </complexType>
  <element name="Slot" type="tns:SlotType1"/>
  <complexType name="ValueListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:Value"/>
    </sequence>
  </complexType>
  <element name="ValueList" type="tns:ValueListType"/>
  <element name="Value" type="tns:LongName"/>
  <complexType name="SlotListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
  </complexType>
  <element name="SlotList" type="tns:SlotListType"/>
  <complexType name="IdentifiableType">
    <annotation>
      <documentation xml:lang="en">Common base type for all types that have unique identity.     
        If id is provided and is not in proper URN syntax then it is used for
        linkage within document and is ignored by the registry. In this case the
        registry generates a UUID URN for id attribute.
        id must not be null when object is retrieved from the registry.</documentation>
    </annotation>
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Slot"/>
    </sequence>
    <attribute name="id" type="anyURI" use="required"/>
    <!--home attribute is required only for remote ObjectRef-->
    <attribute name="home" type="anyURI" use="optional"/>
  </complexType>
  <element name="Identifiable" type="tns:IdentifiableType"/>
  <complexType name="ObjectRefType">
    <annotation>
      <documentation xml:lang="en">Use to reference an Object by its id.
        Specifies the id attribute of the object as its id attribute.
        id attribute in ObjectAttributes is exactly the same syntax and semantics as
        id attribute in RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:IdentifiableType">
        <!--When true and is a remote ObjectRef then the registry must create a replica for this ObjectRef-->
        <attribute default="false" name="createReplica" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="ObjectRefListType">
    <sequence maxOccurs="unbounded" minOccurs="0">
      <element ref="tns:ObjectRef"/>
    </sequence>
  </complexType>
  <element name="ObjectRefList" type="tns:ObjectRefListType"/>
  <element name="ObjectRef" substitutionGroup="tns:Identifiable" type="tns:ObjectRefType"/>
  <complexType name="RegistryObjectType">
    <complexContent>
      <extension base="tns:IdentifiableType">
        <sequence maxOccurs="1" minOccurs="0">
          <element maxOccurs="1" minOccurs="0" ref="tns:Name"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:Description"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfo" type="tns:VersionInfoType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Classification"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifier"/>
        </sequence>
        <attribute name="lid" type="anyURI" use="optional"/>
        <attribute name="objectType" type="tns:referenceURI" use="optional"/>
        <attribute name="status" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObject" substitutionGroup="tns:Identifiable" type="tns:RegistryObjectType"/>
  <complexType name="RegistryObjectListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:Identifiable"/>
    </sequence>
  </complexType>
  <element name="RegistryObjectList" type="tns:RegistryObjectListType"/>
  <complexType name="AssociationType1">
    <annotation>
      <documentation xml:lang="en">Association is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        An Association specifies references to two previously submitted
        registry entrys.
        The sourceObject is id of the sourceObject in association
        The targetObject is id of the targetObject in association</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="associationType" type="tns:referenceURI" use="required"/>
        <attribute name="sourceObject" type="tns:referenceURI" use="required"/>
        <attribute name="targetObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Association" substitutionGroup="tns:Identifiable" type="tns:AssociationType1"/>
  <complexType name="AuditableEventType">
    <annotation>
      <documentation xml:lang="en">An Event that forms an audit trail in ebXML Registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--List of all objects that have been effected by this event-->
          <element maxOccurs="1" minOccurs="1" name="affectedObjects" type="tns:ObjectRefListType"/>
        </sequence>
        <attribute name="eventType" type="tns:referenceURI" use="required"/>
        <attribute name="timestamp" type="dateTime" use="required"/>
        <attribute name="user" type="tns:referenceURI" use="required"/>
        <attribute name="requestId" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEvent" substitutionGroup="tns:Identifiable" type="tns:AuditableEventType"/>
  <complexType name="ClassificationType">
    <annotation>
      <documentation xml:lang="en">Classification is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A Classification specifies references to two registry entrys.
        The classifiedObject is id of the Object being classified.
        The classificationNode is id of the ClassificationNode classying the object</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="classificationScheme" type="tns:referenceURI" use="optional"/>
        <attribute name="classifiedObject" type="tns:referenceURI" use="required"/>
        <attribute name="classificationNode" type="tns:referenceURI" use="optional"/>
        <attribute name="nodeRepresentation" type="tns:LongName" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Classification" substitutionGroup="tns:Identifiable" type="tns:ClassificationType"/>
  <complexType name="ClassificationNodeType">
    <annotation>
      <documentation xml:lang="en">ClassificationNode is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        ClassificationNode is used to submit a Classification tree to the Registry.
        The parent attribute is the id to the parent node. code is an optional code value for a ClassificationNode
        often defined by an external taxonomy (e.g. NAICS)</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI" use="optional"/>
        <attribute name="code" type="tns:LongName" use="optional"/>
        <attribute name="path" type="string" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNode" substitutionGroup="tns:Identifiable" type="tns:ClassificationNodeType"/>
  <complexType name="ClassificationSchemeType">
    <annotation>
      <documentation xml:lang="en">ClassificationScheme is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationNode"/>
        </sequence>
        <attribute name="isInternal" type="boolean" use="required"/>
        <attribute name="nodeType" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationScheme" substitutionGroup="tns:Identifiable" type="tns:ClassificationSchemeType"/>
  <complexType name="ExternalIdentifierType">
    <annotation>
      <documentation xml:lang="en">ExternalIdentifier is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="registryObject" type="tns:referenceURI" use="required"/>
        <attribute name="identificationScheme" type="tns:referenceURI" use="required"/>
        <attribute name="value" type="tns:LongName" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifier" substitutionGroup="tns:Identifiable" type="tns:ExternalIdentifierType"/>
  <complexType name="ExternalLinkType">
    <annotation>
      <documentation xml:lang="en">ExternalLink is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="externalURI" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLink" substitutionGroup="tns:Identifiable" type="tns:ExternalLinkType"/>
  <complexType name="ExtrinsicObjectType">
    <annotation>
      <documentation xml:lang="en">ExtrinsicObject is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfo" type="tns:VersionInfoType"/>
        </sequence>
        <attribute default="application/octet-stream" name="mimeType" type="tns:LongName"/>
        <attribute default="false" name="isOpaque" type="boolean"/>
      </extension>
    </complexContent>
  </complexType>
  <!--Following element decl nneds to be lower case but using upper camel case for backward compatibility-->
  <element name="ExtrinsicObject" substitutionGroup="tns:Identifiable" type="tns:ExtrinsicObjectType"/>
  <element name="Address" type="tns:PostalAddressType"/>
  <complexType name="OrganizationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
        <attribute name="parent" type="tns:referenceURI"/>
        <attribute name="primaryContact" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Organization" substitutionGroup="tns:Identifiable" type="tns:OrganizationType"/>
  <complexType name="PersonNameType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="firstName" type="tns:ShortName" use="optional"/>
    <attribute name="middleName" type="tns:ShortName" use="optional"/>
    <attribute name="lastName" type="tns:ShortName" use="optional"/>
  </complexType>
  <element name="PersonName" type="tns:PersonNameType"/>
  <complexType name="EmailAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="address" type="tns:ShortName" use="required"/>
    <attribute name="type" type="tns:String32" use="optional"/>
  </complexType>
  <element name="EmailAddress" type="tns:EmailAddressType"/>
  <complexType name="PostalAddressType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="city" type="tns:ShortName" use="optional"/>
    <attribute name="country" type="tns:ShortName" use="optional"/>
    <attribute name="postalCode" type="tns:ShortName" use="optional"/>
    <attribute name="stateOrProvince" type="tns:ShortName" use="optional"/>
    <attribute name="street" type="tns:ShortName" use="optional"/>
    <attribute name="streetNumber" type="tns:String32" use="optional"/>
  </complexType>
  <element name="PostalAddress" type="tns:PostalAddressType"/>
  <complexType name="VersionInfoType">
    <attribute default="1.1" name="versionName" type="tns:String16" use="optional"/>
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <complexType name="RegistryPackageType">
    <annotation>
      <documentation xml:lang="en">RegistryPackage is the mapping of the same named interface in ebRIM.
        It extends RegistryObject.
        A RegistryPackage is a named collection of objects.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectList"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackage" substitutionGroup="tns:Identifiable" type="tns:RegistryPackageType"/>
  <complexType name="ServiceType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBinding"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Service" substitutionGroup="tns:Identifiable" type="tns:ServiceType"/>
  <complexType name="ServiceBindingType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLink"/>
        </sequence>
        <attribute name="service" type="tns:referenceURI" use="required"/>
        <attribute name="accessURI" type="anyURI" use="optional"/>
        <attribute name="targetBinding" type="tns:referenceURI" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBinding" substitutionGroup="tns:Identifiable" type="tns:ServiceBindingType"/>
  <complexType name="SpecificationLinkType">
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:UsageDescription"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:UsageParameter"/>
        </sequence>
        <attribute name="serviceBinding" type="tns:referenceURI" use="required"/>
        <attribute name="specificationObject" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLink" substitutionGroup="tns:Identifiable" type="tns:SpecificationLinkType"/>
  <element name="UsageDescription" type="tns:InternationalStringType"/>
  <element name="UsageParameter" type="tns:FreeFormText"/>
  <complexType name="TelephoneNumberType">
    <annotation>
      <documentation xml:lang="en">TelephoneNumber is the mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <attribute name="areaCode" type="tns:String8" use="optional"/>
    <attribute name="countryCode" type="tns:String8" use="optional"/>
    <attribute name="extension" type="tns:String8" use="optional"/>
    <attribute name="number" type="tns:String16" use="optional"/>
    <attribute name="phoneType" type="tns:String32" use="optional"/>
  </complexType>
  <element name="TelephoneNumber" type="tns:TelephoneNumberType"/>
  <complexType name="TelephoneNumberListType">
    <sequence>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
    </sequence>
  </complexType>
  <complexType name="PersonType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence maxOccurs="1" minOccurs="1">
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Address"/>
          <!--PersonName is optional because it is not needed in SAML Profile 
          when an external IdentityProvider is used.-->
          <element maxOccurs="1" minOccurs="0" ref="tns:PersonName"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:TelephoneNumber"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:EmailAddress"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Person" substitutionGroup="tns:Identifiable" type="tns:PersonType"/>
  <complexType name="UserType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:PersonType"></extension>
    </complexContent>
  </complexType>
  <element name="User" substitutionGroup="tns:Identifiable" type="tns:UserType"/>
  <complexType name="RegistryType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute name="operator" type="tns:referenceURI" use="required"/>
        <attribute name="specificationVersion" type="string" use="required"/>
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
        <attribute default="P1D" name="catalogingLatency" type="duration" use="optional"/>
        <attribute default="registryLite" name="conformanceProfile" use="optional">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="registryFull"/>
              <enumeration value="registryLite"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="Registry" substitutionGroup="tns:Identifiable" type="tns:RegistryType"/>
  <complexType name="FederationType">
    <annotation>
      <documentation xml:lang="en">Mapping of the same named interface in ebRIM.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <attribute default="P1D" name="replicationSyncLatency" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Federation" substitutionGroup="tns:Identifiable" type="tns:FederationType"/>
  <complexType name="AdhocQueryType">
    <annotation>
      <documentation xml:lang="en">A registry query.
      A QueryExpression child element is not required when invoking a stored query.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:QueryExpression"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQuery" substitutionGroup="tns:RegistryObject" type="tns:AdhocQueryType"/>
  <complexType mixed="true" name="QueryExpressionType">
    <sequence>
      <!--MAY be any query language syntax supported. 
      MUST support FilterQuery. SHOULD support SQLQuery-->
      <any maxOccurs="1" minOccurs="0" namespace="##other" processContents="lax"/>
    </sequence>
    <attribute name="queryLanguage" type="tns:referenceURI" use="required"/>
  </complexType>
  <element name="QueryExpression" type="tns:QueryExpressionType"/>
  <complexType name="NotificationType">
    <annotation>
      <documentation>Notification of registry events.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <!--May contain ObjectRefs and RegistryObjects-->
          <element maxOccurs="1" minOccurs="1" ref="tns:RegistryObjectList"/>
        </sequence>
        <attribute name="subscription" type="tns:referenceURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Notification" type="tns:NotificationType"/>
  <element name="Action" type="tns:ActionType"/>
  <complexType name="SubscriptionType">
    <annotation>
      <documentation xml:lang="en">A Subscription for specified Events in an ebXML V3+ registry.</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:RegistryObjectType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:Action"/>
        </sequence>
        <!--Ref to a AdhocQueryType instance-->
        <attribute name="selector" type="tns:referenceURI" use="required"/>
        <attribute name="startTime" type="dateTime" use="optional"/>
        <attribute name="endTime" type="dateTime" use="optional"/>
        <attribute default="P1D" name="notificationInterval" type="duration" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subscription" substitutionGroup="tns:Identifiable" type="tns:SubscriptionType"/>
  <complexType abstract="true" name="ActionType">
    <annotation>
      <documentation>Abstract Base type for all types of Actions.</documentation>
    </annotation>
  </complexType>
  <complexType name="NotifyActionType">
    <annotation>
      <documentation xml:lang="en">Abstract Base type for all types of Notify Actions</documentation>
    </annotation>
    <complexContent>
      <extension base="tns:ActionType">
        <attribute default="urn:oasis:names:tc:ebxml-regrep:NotificationOptionType:ObjectRefs" name="notificationOption" type="tns:referenceURI"/>
        <attribute name="endPoint" type="anyURI" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotifyAction" substitutionGroup="tns:Action" type="tns:NotifyActionType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://192.168.25.157:9080/NhinConnect/NhincProxyDocQuery?wsdl</con:url><con:content><![CDATA[<definitions name="NhincProxyDocQuery" targetNamespace="urn:gov:hhs:fha:nhinc:nhincproxydocquery" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:tns="urn:gov:hhs:fha:nhinc:nhincproxydocquery" xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:nccommonproxy="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy">
  <documentation>Nhinc Proxy Document Query</documentation>
  <types>
    <xsd:schema>
      <xsd:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/ebRS/query.xsd"/>
      <xsd:import namespace="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/Nhinccommonproxy.xsd"/>
    </xsd:schema>
  </types>
  <message name="RespondingGateway_CrossGatewayQueryResponseMessage">
    <part name="RespondingGateway_CrossGatewayQueryResponse" element="query:AdhocQueryResponse"></part>
  </message>
  <message name="RespondingGateway_CrossGatewayQueryRequestMessage">
    <part name="RespondingGateway_CrossGatewayQueryRequest" element="nccommonproxy:RespondingGateway_CrossGatewayQueryRequest"></part>
  </message>
  <portType name="NhincProxyDocQueryPortType">
    <operation name="RespondingGateway_CrossGatewayQuery">
      <input name="RespondingGateway_CrossGatewayQueryRequest" message="tns:RespondingGateway_CrossGatewayQueryRequestMessage"></input>
      <output name="RespondingGateway_CrossGatewayQueryResponse" message="tns:RespondingGateway_CrossGatewayQueryResponseMessage"></output>
    </operation>
  </portType>
  <binding name="NhincProxyDocQueryBindingSoap11" type="tns:NhincProxyDocQueryPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="RespondingGateway_CrossGatewayQuery">
      <soap:operation soapAction="urn:RespondingGateway_CrossGatewayQuery"/>
      <input name="RespondingGateway_CrossGatewayQueryRequest">
        <soap:body use="literal"/>
      </input>
      <output name="RespondingGateway_CrossGatewayQueryResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="NhincProxyDocQuery">
    <port name="NhincProxyDocQueryPortSoap11" binding="tns:NhincProxyDocQueryBindingSoap11">
      <soap:address location="http://ATHC-GFAS:9080/NhinConnect/NhincProxyDocQuery"/>
    </port>
  </service>
  <plnk:partnerLinkType name="NhincProxyDocQuery">
    <!--A partner link type is automatically generated when a new port type is added. 
         Partner link types are used by BPEL processes. In a BPEL process, a partner 
         link represents the interaction between the BPEL process and a partner service. 
         Each partner link is associated with a partner link type. A partner link type 
         characterizes the conversational relationship between two services. The 
         partner link type can have one or two roles.-->
    <plnk:role name="NhincProxyDocQueryPortTypeRole" portType="tns:NhincProxyDocQueryPortType"/>
  </plnk:partnerLinkType>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/XDS.b_DocumentRepository.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:ihe:iti:xds-b:2007" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:ihe:iti:xds-b:2007" xmlns:lcm="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rs.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/rim.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/lcm.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ihe/../ebRS/query.xsd"/>
  <xs:complexType name="RetrieveDocumentSetRequestType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="DocumentRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="HomeCommunityId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This corresponds to the home attribute of the Identifiable class in regrep RIM (regrep-rim-3.0-os.pdf, page 20)</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="RepositoryUniqueId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This is the XDSDocumentEntry.repositoryUniqueId attribute in the XDS metadata</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="DocumentUniqueId" type="rim:LongName">
              <xs:annotation>
                <xs:documentation>This is the XDSDocumentEntry.uniqueId attribute in the XDS metadata</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RetrieveDocumentSetResponseType">
    <xs:sequence>
      <xs:element ref="rs:RegistryResponse"/>
      <xs:sequence minOccurs="0">
        <xs:element maxOccurs="unbounded" name="DocumentResponse">
          <xs:complexType>
            <xs:sequence>
              <xs:element minOccurs="0" name="HomeCommunityId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This corresponds to the home attribute of the Identifiable class in regrep RIM (regrep-rim-3.0-os.pdf, page 20)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="RepositoryUniqueId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This is the XDSDocumentEntry.repositoryUniqueId attribute in the XDS metadata</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="DocumentUniqueId" type="rim:LongName">
                <xs:annotation>
                  <xs:documentation>This is the XDSDocumentEntry.uniqueId attribute in the XDS metadata</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="mimeType" type="rim:LongName"/>
              <xs:element name="Document" type="xs:base64Binary"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="RetrieveDocumentSetRequest" type="RetrieveDocumentSetRequestType"/>
  <xs:element name="RetrieveDocumentSetResponse" type="RetrieveDocumentSetResponseType"/>
  <xs:complexType name="ProvideAndRegisterDocumentSetRequestType">
    <xs:sequence>
      <xs:element ref="lcm:SubmitObjectsRequest"/>
      <xs:sequence minOccurs="0">
        <xs:element maxOccurs="unbounded" name="Document">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:base64Binary">
                <xs:attribute name="id" type="xs:anyURI" use="required">
                  <xs:annotation>
                    <xs:documentation>This corresponds to the ExtrinsicObject id in the eb RIM metadata a provides a linkage between the actual document data and its metadata</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ProvideAndRegisterDocumentSetRequest" type="ProvideAndRegisterDocumentSetRequestType"/>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/../../www.w3.org/2005/08/addressing/ws-addr.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" blockDefault="#all" elementFormDefault="qualified" finalDefault="" targetNamespace="http://www.w3.org/2005/08/addressing" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.w3.org/2005/08/addressing">
  <!--Constructs from the WS-Addressing Core-->
  <xs:element name="EndpointReference" type="tns:EndpointReferenceType"/>
  <xs:complexType name="EndpointReferenceType">
    <xs:sequence>
      <xs:element name="Address" type="tns:AttributedURIType"/>
      <xs:element minOccurs="0" name="ReferenceParameters" type="tns:ReferenceParametersType"/>
      <xs:element minOccurs="0" ref="tns:Metadata"/>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType mixed="false" name="ReferenceParametersType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Metadata" type="tns:MetadataType"/>
  <xs:complexType mixed="false" name="MetadataType">
    <xs:sequence>
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="MessageID" type="tns:AttributedURIType"/>
  <xs:element name="RelatesTo" type="tns:RelatesToType"/>
  <xs:complexType mixed="false" name="RelatesToType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:attribute default="http://www.w3.org/2005/08/addressing/reply" name="RelationshipType" type="tns:RelationshipTypeOpenEnum" use="optional"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="RelationshipTypeOpenEnum">
    <xs:union memberTypes="tns:RelationshipType xs:anyURI"/>
  </xs:simpleType>
  <xs:simpleType name="RelationshipType">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://www.w3.org/2005/08/addressing/reply"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ReplyTo" type="tns:EndpointReferenceType"/>
  <xs:element name="From" type="tns:EndpointReferenceType"/>
  <xs:element name="FaultTo" type="tns:EndpointReferenceType"/>
  <xs:element name="To" type="tns:AttributedURIType"/>
  <xs:element name="Action" type="tns:AttributedURIType"/>
  <xs:complexType mixed="false" name="AttributedURIType">
    <xs:simpleContent>
      <xs:extension base="xs:anyURI">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--Constructs from the WS-Addressing SOAP binding-->
  <xs:attribute name="IsReferenceParameter" type="xs:boolean"/>
  <xs:simpleType name="FaultCodesOpenEnumType">
    <xs:union memberTypes="tns:FaultCodesType xs:QName"/>
  </xs:simpleType>
  <xs:simpleType name="FaultCodesType">
    <xs:restriction base="xs:QName">
      <xs:enumeration value="tns:InvalidAddressingHeader"/>
      <xs:enumeration value="tns:InvalidAddress"/>
      <xs:enumeration value="tns:InvalidEPR"/>
      <xs:enumeration value="tns:InvalidCardinality"/>
      <xs:enumeration value="tns:MissingAddressInEPR"/>
      <xs:enumeration value="tns:DuplicateMessageID"/>
      <xs:enumeration value="tns:ActionMismatch"/>
      <xs:enumeration value="tns:MessageAddressingHeaderRequired"/>
      <xs:enumeration value="tns:DestinationUnreachable"/>
      <xs:enumeration value="tns:ActionNotSupported"/>
      <xs:enumeration value="tns:EndpointUnavailable"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="RetryAfter" type="tns:AttributedUnsignedLongType"/>
  <xs:complexType mixed="false" name="AttributedUnsignedLongType">
    <xs:simpleContent>
      <xs:extension base="xs:unsignedLong">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeaderQName" type="tns:AttributedQNameType"/>
  <xs:complexType mixed="false" name="AttributedQNameType">
    <xs:simpleContent>
      <xs:extension base="xs:QName">
        <xs:anyAttribute namespace="##other" processContents="lax"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="ProblemHeader" type="tns:AttributedAnyType"/>
  <xs:complexType mixed="false" name="AttributedAnyType">
    <xs:sequence>
      <xs:any maxOccurs="1" minOccurs="1" namespace="##any" processContents="lax"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="ProblemIRI" type="tns:AttributedURIType"/>
  <xs:element name="ProblemAction" type="tns:ProblemActionType"/>
  <xs:complexType mixed="false" name="ProblemActionType">
    <xs:sequence>
      <xs:element minOccurs="0" ref="tns:Action"/>
      <xs:element minOccurs="0" name="SoapAction" type="xs:anyURI"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/rs.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0">
  <annotation>
    <documentation xml:lang="en">The schema for OASIS ebXML Registry Services</documentation>
  </annotation>
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../ebRS/rim.xsd"/>
  <complexType name="RegistryRequestType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry requests</documentation>
    </annotation>
    <sequence>
      <!--every request may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="RequestSlotList" type="rim:SlotListType"/>
    </sequence>
    <attribute name="id" type="anyURI" use="optional"/>
    <!--Comment may be used by requestor to describe the request. Used in VersionInfo.comment-->
    <attribute name="comment" type="string" use="optional"/>
  </complexType>
  <element name="RegistryRequest" type="tns:RegistryRequestType"/>
  <element name="RegistryErrorList">
    <annotation>
      <documentation xml:lang="en">The RegistryErrorList is derived from the ErrorList element from the ebXML Message Service Specification</documentation>
    </annotation>
    <complexType>
      <sequence>
        <element maxOccurs="unbounded" ref="tns:RegistryError"/>
      </sequence>
      <attribute name="highestSeverity" type="rim:referenceURI" use="optional"/>
    </complexType>
  </element>
  <element name="RegistryError">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="codeContext" type="string" use="required"/>
          <attribute name="errorCode" type="string" use="required"/>
          <attribute default="urn:oasis:names:tc:ebxml-regrep:ErrorSeverityType:Error" name="severity" type="rim:referenceURI"/>
          <attribute name="location" type="string" use="optional"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <complexType name="RegistryResponseType">
    <annotation>
      <documentation xml:lang="en">Base type for all ebXML Registry responses</documentation>
    </annotation>
    <sequence>
      <!--every response may be extended using Slots.-->
      <element maxOccurs="1" minOccurs="0" name="ResponseSlotList" type="rim:SlotListType"/>
      <element minOccurs="0" ref="tns:RegistryErrorList"/>
    </sequence>
    <attribute name="status" type="rim:referenceURI" use="required"/>
    <!--id is the request if for the request for which this is a response-->
    <attribute name="requestId" type="anyURI" use="optional"/>
  </complexType>
  <element name="RegistryResponse" type="tns:RegistryResponseType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/query.xsd</con:url><con:content><![CDATA[<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
  <!--Import the rim.xsd file with XML schema mappaing from RIM-->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rim.xsd"/>
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" schemaLocation="http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/ihe/../ebRS/rs.xsd"/>
  <complexType name="ResponseOptionType">
    <attribute default="RegistryObject" name="returnType">
      <simpleType>
        <restriction base="NCName">
          <enumeration value="ObjectRef"/>
          <enumeration value="RegistryObject"/>
          <enumeration value="LeafClass"/>
          <enumeration value="LeafClassWithRepositoryItem"/>
        </restriction>
      </simpleType>
    </attribute>
    <attribute default="false" name="returnComposedObjects" type="boolean"/>
  </complexType>
  <element name="ResponseOption" type="tns:ResponseOptionType"/>
  <element name="AdhocQueryRequest">
    <annotation>
      <documentation xml:lang="en">An Ad hoc query request specifies an ad hoc query.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryRequestType">
          <sequence>
            <element maxOccurs="1" minOccurs="1" ref="tns:ResponseOption"/>
            <element ref="rim:AdhocQuery"/>
          </sequence>
          <attribute default="false" name="federated" type="boolean" use="optional"/>
          <attribute name="federation" type="anyURI" use="optional"/>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute default="-1" name="maxResults" type="integer"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <element name="AdhocQueryResponse">
    <annotation>
      <documentation xml:lang="en">The response includes a RegistryObjectList which has zero or more
        RegistryObjects that match the query specified in AdhocQueryRequest.</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="rs:RegistryResponseType">
          <sequence>
            <element ref="rim:RegistryObjectList"/>
          </sequence>
          <attribute default="0" name="startIndex" type="integer"/>
          <attribute name="totalResultCount" type="integer" use="optional"/>
        </extension>
      </complexContent>
    </complexType>
  </element>
  <complexType abstract="true" name="FilterQueryType">
    <sequence>
      <element maxOccurs="1" minOccurs="0" name="PrimaryFilter" type="tns:FilterType"/>
    </sequence>
  </complexType>
  <complexType abstract="true" name="BranchType">
    <complexContent>
      <extension base="tns:FilterQueryType"></extension>
    </complexContent>
  </complexType>
  <complexType name="InternationalStringBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="LocalizedStringFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="SlotBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="RegistryObjectQueryType">
    <complexContent>
      <extension base="tns:FilterQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="SlotBranch" type="tns:SlotBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="NameBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="DescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" name="VersionInfoFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ClassificationQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ExternalIdentifierQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ObjectTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="StatusQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="SourceAssociationQuery" type="tns:AssociationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TargetAssociationQuery" type="tns:AssociationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryObjectQuery" type="tns:RegistryObjectQueryType"/>
  <complexType name="AssociationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="AssociationTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="SourceObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="TargetObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AssociationQuery" type="tns:AssociationQueryType"/>
  <complexType name="AuditableEventQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AffectedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="EventTypeQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="UserQuery" type="tns:UserQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AuditableEventQuery" type="tns:AuditableEventQueryType"/>
  <complexType name="ClassificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationSchemeQuery"/>
          <element maxOccurs="1" minOccurs="0" name="ClassifiedObjectQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ClassificationNodeQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationQuery" type="tns:ClassificationQueryType"/>
  <complexType name="ClassificationNodeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:RegistryObjectQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationNodeQuery" type="tns:ClassificationNodeQueryType"/>
  <complexType name="ClassificationSchemeQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildrenQuery" type="tns:ClassificationNodeQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="NodeTypeQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ClassificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
  <complexType name="ExternalIdentifierQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
          <element maxOccurs="1" minOccurs="0" name="IdentificationSchemeQuery" type="tns:ClassificationSchemeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalIdentifierQuery" type="tns:ExternalIdentifierQueryType"/>
  <complexType name="ExternalLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExternalLinkQuery" type="tns:ExternalLinkQueryType"/>
  <complexType name="ExtrinsicObjectQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="ContentVersionInfoFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ExtrinsicObjectQuery" type="tns:ExtrinsicObjectQueryType"/>
  <complexType name="OrganizationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="ParentQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="ChildOrganizationQuery" type="tns:OrganizationQueryType"/>
          <element maxOccurs="1" minOccurs="0" name="PrimaryContactQuery" type="tns:PersonQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="OrganizationQuery" type="tns:OrganizationQueryType"/>
  <complexType name="RegistryPackageQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType"></extension>
    </complexContent>
  </complexType>
  <element name="RegistryPackageQuery" type="tns:RegistryPackageQueryType"/>
  <complexType name="ServiceQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:ServiceBindingQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceQuery" type="tns:ServiceQueryType"/>
  <complexType name="ServiceBindingQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceQuery"/>
          <element maxOccurs="unbounded" minOccurs="0" ref="tns:SpecificationLinkQuery"/>
          <element maxOccurs="1" minOccurs="0" name="TargetBindingQuery" type="tns:ServiceBindingQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="ServiceBindingQuery" type="tns:ServiceBindingQueryType"/>
  <complexType name="SpecificationLinkQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="UsageDescriptionBranch" type="tns:InternationalStringBranchType"/>
          <element maxOccurs="1" minOccurs="0" ref="tns:ServiceBindingQuery"/>
          <element maxOccurs="1" minOccurs="0" name="SpecificationObjectQuery" type="tns:RegistryObjectQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SpecificationLinkQuery" type="tns:SpecificationLinkQueryType"/>
  <complexType name="PersonQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="AddressFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="0" name="PersonNameFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="TelephoneNumberFilter" type="tns:FilterType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="EmailAddressFilter" type="tns:FilterType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="PersonQuery" type="tns:PersonQueryType"/>
  <complexType name="UserQueryType">
    <complexContent>
      <extension base="tns:PersonQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="UserQuery" type="tns:UserQueryType"/>
  <complexType name="RegistryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="OperatorQuery" type="tns:OrganizationQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="RegistryQuery" type="tns:RegistryQueryType"/>
  <complexType name="FederationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FederationQuery" type="tns:FederationQueryType"/>
  <complexType name="AdhocQueryQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryExpressionBranch" type="tns:QueryExpressionBranchType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AdhocQueryQuery" type="tns:AdhocQueryQueryType"/>
  <complexType name="QueryExpressionBranchType">
    <complexContent>
      <extension base="tns:BranchType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="QueryLanguageQuery" type="tns:ClassificationNodeQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="NotificationQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" ref="tns:RegistryObjectQuery"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="NotificationQuery" type="tns:NotificationQueryType"/>
  <complexType name="SubscriptionQueryType">
    <complexContent>
      <extension base="tns:RegistryObjectQueryType">
        <sequence>
          <element maxOccurs="1" minOccurs="0" name="SelectorQuery" type="tns:AdhocQueryQueryType"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubscriptionQuery" type="tns:SubscriptionQueryType"/>
  <!--The Filter type hierarchy-->
  <complexType name="FilterType">
    <attribute default="false" name="negate" type="boolean"/>
  </complexType>
  <element abstract="true" name="Filter" type="tns:FilterType"/>
  <complexType name="CompoundFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <sequence>
          <element maxOccurs="1" minOccurs="1" name="LeftFilter" type="tns:FilterType"/>
          <element maxOccurs="1" minOccurs="1" name="RightFilter" type="tns:FilterType"/>
        </sequence>
        <attribute name="logicalOperator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="AND"/>
              <enumeration value="OR"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <element name="CompoundFilter" type="tns:CompoundFilterType"/>
  <complexType abstract="true" name="SimpleFilterType">
    <complexContent>
      <extension base="tns:FilterType">
        <attribute name="domainAttribute" type="string" use="required"/>
        <attribute name="comparator" use="required">
          <simpleType>
            <restriction base="NCName">
              <enumeration value="LE"/>
              <enumeration value="LT"/>
              <enumeration value="GE"/>
              <enumeration value="GT"/>
              <enumeration value="EQ"/>
              <enumeration value="NE"/>
              <enumeration value="Like"/>
              <enumeration value="NotLike"/>
            </restriction>
          </simpleType>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="BooleanFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="boolean" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="BooleanFilter" type="tns:BooleanFilterType"/>
  <complexType name="IntegerFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="integer" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="IntegerFilter" type="tns:IntegerFilterType"/>
  <complexType name="FloatFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="float" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="FloatFilter" type="tns:FloatFilterType"/>
  <complexType name="DateTimeFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="DateTimeFilter" type="tns:DateTimeFilterType"/>
  <complexType name="StringFilterType">
    <complexContent>
      <extension base="tns:SimpleFilterType">
        <attribute name="value" type="string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="StringFilter" type="tns:StringFilterType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://ATHC-GFAS:9080/NhincProxyCA-sun-http-binding/NhincProxyBPEL/META-INF/src/_references/_projects/Interfaces/src/wsdl/../schemas/nhinc/common/../../../schemas/nhinc/common/../../../schemas/docs.oasis-open.org/wsn/t-1.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://docs.oasis-open.org/wsn/t-1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wstop="http://docs.oasis-open.org/wsn/t-1">
  <!--=============== utility type definitions  ====================-->
  <xsd:complexType mixed="true" name="Documentation">
    <xsd:sequence>
      <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##any" processContents="lax"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType abstract="true" mixed="false" name="ExtensibleDocumented">
    <xsd:sequence>
      <xsd:element minOccurs="0" name="documentation" type="wstop:Documentation"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType mixed="true" name="QueryExpressionType">
    <xsd:sequence>
      <xsd:any maxOccurs="1" minOccurs="0" processContents="lax"/>
    </xsd:sequence>
    <xsd:attribute name="Dialect" type="xsd:anyURI" use="required"/>
  </xsd:complexType>
  <!--================== Topic-Namespace Related  ================-->
  <xsd:complexType name="TopicNamespaceType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="wstop:TopicType">
                  <xsd:attribute name="parent" type="wstop:ConcreteTopicExpression"/>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName"/>
        <xsd:attribute name="targetNamespace" type="xsd:anyURI" use="required"/>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicNamespace" type="wstop:TopicNamespaceType">
    <xsd:unique name="rootTopicUniqueness">
      <xsd:selector xpath="wstop:Topic"/>
      <xsd:field xpath="@name"/>
    </xsd:unique>
  </xsd:element>
  <xsd:attribute name="topicNamespaceLocation" type="xsd:anyURI"/>
  <!--===================== Topic Related  =========================-->
  <xsd:complexType name="TopicType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:element maxOccurs="1" minOccurs="0" name="MessagePattern" type="wstop:QueryExpressionType"/>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="Topic" type="wstop:TopicType">
            <xsd:unique name="childTopicUniqueness">
              <xsd:selector xpath="wstop:topic"/>
              <xsd:field xpath="@name"/>
            </xsd:unique>
          </xsd:element>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:NCName" use="required"/>
        <xsd:attribute name="messageTypes">
          <xsd:simpleType>
            <xsd:list itemType="xsd:QName"/>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute default="false" name="final" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <!--================ Topic Set Related  ===================-->
  <xsd:complexType name="TopicSetType">
    <xsd:complexContent>
      <xsd:extension base="wstop:ExtensibleDocumented">
        <xsd:sequence>
          <xsd:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="TopicSet" type="wstop:TopicSetType"/>
  <xsd:attribute default="false" name="topic" type="xsd:boolean"/>
  <!--================ Topic Expression Related  ===================-->
  <xsd:simpleType name="FullTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>TopicPathExpression  ::=   TopicPath ( '|' TopicPath )*  
        TopicPath       ::=   RootTopic ChildTopicExpression* 
        RootTopic       ::=   NamespacePrefix? ('//')? (NCName | '*')  
        NamespacePrefix ::=   NCName ':'      
        ChildTopicExpression ::=   '/' '/'? (QName | NCName | '*'| '.')</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*(\|([\i-[:]][\c-[:]]*:)?(//)?([\i-[:]][\c-[:]]*|\*)((/|//)(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*|\*|[.]))*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ConcreteTopicExpression">
    <xsd:restriction base="xsd:token">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    ConcreteTopicPath    ::=   RootTopic ChildTopic*    
    RootTopic            ::=   QName  
    ChildTopic           ::=   '/' (QName | NCName)</xsd:documentation>
      </xsd:annotation>
      <xsd:pattern value="(([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)(/([\i-[:]][\c-[:]]*:)?[\i-[:]][\c-[:]]*)*"></xsd:pattern>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SimpleTopicExpression">
    <xsd:restriction base="xsd:QName">
      <xsd:annotation>
        <xsd:documentation>The pattern allows strings matching the following EBNF:
    RootTopic            ::=   QName</xsd:documentation>
      </xsd:annotation>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:${HttpDefaultPort}/NhinConnect/NhincProxyDocQuery</con:endpoint><con:endpoint>http://ATHC-GFAS:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:endpoint>http://mhsnhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:endpoint>http://dvanhie3.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint><con:endpoint>http://dodgateway.fedsconnect.org:9080/NhinConnect/NhincProxyDocQuery</con:endpoint></con:endpoints><con:operation isOneWay="false" action="urn:RespondingGateway_CrossGatewayQuery" name="RespondingGateway_CrossGatewayQuery" bindingOperationName="RespondingGateway_CrossGatewayQuery" type="Request-Response" outputName="RespondingGateway_CrossGatewayQueryResponse" inputName="RespondingGateway_CrossGatewayQueryRequest" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/></con:operation></con:interface><con:testSuite name="DocRegistryAndRepositoryTestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ProvideAndRegisterTest" searchProperties="true" id="9d80b1e8-99ee-4450-9a35-c14f094caca9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Find Metadata Docs"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def metadataPath = groovyUtils.projectPath + "/" + context.findProperty("metadataDir")

def dir = new File(metadataPath)
def fileNumber = 0;

dir.eachFile{file->
  fileNumber++
  context.testCase.setPropertyValue("File" + fileNumber, file.toString());
}
context.testCase.setPropertyValue("TotalFiles", fileNumber.toString());
context.testCase.setPropertyValue("CurrentFile", "0");
</script></con:config></con:testStep><con:testStep type="groovy" name="Read Metadata"><con:settings/><con:config><script>import java.io.*;

static String ReadFile(String FileName,context,log) {
	log.info(FileName);
	File sourceFile = new File(FileName);  
	String filecontents = null;
	if(sourceFile.exists()) 
	{
		StringBuilder sb = new StringBuilder();

		BufferedReader input =  new BufferedReader(new FileReader(sourceFile));
		try {
			String line = null; //not declared within while loop
			/*
			* readLine is a bit quirky :
			* it returns the content of a line MINUS the newline.
			* it returns null only for the END of the stream.
			* it returns an empty String if two newlines appear in a row.
			*/
			while (( line = input.readLine()) != null){
			sb.append(line);
			sb.append(System.getProperty("line.separator"));
			}
		}
		finally {
			input.close();
		}
		filecontents=sb.toString();
	} 
	else {
		log.info("unable to find source file " + FileName);
	}   
	return filecontents;
}

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def totalFiles = context.findProperty("TotalFiles")
def currentFile = context.findProperty("CurrentFile")
currentFile++
def currentFileString = currentFile.toString()
def fileName = context.findProperty("File" + currentFileString)
def fileContents = ReadFile(fileName, context, log)
holder = groovyUtils.getXmlHolder( fileContents )

def documentUniqueId = holder.getNodeValue( "//Document/documentUniqueId" )
context.testCase.setPropertyValue("documentUniqueId", documentUniqueId)

def replacesDocumentUniqueId = holder.getNodeValue( "//Document/replacesDocumentUniqueId" )
context.testCase.setPropertyValue("replacesDocumentUniqueId", replacesDocumentUniqueId)

def documentTitle = holder.getNodeValue( "//Document/documentTitle" )
context.testCase.setPropertyValue("documentTitle", documentTitle)

def authorPerson = holder.getNodeValue( "//Document/authorPerson" )
context.testCase.setPropertyValue("authorPerson", authorPerson)

def authorInstitution = holder.getNodeValue( "//Document/authorInstitution" )
context.testCase.setPropertyValue("authorInstitution", authorInstitution)

def authorRole = holder.getNodeValue( "//Document/authorRole" )
context.testCase.setPropertyValue("authorRole", authorRole)

def authorSpecialty = holder.getNodeValue( "//Document/authorSpecialty" )
context.testCase.setPropertyValue("authorSpecialty", authorSpecialty)

def availablityStatus = holder.getNodeValue( "//Document/availablityStatus" )
context.testCase.setPropertyValue("availablityStatus", availablityStatus)

def classCode = holder.getNodeValue( "//Document/classCode" )
context.testCase.setPropertyValue("classCode", classCode)

def classCodeScheme = holder.getNodeValue( "//Document/classCodeScheme" )
context.testCase.setPropertyValue("classCodeScheme", classCodeScheme)

def classCodeDisplayName = holder.getNodeValue( "//Document/classCodeDisplayName" )
context.testCase.setPropertyValue("classCodeDisplayName", classCodeDisplayName)

def confidentialityCode = holder.getNodeValue( "//Document/confidentialityCode" )
context.testCase.setPropertyValue("confidentialityCode", confidentialityCode)

def confidentialityCodeScheme = holder.getNodeValue( "//Document/confidentialityCodeScheme" )
context.testCase.setPropertyValue("confidentialityCodeScheme", confidentialityCodeScheme)

def confidentialityCodeDisplayName = holder.getNodeValue( "//Document/confidentialityCodeDisplayName" )
context.testCase.setPropertyValue("confidentialityCodeDisplayName", confidentialityCodeDisplayName)

def creationTime = holder.getNodeValue( "//Document/creationTime" )
context.testCase.setPropertyValue("creationTime", creationTime)

def formatCode = holder.getNodeValue( "//Document/formatCode" )
context.testCase.setPropertyValue("formatCode", formatCode)

def formatCodeScheme = holder.getNodeValue( "//Document/formatCodeScheme" )
context.testCase.setPropertyValue("formatCodeScheme", formatCodeScheme)

def formatCodeDisplayName = holder.getNodeValue( "//Document/formatCodeDisplayName" )
context.testCase.setPropertyValue("formatCodeDisplayName", formatCodeDisplayName)

def patientId = holder.getNodeValue( "//Document/patientId" )
context.testCase.setPropertyValue("patientId", patientId)

def serviceStartTime = holder.getNodeValue( "//Document/serviceStartTime" )
context.testCase.setPropertyValue("serviceStartTime", serviceStartTime)

def serviceStopTime = holder.getNodeValue( "//Document/serviceStopTime" )
context.testCase.setPropertyValue("serviceStopTime", serviceStopTime)

def status = holder.getNodeValue( "//Document/status" )
context.testCase.setPropertyValue("status", status)

def comments = holder.getNodeValue( "//Document/comments" )
context.testCase.setPropertyValue("comments", comments)

def hash = holder.getNodeValue( "//Document/hash" )
context.testCase.setPropertyValue("hash", hash)

def facilityCode = holder.getNodeValue( "//Document/facilityCode" )
context.testCase.setPropertyValue("facilityCode", facilityCode)

def facilityCodeScheme = holder.getNodeValue( "//Document/facilityCodeScheme" )
context.testCase.setPropertyValue("facilityCodeScheme", facilityCodeScheme)

def facilityCodeDisplayName = holder.getNodeValue( "//Document/facilityCodeDisplayName" )
context.testCase.setPropertyValue("facilityCodeDisplayName", facilityCodeDisplayName)

def intendedRecipientPerson = holder.getNodeValue( "//Document/intendedRecipientPerson" )
context.testCase.setPropertyValue("intendedRecipientPerson", intendedRecipientPerson)

def intendedRecipientOrganization = holder.getNodeValue( "//Document/intendedRecipientOrganization" )
context.testCase.setPropertyValue("intendedRecipientOrganization", intendedRecipientOrganization)

def languageCode = holder.getNodeValue( "//Document/languageCode" )
context.testCase.setPropertyValue("languageCode", languageCode)

def legalAuthenticator = holder.getNodeValue( "//Document/legalAuthenticator" )
context.testCase.setPropertyValue("legalAuthenticator", legalAuthenticator)

def mimeType = holder.getNodeValue( "//Document/mimeType" )
context.testCase.setPropertyValue("mimeType", mimeType)

def parentDocumentId = holder.getNodeValue( "//Document/parentDocumentId" )
context.testCase.setPropertyValue("parentDocumentId", parentDocumentId)

def parentDocumentRelationship = holder.getNodeValue( "//Document/parentDocumentRelationship" )
context.testCase.setPropertyValue("parentDocumentRelationship", parentDocumentRelationship)

def practiceSetting = holder.getNodeValue( "//Document/practiceSetting" )
context.testCase.setPropertyValue("practiceSetting", practiceSetting)

def practiceSettingScheme = holder.getNodeValue( "//Document/practiceSettingScheme" )
context.testCase.setPropertyValue("practiceSettingScheme", practiceSettingScheme)

def practiceSettingDisplayName = holder.getNodeValue( "//Document/practiceSettingDisplayName" )
context.testCase.setPropertyValue("practiceSettingDisplayName", practiceSettingDisplayName)

def size = holder.getNodeValue( "//Document/size" )
context.testCase.setPropertyValue("size", size)

def sourcePatientId = holder.getNodeValue( "//Document/sourcePatientId" )
context.testCase.setPropertyValue("sourcePatientId", sourcePatientId)

def pid3 = holder.getNodeValue( "//Document/pid3" )
context.testCase.setPropertyValue("pid3", pid3)

def pid5 = holder.getNodeValue( "//Document/pid5" )
context.testCase.setPropertyValue("pid5", pid5)

def pid7 = holder.getNodeValue( "//Document/pid7" )
context.testCase.setPropertyValue("pid7", pid7)

def pid8 = holder.getNodeValue( "//Document/pid8" )
context.testCase.setPropertyValue("pid8", pid8)

def pid11 = holder.getNodeValue( "//Document/pid11" )
context.testCase.setPropertyValue("pid11", pid11)

def typeCode = holder.getNodeValue( "//Document/typeCode" )
context.testCase.setPropertyValue("typeCode", typeCode)

def typeCodeScheme = holder.getNodeValue( "//Document/typeCodeScheme" )
context.testCase.setPropertyValue("typeCodeScheme", typeCodeScheme)

def typeCodeDisplayName = holder.getNodeValue( "//Document/typeCodeDisplayName" )
context.testCase.setPropertyValue("typeCodeDisplayName", typeCodeDisplayName)

def documentUri = holder.getNodeValue( "//Document/documentUri" )
context.testCase.setPropertyValue("documentUri", documentUri)

def rawData = holder.getNodeValue( "//Document/rawData" )
def bytes = rawData.bytes
def encodedData = bytes.encodeBase64().toString()
context.testCase.setPropertyValue("rawData", encodedData)

def eventCode = holder.getNodeValue( "//Document/eventCode/code" )
context.testCase.setPropertyValue("eventCode", eventCode)

def eventCodeScheme = holder.getNodeValue( "//Document/eventCode/codeSchema" )
context.testCase.setPropertyValue("eventCodeScheme", eventCodeScheme)

def eventCodeDisplayName = holder.getNodeValue( "//Document/eventCode/codeDisplayName" )
context.testCase.setPropertyValue("eventCodeDisplayName", eventCodeDisplayName)

Date submissionSetDate = new Date()
def dfSubmissionSet = "yyyy.MM.dd.HH.mm.ss"
context.testCase.setPropertyValue("submissionSetDate", submissionSetDate.format(dfSubmissionSet))
 
context.testCase.setPropertyValue("CurrentFile", currentFileString)
</script></con:config></con:testStep><con:testStep type="groovy" name="Determine add or replace"><con:settings/><con:config><script>def replacesDocumentUniqueId = context.findProperty("replacesDocumentUniqueId")
if (replacesDocumentUniqueId == null) testRunner.gotoStepByName( "Add Document" )
else testRunner.gotoStepByName( "Replace Document" )</script></con:config></con:testStep><con:testStep type="request" name="Add Document"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>xdsrepositorybSoap12Binding</con:interface><con:operation>ProvideAndRegisterDocumentSetRequest</con:operation><con:request name="Add Document" useWsAddressing="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="WsdlSettings@enable-mtom">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@force_mtom">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@disable-multipart-attachments">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@encode_attachments">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@enable_inline_files">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@expand-mtom-attachments">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@inline-response-attachments">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint-DocRepository}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:wsa="http://www.w3.org/2005/08/addressing">
   <soapenv:Header>
      <wsa:To>${#Project#Endpoint-DocRepository}</wsa:To>
      <wsa:MessageID>urn:uuid:4772851B96CCD2378E1260256352332</wsa:MessageID>
      <wsa:Action>urn:ihe:iti:2007:ProvideAndRegisterDocumentSet-b</wsa:Action>
   </soapenv:Header>
   <soapenv:Body projectName="DocRegistryAndRepository" testCase="ProvideAndRegisterTest">
      <xdsb:ProvideAndRegisterDocumentSetRequest xmlns:xdsb="urn:ihe:iti:xds-b:2007">
         <lcm:SubmitObjectsRequest xmlns:lcm="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0">
            <rim:RegistryObjectList xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
               <rim:ExtrinsicObject home="urn:oid:1.1" id="${#TestCase#documentUniqueId}" isOpaque="false" mimeType="${#TestCase#mimeType}" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                  <rim:Slot name="creationTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#creationTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="intendedRecipient">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#intendedRecipientPerson}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="languageCode">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#languageCode}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="legalAuthenticator">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#legalAuthenticator}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="serviceStartTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#serviceStartTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="serviceStopTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#serviceStopTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="sourcePatientId">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#sourcePatientId}^^^&amp;${#TestCase#intendedRecipientOrganization}&amp;ISO</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="sourcePatientInfo">
                     <rim:ValueList>
                        <rim:Value>PID-3|${#TestCase#pid3}</rim:Value>
                        <rim:Value>PID-5|${#TestCase#pid5}</rim:Value>
                        <rim:Value>PID-7|${#TestCase#pid7}</rim:Value>
                        <rim:Value>PID-8|${#TestCase#pid8}</rim:Value>
                        <rim:Value>PID-11|${#TestCase#pid11}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Name>
                     <rim:LocalizedString value="${#TestCase#documentTitle}"/>
                  </rim:Name>
                  <rim:Description>
                     <rim:LocalizedString value="${#TestCase#comments}"/>
                  </rim:Description>
                  <rim:Classification classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="">
                     <rim:Slot name="authorPerson">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorPerson}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorInstitution">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorInstitution}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorRole">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorRole}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorSpecialty">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorSpecialty}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#classCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#classCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#classCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#confidentialityCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#confidentialityCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#confidentialityCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#formatCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#formatCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#formatCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#facilityCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#facilityCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#facilityCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#practiceSetting}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#practiceSettingScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#practiceSettingDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#typeCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#typeCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#typeCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:2c6b8cb7-8b2a-4051-b291-b1ae6a575ef4" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#eventCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#eventCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#eventCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:ExternalIdentifier id="" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" registryObject="${#TestCase#documentUniqueId}" value="${#TestCase#DocumentUniqueId}">
                     <rim:Name>
                        <rim:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
                  <rim:ExternalIdentifier id="" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" registryObject="${#TestCase#documentUniqueId}" value="${#TestCase#patientId}^^^&amp;${#TestCase#intendedRecipientOrganization}&amp;ISO">
                     <rim:Name>
                        <rim:LocalizedString value="XDSDocumentEntry.patientId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
               </rim:ExtrinsicObject>
               <rim:RegistryPackage id="${#TestCase#documentUniqueId}-SubmissionSet" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:RegistryPackage">
                  <rim:Slot name="submissionTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#creationTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Name>
                     <rim:LocalizedString value="${#TestCase#documentTitle}"/>
                  </rim:Name>
                  <rim:Description>
                     <rim:LocalizedString value="${#TestCase#comments}"/>
                  </rim:Description>
                  <rim:Classification classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="${#TestCase#documentUniqueId}-SubmissionSet" nodeRepresentation="" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Classification" id="id_20">
                     <rim:Slot name="authorPerson">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorPerson}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorInstitution">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorInstitution}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorRole">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorRole}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorSpecialty">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorSpecialty}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="${#TestCase#documentUniqueId}-SubmissionSet" nodeRepresentation="History and Physical" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Classification" id="id_21">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>Connect-a-thon contentTypeCodes</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="History and Physical"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:ExternalIdentifier identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="${#TestCase#intendedRecipientOrganization}.${#TestCase#submissionSetDate}" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:ExternalIdentifier" id="id_22" registryObject="${#TestCase#documentUniqueId}-SubmissionSet">
                     <rim:Name>
                        <rim:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
                  <rim:ExternalIdentifier identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="${#TestCase#intendedRecipientOrganization}" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:ExternalIdentifier" id="id_23" registryObject="${#TestCase#documentUniqueId}-SubmissionSet">
                     <rim:Name>
                        <rim:LocalizedString value="XDSSubmissionSet.sourceId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
                  <rim:ExternalIdentifier identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="${#TestCase#patientId}^^^&amp;${#TestCase#intendedRecipientOrganization}&amp;ISO" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:ExternalIdentifier" id="id_24" registryObject="${#TestCase#documentUniqueId}-SubmissionSet">
                     <rim:Name>
                        <rim:LocalizedString value="XDSSubmissionSet.patientId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
               </rim:RegistryPackage>
               <rim:Association associationType="urn:oasis:names:tc:ebxml-regrep:AssociationType:HasMember" sourceObject="${#TestCase#documentUniqueId}-SubmissionSet" targetObject="${#TestCase#documentUniqueId}" id="ID_25276323_1" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Association">
                  <rim:Slot name="SubmissionSetStatus">
                     <rim:ValueList>
                        <rim:Value>Original</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
               </rim:Association>
               <rim:Classification classifiedObject="${#TestCase#documentUniqueId}-SubmissionSet" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd" id="ID_25276323_3" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Classification"/>
            </rim:RegistryObjectList>
         </lcm:SubmitObjectsRequest>
         <xdsb:Document id="${#TestCase#documentUniqueId}">${#TestCase#rawData}</xdsb:Document>
      </xdsb:ProvideAndRegisterDocumentSetRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace ns2='urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
//ns2:RegistryResponse[1]/@status</path><content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" addDefaultAction="false" action="urn:ihe:iti:2007:ProvideAndRegisterDocumentSet-b" generateMessageId="true"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Skip to Log Results"><con:settings/><con:config><script>testRunner.gotoStepByName( "Log Results" );</script></con:config></con:testStep><con:testStep type="request" name="Replace Document"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>xdsrepositorybSoap12Binding</con:interface><con:operation>ProvideAndRegisterDocumentSetRequest</con:operation><con:request name="Replace Document" useWsAddressing="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="WsdlSettings@enable-mtom">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@force_mtom">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@disable-multipart-attachments">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@encode_attachments">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@enable_inline_files">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@expand-mtom-attachments">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@inline-response-attachments">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@skip_soap_action">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint-DocRepository}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:wsa="http://www.w3.org/2005/08/addressing">
   <soapenv:Header>
      <wsa:To>${#Project#Endpoint-DocRepository}</wsa:To>
      <wsa:MessageID>urn:uuid:4772851B96CCD2378E1260256352332</wsa:MessageID>
      <wsa:Action>urn:ihe:iti:2007:ProvideAndRegisterDocumentSet-b</wsa:Action>
   </soapenv:Header>
   <soapenv:Body projectName="DocRegistryAndRepository" testCase="ProvideAndRegisterTest">
      <xdsb:ProvideAndRegisterDocumentSetRequest xmlns:xdsb="urn:ihe:iti:xds-b:2007">
         <lcm:SubmitObjectsRequest xmlns:lcm="urn:oasis:names:tc:ebxml-regrep:xsd:lcm:3.0">
            <rim:RegistryObjectList xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
               <rim:ExtrinsicObject home="urn:oid:1.1" id="${#TestCase#documentUniqueId}" isOpaque="false" mimeType="${#TestCase#mimeType}" objectType="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1">
                  <rim:Slot name="creationTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#creationTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="intendedRecipient">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#intendedRecipientPerson}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="languageCode">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#languageCode}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="legalAuthenticator">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#legalAuthenticator}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="serviceStartTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#serviceStartTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="serviceStopTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#serviceStopTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="sourcePatientId">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#sourcePatientId}^^^&amp;${#TestCase#intendedRecipientOrganization}&amp;ISO</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Slot name="sourcePatientInfo">
                     <rim:ValueList>
                        <rim:Value>PID-3|${#TestCase#pid3}</rim:Value>
                        <rim:Value>PID-5|${#TestCase#pid5}</rim:Value>
                        <rim:Value>PID-7|${#TestCase#pid7}</rim:Value>
                        <rim:Value>PID-8|${#TestCase#pid8}</rim:Value>
                        <rim:Value>PID-11|${#TestCase#pid11}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Name>
                     <rim:LocalizedString value="${#TestCase#documentTitle}"/>
                  </rim:Name>
                  <rim:Description>
                     <rim:LocalizedString value="${#TestCase#comments}"/>
                  </rim:Description>
                  <rim:Classification classificationScheme="urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="">
                     <rim:Slot name="authorPerson">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorPerson}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorInstitution">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorInstitution}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorRole">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorRole}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorSpecialty">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorSpecialty}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#classCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#classCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#classCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#confidentialityCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#confidentialityCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#confidentialityCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#formatCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#formatCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#formatCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#facilityCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#facilityCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#facilityCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#practiceSetting}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#practiceSettingScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#practiceSettingDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:f0306f51-975f-434e-a61c-c59651d33983" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#typeCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#typeCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#typeCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:2c6b8cb7-8b2a-4051-b291-b1ae6a575ef4" classifiedObject="${#TestCase#documentUniqueId}" id="" nodeRepresentation="${#TestCase#eventCode}">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#eventCodeScheme}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="${#TestCase#eventCodeDisplayName}"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:ExternalIdentifier id="" identificationScheme="urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab" registryObject="${#TestCase#documentUniqueId}" value="${#TestCase#DocumentUniqueId}">
                     <rim:Name>
                        <rim:LocalizedString value="XDSDocumentEntry.uniqueId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
                  <rim:ExternalIdentifier id="" identificationScheme="urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427" registryObject="${#TestCase#documentUniqueId}" value="${#TestCase#patientId}^^^&amp;${#TestCase#intendedRecipientOrganization}&amp;ISO">
                     <rim:Name>
                        <rim:LocalizedString value="XDSDocumentEntry.patientId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
               </rim:ExtrinsicObject>
               <rim:RegistryPackage id="${#TestCase#documentUniqueId}-SubmissionSet" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:RegistryPackage">
                  <rim:Slot name="submissionTime">
                     <rim:ValueList>
                        <rim:Value>${#TestCase#creationTime}</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
                  <rim:Name>
                     <rim:LocalizedString value="${#TestCase#documentTitle}"/>
                  </rim:Name>
                  <rim:Description>
                     <rim:LocalizedString value="${#TestCase#comments}"/>
                  </rim:Description>
                  <rim:Classification classificationScheme="urn:uuid:a7058bb9-b4e4-4307-ba5b-e3f0ab85e12d" classifiedObject="${#TestCase#documentUniqueId}-SubmissionSet" nodeRepresentation="" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Classification" id="id_20">
                     <rim:Slot name="authorPerson">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorPerson}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorInstitution">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorInstitution}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorRole">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorRole}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Slot name="authorSpecialty">
                        <rim:ValueList>
                           <rim:Value>${#TestCase#authorSpecialty}</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                  </rim:Classification>
                  <rim:Classification classificationScheme="urn:uuid:aa543740-bdda-424e-8c96-df4873be8500" classifiedObject="${#TestCase#documentUniqueId}-SubmissionSet" nodeRepresentation="History and Physical" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Classification" id="id_21">
                     <rim:Slot name="codingScheme">
                        <rim:ValueList>
                           <rim:Value>Connect-a-thon contentTypeCodes</rim:Value>
                        </rim:ValueList>
                     </rim:Slot>
                     <rim:Name>
                        <rim:LocalizedString value="History and Physical"/>
                     </rim:Name>
                  </rim:Classification>
                  <rim:ExternalIdentifier identificationScheme="urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8" value="${#TestCase#intendedRecipientOrganization}.${#TestCase#submissionSetDate}" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:ExternalIdentifier" id="id_22" registryObject="${#TestCase#documentUniqueId}-SubmissionSet">
                     <rim:Name>
                        <rim:LocalizedString value="XDSSubmissionSet.uniqueId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
                  <rim:ExternalIdentifier identificationScheme="urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832" value="${#TestCase#intendedRecipientOrganization}" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:ExternalIdentifier" id="id_23" registryObject="${#TestCase#documentUniqueId}-SubmissionSet">
                     <rim:Name>
                        <rim:LocalizedString value="XDSSubmissionSet.sourceId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
                  <rim:ExternalIdentifier identificationScheme="urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446" value="${#TestCase#patientId}^^^&amp;${#TestCase#intendedRecipientOrganization}&amp;ISO" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:ExternalIdentifier" id="id_24" registryObject="${#TestCase#documentUniqueId}-SubmissionSet">
                     <rim:Name>
                        <rim:LocalizedString value="XDSSubmissionSet.patientId"/>
                     </rim:Name>
                  </rim:ExternalIdentifier>
               </rim:RegistryPackage>
               <rim:Association associationType="urn:oasis:names:tc:ebxml-regrep:AssociationType:HasMember" sourceObject="${#TestCase#documentUniqueId}-SubmissionSet" targetObject="${#TestCase#documentUniqueId}" id="ID_25276323_1" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Association">
                  <rim:Slot name="SubmissionSetStatus">
                     <rim:ValueList>
                        <rim:Value>Original</rim:Value>
                     </rim:ValueList>
                  </rim:Slot>
               </rim:Association>
               <rim:Association associationType="urn:ihe:iti:2007:AssociationType:RPLC" sourceObject="${#TestCase#documentUniqueId}" targetObject="${#TestCase#replacesDocumentUniqueId}" id="ID_12702088_3"/>
               <rim:Classification classifiedObject="${#TestCase#documentUniqueId}-SubmissionSet" classificationNode="urn:uuid:a54d6aa5-d40d-43f9-88c5-b4633d873bdd" id="ID_25276323_3" objectType="urn:oasis:names:tc:ebxml-regrep:ObjectType:RegistryObject:Classification"/>
            </rim:RegistryObjectList>
         </lcm:SubmitObjectsRequest>
         <xdsb:Document id="${#TestCase#documentUniqueId}">${#TestCase#rawData}</xdsb:Document>
      </xdsb:ProvideAndRegisterDocumentSetRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match"><con:configuration><path>declare namespace ns2='urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
//ns2:RegistryResponse[1]/@status</path><content>urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" addDefaultAction="false" action="urn:ihe:iti:2007:ProvideAndRegisterDocumentSet-b" generateMessageId="true"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Log Results"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def replacesDocumentUniqueId = context.findProperty("replacesDocumentUniqueId")
def testCaseName = ""
if (replacesDocumentUniqueId == null) testCaseName = "Add Document"
else testCaseName = "Replace Document"

holder = groovyUtils.getXmlHolder( testCaseName + "#Response" )
holder.namespaces['rs'] = 'urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0';
def status = holder.getNodeValue( "//rs:RegistryResponse[1]/@status" )

if (status == "urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success") {
	log.info "Success"
	log.info "------------------------------------------"
}
	
if (status == "urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Failure") {
	def codeContext = holder.getNodeValue( "//rs:RegistryResponse[1]/rs:RegistryErrorList[1]/rs:RegistryError[1]/@codeContext" )
	def errorCode = holder.getNodeValue( "//rs:RegistryResponse[1]/rs:RegistryErrorList[1]/rs:RegistryError[1]/@errorCode" )
	def location = holder.getNodeValue( "//rs:RegistryResponse[1]/rs:RegistryErrorList[1]/rs:RegistryError[1]/@location" )
	def severity = holder.getNodeValue( "//rs:RegistryResponse[1]/rs:RegistryErrorList[1]/rs:RegistryError[1]/@severity" )
	log.info "Error: " + errorCode
	log.info "Context: " + codeContext
	log.info "Severity: " + severity
	log.info "Location: " + location
	log.info "------------------------------------------"
}</script></con:config></con:testStep><con:testStep type="groovy" name="Loop"><con:settings/><con:config><script>def totalFiles = context.findProperty("TotalFiles")
def currentFile = context.findProperty("CurrentFile")

if (currentFile != totalFiles) testRunner.gotoStepByName( "Read Metadata" );</script></con:config></con:testStep><con:properties><con:property><con:name>startDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>endDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sigDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expireDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>File1</con:name><con:value>C:\Projects\NHINC\Current\Product\SoapUI_Test\ManualSuite\metadataFiles\younger c32 doc Testgateway1v4.xml</con:value></con:property><con:property><con:name>File2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Projects\NHINC\Current\Product\SoapUI_Test\ManualSuite\metadataFiles\younger c32 doc Testgateway2v5.xml</con:value></con:property><con:property><con:name>File3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Projects\NHINC\Current\Product\SoapUI_Test\ManualSuite\metadataFiles\younger c32 doc Testgateway3v5.xml</con:value></con:property><con:property><con:name>File4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>File5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TotalFiles</con:name><con:value>3</con:value></con:property><con:property><con:name>CurrentFile</con:name><con:value>3</con:value></con:property><con:property><con:name>documentUniqueId</con:name><con:value>1.123401.33333</con:value></con:property><con:property><con:name>documentTitle</con:name><con:value>Younger CONNECT TESTGATEWAY Document 3</con:value></con:property><con:property><con:name>authorPerson</con:name><con:value>Dr. Joseph Hoodwink</con:value></con:property><con:property><con:name>authorInstitution</con:name><con:value>Main Children's Hospital</con:value></con:property><con:property><con:name>authorRole</con:name><con:value>Primary Care Provider</con:value></con:property><con:property><con:name>authorSpecialty</con:name><con:value>Pediatrician</con:value></con:property><con:property><con:name>availablityStatus</con:name><con:value>Active</con:value></con:property><con:property><con:name>classCode</con:name><con:value>34133-9</con:value></con:property><con:property><con:name>classCodeScheme</con:name><con:value>2.16.840.1.113883.6.1</con:value></con:property><con:property><con:name>classCodeDisplayName</con:name><con:value>Summarization of Episode Note</con:value></con:property><con:property><con:name>confidentialityCode</con:name><con:value>N</con:value></con:property><con:property><con:name>confidentialityCodeScheme</con:name><con:value>Connect-a-thon confidentialityCodes</con:value></con:property><con:property><con:name>confidentialityCodeDisplayName</con:name><con:value>Normal</con:value></con:property><con:property><con:name>creationTime</con:name><con:value>20080417084906</con:value></con:property><con:property><con:name>formatCode</con:name><con:value>1.3.6.1.4.1.19376.1.5.3.1.1.10</con:value></con:property><con:property><con:name>formatCodeScheme</con:name><con:value>IHE PCC</con:value></con:property><con:property><con:name>formatCodeDisplayName</con:name><con:value>urn:ihe:pcc:edr:2007</con:value></con:property><con:property><con:name>patientId</con:name><con:value>D123401</con:value></con:property><con:property><con:name>serviceStartTime</con:name><con:value>20060510000000</con:value></con:property><con:property><con:name>serviceStopTime</con:name><con:value>20080801000000</con:value></con:property><con:property><con:name>status</con:name><con:value>urn:oasis:names:tc:ebxml-regrep:StatusType:Approved</con:value></con:property><con:property><con:name>comments</con:name><con:value>Document 3 Younder CONNECT TESTGATEWAY comments</con:value></con:property><con:property><con:name>hash</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>facilityCode</con:name><con:value>FMC</con:value></con:property><con:property><con:name>facilityCodeScheme</con:name><con:value>2.16.840.1.113883.5.111</con:value></con:property><con:property><con:name>facilityCodeDisplayName</con:name><con:value>Family Medicine Clinic</con:value></con:property><con:property><con:name>intendedRecipientPerson</con:name><con:value>Scott Borst</con:value></con:property><con:property><con:name>intendedRecipientOrganization</con:name><con:value>2.16.840.1.113883.3.333</con:value></con:property><con:property><con:name>languageCode</con:name><con:value>en-US</con:value></con:property><con:property><con:name>legalAuthenticator</con:name><con:value>legal</con:value></con:property><con:property><con:name>mimeType</con:name><con:value>text/xml</con:value></con:property><con:property><con:name>parentDocumentId</con:name><con:value>1.123401.33333</con:value></con:property><con:property><con:name>parentDocumentRelationship</con:name><con:value>same</con:value></con:property><con:property><con:name>practiceSetting</con:name><con:value>394802001</con:value></con:property><con:property><con:name>practiceSettingScheme</con:name><con:value>2.16.840.1.113883.6.96</con:value></con:property><con:property><con:name>practiceSettingDisplayName</con:name><con:value>General Medicine</con:value></con:property><con:property><con:name>size</con:name><con:value>30666</con:value></con:property><con:property><con:name>sourcePatientId</con:name><con:value>500000000</con:value></con:property><con:property><con:name>pid3</con:name><con:value>pid1^^^domain</con:value></con:property><con:property><con:name>pid5</con:name><con:value>Younger^Gallow^^^</con:value></con:property><con:property><con:name>pid7</con:name><con:value>19990627</con:value></con:property><con:property><con:name>pid8</con:name><con:value>M</con:value></con:property><con:property><con:name>pid11</con:name><con:value>1111 Main Street^^Kingsport^TN^37662^US</con:value></con:property><con:property><con:name>typeCode</con:name><con:value>34133-9</con:value></con:property><con:property><con:name>typeCodeScheme</con:name><con:value>2.16.840.1.113883.6.1</con:value></con:property><con:property><con:name>typeCodeDisplayName</con:name><con:value>SUMMARIZATION OF EPISODE NOTE</con:value></con:property><con:property><con:name>documentUri</con:name><con:value>1.123401.33333</con:value></con:property><con:property><con:name>rawData</con:name><con:value></con:value></con:property><con:property><con:name>eventCode</con:name><con:value>ECG</con:value></con:property><con:property><con:name>eventCodeSchema</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>eventCodeDisplayName</con:name><con:value>Electrocardiography</con:value></con:property><con:property><con:name>eventCodeScheme</con:name><con:value>DCM</con:value></con:property><con:property><con:name>submissionSetDate</con:name><con:value>2010.06.07.20.48.14</con:value></con:property><con:property><con:name>replacesDocumentUniqueId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="NhincProxy Document Query" searchProperties="true" id="7ea3c9e8-d5c7-4d03-8b6f-62381088fbde"><con:settings/><con:testStep type="groovy" name="Generate patient ID for Doc Query"><con:settings/><con:config><script>def localAA = context.findProperty('LocalAA')
def dqPatientID = context.findProperty('DQPatientID')

context.testCase.setPropertyValue('FullPatientID', "'${dqPatientID}^^^&amp;amp;${localAA}&amp;amp;ISO'");
</script></con:config></con:testStep><con:testStep type="request" name="Document Query"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>NhincProxyDocQueryBindingSoap11</con:interface><con:operation>RespondingGateway_CrossGatewayQuery</con:operation><con:request name="Document Query"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint-DocQuery}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:gov:hhs:fha:nhinc:common:nhinccommonproxy" xmlns:urn1="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:urn2="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:urn3="urn:gov:hhs:fha:nhinc:common:nhinccommon" xmlns:add="http://schemas.xmlsoap.org/ws/2004/08/addressing">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:RespondingGateway_CrossGatewayQueryRequest>
         <urn1:AdhocQueryRequest federated="false" startIndex="0" maxResults="-1">
            <urn1:ResponseOption returnType="LeafClass" returnComposedObjects="true"/>
            <urn2:AdhocQuery home="urn:oid:1.1" id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
               <urn2:Slot name="$XDSDocumentEntryStatus">
                  <urn2:ValueList>
                     <urn2:Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
               <urn2:Slot name="$XDSDocumentEntryPatientId">
                  <urn2:ValueList>
                     <urn2:Value>'D123401^^^&amp;2.16.840.1.113883.3.333&amp;ISO'</urn2:Value>
                  </urn2:ValueList>
               </urn2:Slot>
            </urn2:AdhocQuery>
         </urn1:AdhocQueryRequest>
         <urn:assertion>
            <urn3:address xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>AddrCity</urn3:city>
               <urn3:country>AddrCountry</urn3:country>
               <urn3:state>AddrState</urn3:state>
               <urn3:streetAddress>AddrStreet</urn3:streetAddress>
               <urn3:zipCode>AddrZip</urn3:zipCode>
            </urn3:address>
            <urn3:dateOfBirth xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">06/04/1959 05:21:00</urn3:dateOfBirth>
            <urn3:explanationNonClaimantSignature xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">Electronic</urn3:explanationNonClaimantSignature>
            <urn3:haveSecondWitnessSignature xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">false</urn3:haveSecondWitnessSignature>
            <urn3:haveSignature xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">false</urn3:haveSignature>
            <urn3:haveWitnessSignature xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">false</urn3:haveWitnessSignature>
            <urn3:homeCommunity xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:description>${#Project#RemoteHCDescription}</urn3:description>
               <urn3:homeCommunityId>${#Project#RemoteHCID}</urn3:homeCommunityId>
               <urn3:name>${#Project#RemoteHCDescription}</urn3:name>
            </urn3:homeCommunity>
            <urn3:personName xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sandy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
               <urn3:fullName>Sandy S. Smith</urn3:fullName>
            </urn3:personName>
            <urn3:phoneNumber xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5436</urn3:extension>
               <urn3:localNumber>253-6849</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:phoneNumber>
            <urn3:secondWitnessAddress xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:addressType>
                  <urn3:code>AddrCode</urn3:code>
                  <urn3:codeSystem>AddrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>AddrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>AddrCode</urn3:displayName>
                  <urn3:originalText>AddrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Addr2City</urn3:city>
               <urn3:country>Addr2Country</urn3:country>
               <urn3:state>Addr2State</urn3:state>
               <urn3:streetAddress>Addr2Street</urn3:streetAddress>
               <urn3:zipCode>Addr2Zip</urn3:zipCode>
            </urn3:secondWitnessAddress>
            <urn3:secondWitnessName xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Sammy</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>s</urn3:secondNameOrInitials>
               <urn3:fullName>Sammy S. Smith</urn3:fullName>
            </urn3:secondWitnessName>
            <urn3:secondWitnessPhone xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>5424</urn3:extension>
               <urn3:localNumber>542-6823</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:secondWitnessPhone>
            <urn3:SSN xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">253-98-7546</urn3:SSN>
            <urn3:uniquePatientId xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">500000000^^^&amp;1.1&amp;ISO</urn3:uniquePatientId>
            <urn3:witnessAddress xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:addressType>
                  <urn3:code>addrCode</urn3:code>
                  <urn3:codeSystem>addrCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>addrCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>addrCode</urn3:displayName>
                  <urn3:originalText>addrCode</urn3:originalText>
               </urn3:addressType>
               <urn3:city>Burnell</urn3:city>
               <urn3:country>USA</urn3:country>
               <urn3:state>FL</urn3:state>
               <urn3:streetAddress>825 North</urn3:streetAddress>
               <urn3:zipCode>32184</urn3:zipCode>
            </urn3:witnessAddress>
            <urn3:witnessName xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:familyName>Smith</urn3:familyName>
               <urn3:givenName>Scott</urn3:givenName>
               <urn3:nameType>
                  <urn3:code>nameCode</urn3:code>
                  <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>nameCode</urn3:displayName>
                  <urn3:originalText>nameCode</urn3:originalText>
               </urn3:nameType>
               <urn3:secondNameOrInitials>S.</urn3:secondNameOrInitials>
               <urn3:fullName>Scott S. Smith</urn3:fullName>
            </urn3:witnessName>
            <urn3:witnessPhone xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:areaCode>321</urn3:areaCode>
               <urn3:countryCode>1</urn3:countryCode>
               <urn3:extension>8432</urn3:extension>
               <urn3:localNumber>985-2239</urn3:localNumber>
               <urn3:phoneNumberType>
                  <urn3:code>phoneCode</urn3:code>
                  <urn3:codeSystem>phoneCodeSyst</urn3:codeSystem>
                  <urn3:codeSystemName>phoneCodeSystName</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>phoneCode</urn3:displayName>
                  <urn3:originalText>phoneCode</urn3:originalText>
               </urn3:phoneNumberType>
            </urn3:witnessPhone>
            <urn3:userInfo xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:personName>
                  <urn3:familyName>Skagerberg</urn3:familyName>
                  <urn3:givenName>Karl</urn3:givenName>
                  <urn3:nameType>
                     <urn3:code>nameCode</urn3:code>
                     <urn3:codeSystem>nameCodeSyst</urn3:codeSystem>
                     <urn3:codeSystemName>nameCodeSystName</urn3:codeSystemName>
                     <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                     <urn3:displayName>nameCode</urn3:displayName>
                     <urn3:originalText>nameCode</urn3:originalText>
                  </urn3:nameType>
                  <urn3:secondNameOrInitials>S</urn3:secondNameOrInitials>
                  <urn3:fullName>Kasrl S. Skagerberg</urn3:fullName>
               </urn3:personName>
               <urn3:userName>kskagerb</urn3:userName>
               <urn3:org>
                  <urn3:description>${#Project#RemoteHCDescription}</urn3:description>
                  <urn3:homeCommunityId>${#Project#RemoteHCID}</urn3:homeCommunityId>
                  <urn3:name>${#Project#RemoteHCDescription}</urn3:name>
               </urn3:org>
               <urn3:roleCoded>
                  <urn3:code>307969004</urn3:code>
                  <urn3:codeSystem>2.16.840.1.113883.6.96</urn3:codeSystem>
                  <urn3:codeSystemName>SNOMED_CT</urn3:codeSystemName>
                  <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
                  <urn3:displayName>Public Health</urn3:displayName>
                  <urn3:originalText>Public Health</urn3:originalText>
               </urn3:roleCoded>
            </urn3:userInfo>
            <urn3:authorized xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">true</urn3:authorized>
            <urn3:purposeOfDisclosureCoded xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:code>PUBLICHEALTH</urn3:code>
               <urn3:codeSystem>2.16.840.1.113883.3.18.7.1</urn3:codeSystem>
               <urn3:codeSystemName>nhin-purpose</urn3:codeSystemName>
               <urn3:codeSystemVersion>1.0</urn3:codeSystemVersion>
               <urn3:displayName>Use or disclosure of Psychotherapy Notes</urn3:displayName>
               <urn3:originalText>Use or disclosure of Psychotherapy Notes</urn3:originalText>
            </urn3:purposeOfDisclosureCoded>
            <urn3:samlAuthnStatement xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:authInstant>2009-04-16T13:15:39Z</urn3:authInstant>
               <urn3:sessionIndex>987</urn3:sessionIndex>
               <urn3:authContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</urn3:authContextClassRef>
               <urn3:subjectLocalityAddress>158.147.185.168</urn3:subjectLocalityAddress>
               <urn3:subjectLocalityDNSName>cs.myharris.net</urn3:subjectLocalityDNSName>
            </urn3:samlAuthnStatement>
            <urn3:samlAuthzDecisionStatement xmlns:urn1="urn:gov:hhs:fha:nhinc:common:nhinccommon">
               <urn3:decision>Permit</urn3:decision>
               <urn3:resource>https://158.147.185.168:8181/SamlReceiveService/SamlProcessWS</urn3:resource>
               <urn3:action>TestSaml</urn3:action>
               <urn3:evidence>
                  <urn3:assertion>
                     <urn3:id>40df7c0a-ff3e-4b26-baeb-f2910f6d05a9</urn3:id>
                     <urn3:issueInstant>2009-04-16T13:10:39.093Z</urn3:issueInstant>
                     <urn3:version>2.0</urn3:version>
                     <urn3:issuerFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</urn3:issuerFormat>
                     <urn3:issuer>CN=SAML User,OU=Harris,O=HITS,L=Melbourne,ST=FL,C=US</urn3:issuer>
                     <urn3:conditions>
                        <urn3:notBefore>2009-04-16T13:10:39.093Z</urn3:notBefore>
                        <urn3:notOnOrAfter>2009-12-31T12:00:00.000Z</urn3:notOnOrAfter>
                     </urn3:conditions>
                     <urn3:accessConsentPolicy>Claim-Ref-1234</urn3:accessConsentPolicy>
                     <urn3:instanceAccessConsentPolicy>Claim-Instance-1</urn3:instanceAccessConsentPolicy>
                  </urn3:assertion>
               </urn3:evidence>
            </urn3:samlAuthzDecisionStatement>
         </urn:assertion>
         <urn:nhinTargetSystem>
            <urn3:homeCommunity>
               <urn3:description>${#Project#LocalHCDescription}</urn3:description>
               <urn3:homeCommunityId>${#Project#LocalHCID}</urn3:homeCommunityId>
               <urn3:name>${#Project#LocalHCDescription}</urn3:name>
            </urn3:homeCommunity>
         </urn:nhinTargetSystem>
      </urn:RespondingGateway_CrossGatewayQueryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Fault Assertion"/><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="URI Match" disabled="true"><con:configuration><path>declare namespace ns3='urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0';
declare namespace ns1='urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0';
//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:Slot[11]/ns3:ValueList[1]/ns3:Value[1]</path><content>${Test Case Properties#DQDocID}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="DocID Match"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context );
def holder = groovyUtils.getXmlHolder( messageExchange.responseContent );
holder.namespaces["ns1"] = "urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0";
holder.namespaces["ns3"] = "urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0";

def documentID = context.findProperty('DQDocID')
def msgDocID = holder["//ns1:AdhocQueryResponse[1]/ns3:RegistryObjectList[1]/ns3:ExtrinsicObject[1]/ns3:ExternalIdentifier[@identificationScheme='urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab']/@value"];
assert (documentID == msgDocID)
log.info documentID + " " + msgDocID</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="urn:gov:hhs:fha:nhinc:nhincproxydocquery/NhincProxyDocQueryPortType/RespondingGateway_CrossGatewayQueryRequest" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>startDate</con:name><con:value>2010-06-07T17:53:21Z</con:value></con:property><con:property><con:name>endDate</con:name><con:value>2010-06-07T18:03:21Z</con:value></con:property><con:property><con:name>sigDate</con:name><con:value>06/07/2010 17:53:21</con:value></con:property><con:property><con:name>expireDate</con:name><con:value>2010-07-07T00:00:00Z</con:value></con:property><con:property><con:name>FullPatientID</con:name><con:value>'D123401^^^&amp;amp;ORANGE5&amp;amp;ISO'</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Adapter Document Query" searchProperties="true" id="d543289e-d0ee-4e24-9fc3-63cc0b52583c"><con:settings/><con:testStep type="request" name="Doc Query"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>xdsregistrybSoap12Binding</con:interface><con:operation>AdhocQueryRequest</con:operation><con:request name="Doc Query" useWsAddressing="true"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint-DocRegistry}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://www.w3.org/2003/05/soap-envelope" xmlns:wsa="http://www.w3.org/2005/08/addressing">
   <soapenv:Header>
      <wsa:To>http://localhost:9080/axis2/services/xdsregistryb</wsa:To>
      <wsa:MessageID>urn:uuid:F347E1483350B8D6511198803333967</wsa:MessageID>
      <wsa:Action>urn:ihe:iti:2007:RegistryStoredQuery</wsa:Action>
   </soapenv:Header>
   <soapenv:Body>
      <query:AdhocQueryRequest xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" xmlns="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0">
         <query:ResponseOption returnComposedObjects="true" returnType="LeafClass"/>
         <AdhocQuery id="urn:uuid:14d4debf-8f97-4251-9a74-a90016b0af0d">
            <Slot name="$XDSDocumentEntryStatus">
               <ValueList>
                  <Value>('urn:oasis:names:tc:ebxml-regrep:StatusType:Approved')</Value>
               </ValueList>
            </Slot>
            <Slot name="$XDSDocumentEntryPatientId">
               <ValueList>
                  <Value>'D123401^^^&amp;2.16.840.1.113883.3.333&amp;ISO'</Value>
               </ValueList>
            </Slot>
         </AdhocQuery>
      </query:AdhocQueryRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" addDefaultAction="false" action="urn:ihe:iti:2007:RegistryStoredQuery" generateMessageId="true"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Register Patient"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Register Patient" searchProperties="true" id="ed490788-1259-45f6-b907-cc1bded7bce8"><con:settings/><con:testStep type="groovy" name="Find Metadata Docs"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def metadataPath = groovyUtils.projectPath + "/" + context.findProperty("metadataDir")

def dir = new File(metadataPath)
def fileNumber = 0;

dir.eachFile{file->
  fileNumber++
  log.info fileNumber + ": " + file
  context.testCase.setPropertyValue("File" + fileNumber, file.toString());
}
context.testCase.setPropertyValue("TotalFiles", fileNumber.toString());
context.testCase.setPropertyValue("CurrentFile", "0");
</script></con:config></con:testStep><con:testStep type="groovy" name="Read Metadata"><con:settings/><con:config><script>import java.io.*;

static String ReadFile(String FileName,context,log) {
	log.info("read file: " + FileName);
	File sourceFile = new File(FileName);  
	String filecontents = null;
	if(sourceFile.exists()) 
	{
		log.info("file exists");
		StringBuilder sb = new StringBuilder();

		BufferedReader input =  new BufferedReader(new FileReader(sourceFile));
		try {
			String line = null; //not declared within while loop
			/*
			* readLine is a bit quirky :
			* it returns the content of a line MINUS the newline.
			* it returns null only for the END of the stream.
			* it returns an empty String if two newlines appear in a row.
			*/
			while (( line = input.readLine()) != null){
			sb.append(line);
			sb.append(System.getProperty("line.separator"));
			}
		}
		finally {
			input.close();
		}
		filecontents=sb.toString();
	} 
	else {
		log.info("unable to find source file " + FileName);
	}   
	return filecontents;
}

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def totalFiles = context.findProperty("TotalFiles")
def currentFile = context.findProperty("CurrentFile")
currentFile++
def currentFileString = currentFile.toString()
def fileName = context.findProperty("File" + currentFileString)
def fileContents = ReadFile(fileName, context, log)
holder = groovyUtils.getXmlHolder( fileContents )

def nameInfo = holder.getNodeValue( "//Document/pid5" ) + "^^|"
log.info nameInfo
def nameList = nameInfo.split('\\^')

def lastName = nameList[0]
context.testCase.setPropertyValue("lastName", lastName)

def firstName = nameList[1]
context.testCase.setPropertyValue("firstName", firstName)

def middleName = nameList[2]
context.testCase.setPropertyValue("middleName", middleName)

def birthDate = holder.getNodeValue( "//Document/pid7" )
context.testCase.setPropertyValue("birthDate", birthDate)

def gender = holder.getNodeValue( "//Document/pid8" )
context.testCase.setPropertyValue("gender", gender)

def addressInfo = holder.getNodeValue( "//Document/pid11" )
def addressList = addressInfo.split('\\^')

def street1 = addressList[0]
context.testCase.setPropertyValue("street1", street1)

def street2 = addressList[1]
context.testCase.setPropertyValue("street2", street2)

def city = addressList[2]
context.testCase.setPropertyValue("city", city)

def state = addressList[3]
context.testCase.setPropertyValue("state", state)

def zipCode = addressList[4]
context.testCase.setPropertyValue("zipCode", zipCode)

def country = addressList[5]
context.testCase.setPropertyValue("country", country)

def intendedRecipientOrganization = holder.getNodeValue( "//Document/intendedRecipientOrganization" )
context.testCase.setPropertyValue("intendedRecipientOrganization", intendedRecipientOrganization)

def patientId = holder.getNodeValue( "//Document/patientId" )
context.testCase.setPropertyValue("patientId", patientId)

Date submissionSetDate = new Date()
def dfSubmissionSet = "yyyy.MM.dd.HH.mm.ss"
context.testCase.setPropertyValue("submissionSetDate", submissionSetDate.format(dfSubmissionSet))
 
context.testCase.setPropertyValue("CurrentFile", currentFileString)
</script></con:config></con:testStep><con:testStep type="request" name="Register Patient"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>xdsregistrybSoap12Binding</con:interface><con:operation>DocumentRegistry_PRPA_IN201301UV02</con:operation><con:request name="Register Patient"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint-DocRegistry}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:ser="http://serviceimpl.registry.xds.services.hieos.vangent.com">
   <soap:Header/>
   <soap:Body>
      <ser:DocumentRegistry_PRPA_IN201301UV02>
         <ser:DocumentRegistry_PRPA_IN201301UV02 xsi:schemaLocation="urn:hl7-org:v3 ../../schema/HL7V3/NE2008/multicacheschemas/PRPA_IN201301UV02.xsd" ITSVersion="XML_1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:hl7-org:v3">
            <id root="22a0f9e0-4454-11dc-a6be-3603d6866807"/>
            <creationTime value="20070803130624"/>
            <interactionId root="2.16.840.1.113883.1.6" extension="PRPA_IN201301UV02"/>
            <processingCode code="P"/>
            <processingModeCode code="R"/>
            <acceptAckCode code="AL"/>
            <receiver typeCode="RCV">
               <device classCode="DEV" determinerCode="INSTANCE">
                  <id root="${#TestCase#intendedRecipientOrganization}"/>
                  <telecom value="https://example.org/PatientFeed"/>
               </device>
            </receiver>
            <sender typeCode="SND">
               <device classCode="DEV" determinerCode="INSTANCE">
                  <id root="${#TestCase#intendedRecipientOrganization}"/>
               </device>
            </sender>
            <controlActProcess classCode="CACT" moodCode="EVN">
               <subject typeCode="SUBJ">
                  <registrationEvent classCode="REG" moodCode="EVN">
                     <id nullFlavor="NA"/>
                     <statusCode code="active"/>
                     <subject1 typeCode="SBJ">
                        <patient classCode="PAT">
                           <id root="${#TestCase#intendedRecipientOrganization}" extension="${#TestCase#patientId}"/>
                           <statusCode code="active"/>
                           <patientPerson>
                              <name>
                                 <given>${#TestCase#firstName}</given>
                                 <family>${#TestCase#lastName}</family>
                              </name>
                              <administrativeGenderCode code="${#TestCase#gender}"/>
                              <birthTime value="19570323"/>
                              <addr>
                                 <streetAddressLine>${#TestCase#street1}</streetAddressLine>
                                 <city>${#TestCase#city}</city>
                                 <state>${#TestCase#state}</state>
                              </addr>
                           </patientPerson>
                           <providerOrganization classCode="ORG" determinerCode="INSTANCE">
                              <id root="${#TestCase#intendedRecipientOrganization}"/>
                              <name>${#TestCase#intendedRecipientOrganization}</name>
<!--                             <contactParty classCode="CON">
                                 <telecom value="tel:+1-342-555-8394"/>
                              </contactParty>
-->
                           </providerOrganization>
                        </patient>
                     </subject1>
                     <custodian typeCode="CST">
                        <assignedEntity classCode="ASSIGNED">
                           <id root="${#TestCase#intendedRecipientOrganization}"/>
                           <assignedOrganization classCode="ORG" determinerCode="INSTANCE">
                              <name>${#TestCase#intendedRecipientOrganization}</name>
                           </assignedOrganization>
                        </assignedEntity>
                     </custodian>
                  </registrationEvent>
               </subject>
            </controlActProcess>
         </ser:DocumentRegistry_PRPA_IN201301UV02>
      </ser:DocumentRegistry_PRPA_IN201301UV02>
   </soap:Body>
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="urn:DocumentRegistry_PRPA_IN201301UV02" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Loop"><con:settings/><con:config><script>def totalFiles = context.findProperty("TotalFiles")
def currentFile = context.findProperty("CurrentFile")

if (currentFile != totalFiles) testRunner.gotoStepByName( "Read Metadata" );</script></con:config></con:testStep><con:properties><con:property><con:name>File1</con:name><con:value>C:\Projects\NHINC\Current\Product\SoapUI_Test\ManualSuite\metadataFiles\younger c32 doc Testgateway1v2.xml</con:value></con:property><con:property><con:name>TotalFiles</con:name><con:value>1</con:value></con:property><con:property><con:name>CurrentFile</con:name><con:value>1</con:value></con:property><con:property><con:name>lastName</con:name><con:value>Younger</con:value></con:property><con:property><con:name>firstName</con:name><con:value>Gallow</con:value></con:property><con:property><con:name>middleName</con:name><con:value/></con:property><con:property><con:name>birthDate</con:name><con:value>19990627</con:value></con:property><con:property><con:name>gender</con:name><con:value>M</con:value></con:property><con:property><con:name>submissionSetDate</con:name><con:value>2010.06.02.18.16.49</con:value></con:property><con:property><con:name>street1</con:name><con:value>1111 Main Street</con:value></con:property><con:property><con:name>street2</con:name><con:value/></con:property><con:property><con:name>city</con:name><con:value>Kingsport</con:value></con:property><con:property><con:name>state</con:name><con:value>TN</con:value></con:property><con:property><con:name>zipCode</con:name><con:value>37662</con:value></con:property><con:property><con:name>country</con:name><con:value>US</con:value></con:property><con:property><con:name>intendedRecipientOrganization</con:name><con:value>2.16.840.1.113883.3.333</con:value></con:property><con:property><con:name>patientId</con:name><con:value>D123401</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>DBPass</con:name><con:value>nhincpass</con:value></con:property><con:property><con:name>Endpoint-DocRegistry</con:name><con:value>http://172.16.50.45:9080/axis2/services/xdsregistryb</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>connectorange5.fedsconnect.org</con:value></con:property><con:property><con:name>EventCodeTable</con:name><con:value>eventcode</con:value></con:property><con:property><con:name>DBPort</con:name><con:value>3306</con:value></con:property><con:property><con:name>Endpoint-DocRepository</con:name><con:value>http://172.16.50.45:9080/axis2/services/xdsrepositoryb</con:value></con:property><con:property><con:name>DocumentTable</con:name><con:value>document</con:value></con:property><con:property><con:name>DBUser</con:name><con:value>nhincuser</con:value></con:property><con:property><con:name>DocRepositoryDB</con:name><con:value>docrepository</con:value></con:property><con:property><con:name>EventVal</con:name><con:value>'ProvideAndRegisterTestEventCodeValue'</con:value></con:property><con:property><con:name>EventCol</con:name><con:value>EventCode</con:value></con:property><con:property><con:name>DocVal</con:name><con:value>'ProvideAndRegisterTestDocument'</con:value></con:property><con:property><con:name>DocCol</con:name><con:value>DocumentTitle</con:value></con:property><con:property><con:name>DocVal1</con:name><con:value>'DocQueryTestDocument'</con:value></con:property><con:property><con:name>EventVal1</con:name><con:value>'DocQueryTestEventCodeValue'</con:value></con:property><con:property><con:name>metadataDir</con:name><con:value>metadataFiles</con:value></con:property><con:property><con:name>DQDocID</con:name><con:value>1.123401.11111.3</con:value></con:property><con:property><con:name>DQPatientID</con:name><con:value>D123401</con:value></con:property><con:property><con:name>DRRepoID</con:name><con:value>1</con:value></con:property><con:property><con:name>Endpoint-DocRetrieve</con:name><con:value>http://connectorange5.fedsconnect.org:8080/CONNECTMsgProxyWeb/NhincProxyDocRetrieve</con:value></con:property><con:property><con:name>DRDocID</con:name><con:value>1.123401.11111.3</con:value></con:property><con:property><con:name>Endpoint-DocQuery</con:name><con:value>http://connectorange5.fedsconnect.org:8080/CONNECTAdapter/NhincProxyDocQuery</con:value></con:property><con:property><con:name>RemoteAA</con:name><con:value>ORANGE5</con:value></con:property><con:property><con:name>LocalAA</con:name><con:value>ORANGE5</con:value></con:property><con:property><con:name>RemoteHCID</con:name><con:value>ORANGE5</con:value></con:property><con:property><con:name>RemoteHCDescription</con:name><con:value>connectorange5.fedsconnect.org</con:value></con:property><con:property><con:name>LocalHCID</con:name><con:value>ORANGE5</con:value></con:property><con:property><con:name>LocalHCDescription</con:name><con:value>connectorange5.fedsconnect.org</con:value></con:property></con:properties><con:afterLoadScript>def propertiesFilename = project.path[0..(project.path.size()-4)] + 'properties'
def propertiesFile = new File(propertiesFilename)
if (propertiesFile.exists()) {
	def props = new Properties()
	props.load(new FileReader(propertiesFile))
	props.each { key, value ->
	    project.setPropertyValue(key, value)
	}
}


TimeZone.setDefault(TimeZone.getTimeZone("UTC"))
def testRunListener = [
  afterRun: { testRunner, runContext -> },
  afterStep: { testRunner, runContext, result -> },
  beforeStep: { testRunner, runContext -> },
  beforeStep: { testRunner, runContext, testStep -> },
  beforeRun: { testRunner, runContext -> 
    use (org.codehaus.groovy.runtime.TimeCategory) {
      def startDate = 5.minutes.ago
      def endDate = 5.minutes.from.now
      def expireDate = 30.days.from.now
      def submissionSetDate = now
      log.info submissionSetDate
      def df = "yyyy-MM-dd'T'HH:mm:ss'Z'"
      def dfSig = "MM/dd/yyyy' 'HH:mm:ss"
      def dfSubmissionSet = "yyyy.MM.dd.HH.mm.ss"
      
      runContext.testCase.setPropertyValue("startDate", startDate.format(df))
      runContext.testCase.setPropertyValue("endDate", endDate.format(df))
      runContext.testCase.setPropertyValue("sigDate", startDate.format(dfSig))
      runContext.testCase.setPropertyValue("expireDate", expireDate.format(df))
      runContext.testCase.setPropertyValue("submissionSetDate", submissionSetDate.format(dfSubmissionSet))
    }
  }   
] as com.eviware.soapui.model.testsuite.TestRunListener

project.testSuiteList*.testCaseList.flatten()*.addTestRunListener(testRunListener)



com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.findProperty = { propertyName ->
    return delegate.getProperty(propertyName) ?:
                delegate.testCase.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.getPropertyValue(propertyName) ?:
                delegate.testCase.testSuite.project.getPropertyValue(propertyName)
}

com.eviware.soapui.impl.wsdl.testcase.WsdlTestRunContext.metaClass.withSql = { dbOrPropertyName, block ->
  def dbName = delegate.findProperty(dbOrPropertyName) ?: dbOrPropertyName
  def host = delegate.findProperty('DBHost')
  def port = delegate.findProperty('DBPort')
  def user = delegate.findProperty('DBUser')
  def pass = delegate.findProperty('DBPass')
  
  def connectString = "jdbc:mysql://${host}:${port}/${dbName}"
  def sql = groovy.sql.Sql.newInstance(connectString, user, pass, "com.mysql.jdbc.Driver");
  try {
     block(sql)
  } finally {
    sql.close()
  }
}
</con:afterLoadScript><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>