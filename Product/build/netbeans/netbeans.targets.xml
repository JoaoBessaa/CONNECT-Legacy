<?xml version="1.0" encoding="UTF-8"?>
<project name="netbeans.targets" xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3" xmlns:jaxrpc="http://www.netbeans.org/ns/j2se-project/jax-rpc" xmlns:webproject1="http://www.netbeans.org/ns/web-project/1" xmlns:webproject2="http://www.netbeans.org/ns/web-project/2" xmlns:webproject3="http://www.netbeans.org/ns/web-project/3" basedir="." default="debug">

	<import file="../compile/compile.targets.xml" />
	<import file="../ivy/ivy.targets.xml" />
	<import file="../junit/junit.targets.xml" />
	<import file="../common.build.xml" />
	<if>
		<exists path="${project.dir}/nbproject/jaxws-build.xml" />
		<then>
			<import file="${project.dir}/nbproject/jaxws-build.xml" />
		</then>
	</if>

	<target name="-pre-init">
		<!-- Empty placeholder for easier customization. -->
		<!-- You can override this target in the ../build.xml file. -->
	</target>
	<target name="-init-private" depends="-pre-init">
		<property file="nbproject/private/config.properties" />
		<property file="nbproject/private/configs/${config}.properties" />
		<property file="nbproject/private/private.properties" />
	</target>
	<target name="-init-user" depends="-pre-init,-init-private">
		<property file="${user.properties.file}" />
		<!-- The two properties below are usually overridden -->
		<!-- by the active platform. Just a fallback. -->
		<property name="default.javac.source" value="1.4" />
		<property name="default.javac.target" value="1.4" />
	</target>
	<target name="-init-project" depends="-pre-init,-init-private,-init-user">
		<property file="nbproject/configs/${config}.properties" />
		<property file="nbproject/project.properties" />
	</target>

	<target depends="init" name="-init-cos" unless="deploy.on.save">
		<condition property="deploy.on.save" value="true">
			<istrue value="${j2ee.deploy.on.save}" />
		</condition>
	</target>

	<target name="-do-init" depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property">
		<available file="${manifest.file}" property="manifest.available" />
		<condition property="manifest.available+main.class">
			<and>
				<isset property="manifest.available" />
				<isset property="main.class" />
				<not>
					<equals arg1="${main.class}" arg2="" trim="true" />
				</not>
			</and>
		</condition>
		<condition property="manifest.available+main.class+mkdist.available">
			<and>
				<istrue value="${manifest.available+main.class}" />
				<isset property="libs.CopyLibs.classpath" />
			</and>
		</condition>
		<condition property="have.tests">
			<or>
				<available file="${test.java.dir}" />
				<available file="${test.resources.dir}" />
			</or>
		</condition>
		<condition property="have.sources">
			<or>
				<available file="${src.java.dir}" />
				<available file="${src.resources.dir}" />
			</or>
		</condition>
		<condition property="netbeans.home+have.tests">
			<and>
				<isset property="netbeans.home" />
				<isset property="have.tests" />
			</and>
		</condition>
		<condition property="no.javadoc.preview">
			<and>
				<isset property="javadoc.preview" />
				<isfalse value="${javadoc.preview}" />
			</and>
		</condition>
		<property name="run.jvmargs" value="" />
		<property name="javac.compilerargs" value="" />
		<property name="work.dir" value="${basedir}" />
		<condition property="no.deps">
			<and>
				<istrue value="${no.dependencies}" />
			</and>
		</condition>
		<property name="javac.debug" value="true" />
		<property name="javadoc.preview" value="true" />
		<property name="application.args" value="" />
		<property name="source.encoding" value="${file.encoding}" />
		<condition property="javadoc.encoding.used" value="${javadoc.encoding}">
			<and>
				<isset property="javadoc.encoding" />
				<not>
					<equals arg1="${javadoc.encoding}" arg2="" />
				</not>
			</and>
		</condition>
		<property name="javadoc.encoding.used" value="${source.encoding}" />
		<property name="includes" value="**" />
		<property name="excludes" value="" />
		<property name="do.depend" value="false" />
		<condition property="do.depend.true">
			<istrue value="${do.depend}" />
		</condition>
		<condition else="" property="javac.compilerargs.jaxws" value="-Djava.endorsed.dirs='${jaxws.endorsed.dir}'">
			<and>
				<isset property="jaxws.endorsed.dir" />
				<available file="nbproject/jaxws-build.xml" />
			</and>
		</condition>
	</target>
	<target name="-post-init">
		<!-- Empty placeholder for easier customization. -->
		<!-- You can override this target in the ../build.xml file. -->
	</target>
	<target name="-init-check" depends="-pre-init,-init-private,-init-user,-init-project,-do-init">
		<fail unless="src.java.dir">Must set src.java.dir</fail>
		<fail unless="src.resources.dir">Must set src.resources.dir</fail>
		<fail unless="test.java.dir">Must set test.java.dir</fail>
		<fail unless="test.resources.dir">Must set test.resources.dir</fail>
		<fail unless="build.dir">Must set build.dir</fail>
		<fail unless="dist.dir">Must set dist.dir</fail>
		<fail unless="build.classes.dir">Must set build.classes.dir</fail>
		<fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
		<fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>
		<fail unless="build.test.results.dir">Must set build.test.results.dir</fail>
		<fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
		<!--<fail unless="dist.jar">Must set dist.jar</fail>
        <fail unless="dist.war">Must set dist.war</fail>
        <fail unless="j2ee.platform.classpath">
The Java EE server classpath is not correctly set up. Your active server type is ${j2ee.server.type}.
Either open the project in the IDE and assign the server or setup the server classpath manually.
For example like this:
   ant -Duser.properties.file=&lt;path_to_property_file&gt; (where you put the property "j2ee.platform.classpath" in a .properties file)
or ant -Dj2ee.platform.classpath=&lt;server_classpath&gt; (where no properties file is used)
                </fail>        
    -->
	</target>
	<target name="-init-macrodef-property">
		<macrodef name="property" uri="http://www.netbeans.org/ns/j2se-project/1">
			<attribute name="name" />
			<attribute name="value" />
			<sequential>
				<property name="@{name}" value="${@{value}}" />
			</sequential>
		</macrodef>
	</target>
	<target name="-init-macrodef-javac">
		<macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">
			<attribute default="${src.java.dir}:${src.resources.dir}" name="srcdir" />
			<attribute default="${build.classes.dir}" name="destdir" />
			<attribute default="${javac.classpath}" name="classpath" />
			<attribute default="${includes}" name="includes" />
			<attribute default="${excludes}" name="excludes" />
			<attribute default="${javac.debug}" name="debug" />
			<attribute default="${empty.dir}" name="sourcepath" />
			<attribute default="${empty.dir}" name="gensrcdir" />
			<element name="customize" optional="true" />
			<sequential>
				<property location="${build.dir}/empty" name="empty.dir" />
				<mkdir dir="${empty.dir}" />
				<javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" excludes="@{excludes}" includeantruntime="false" includes="@{includes}" source="${javac.source}" sourcepath="@{sourcepath}" srcdir="@{srcdir}" target="${javac.target}">
					<src>
						<dirset dir="@{gensrcdir}" erroronmissingdir="false">
							<include name="*" />
						</dirset>
					</src>
					<classpath>
						<path path="@{classpath}" />
					</classpath>
					<compilerarg line="${javac.compilerargs} ${javac.compilerargs.jaxws}" />
					<customize />
				</javac>
			</sequential>
		</macrodef>
		<macrodef name="depend" uri="http://www.netbeans.org/ns/j2se-project/3">
			<attribute default="${src.java.dir}:${src.resources.dir}" name="srcdir" />
			<attribute default="${build.classes.dir}" name="destdir" />
			<attribute default="${javac.classpath}" name="classpath" />
			<sequential>
				<depend cache="${build.dir}/depcache" destdir="@{destdir}" excludes="${excludes}" includes="${includes}" srcdir="@{srcdir}">
					<classpath>
						<path path="@{classpath}" />
					</classpath>
				</depend>
			</sequential>
		</macrodef>
		<macrodef name="force-recompile" uri="http://www.netbeans.org/ns/j2se-project/3">
			<attribute default="${build.classes.dir}" name="destdir" />
			<sequential>
				<fail unless="javac.includes">Must set javac.includes</fail>
				<pathconvert pathsep="," property="javac.includes.binary">
					<path>
						<filelist dir="@{destdir}" files="${javac.includes}" />
					</path>
					<globmapper from="*.java" to="*.class" />
				</pathconvert>
				<delete>
					<files includes="${javac.includes.binary}" />
				</delete>
			</sequential>
		</macrodef>
	</target>
	<target name="-init-macrodef-junit">
		<macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">
			<attribute default="${includes}" name="includes" />
			<attribute default="${excludes}" name="excludes" />
			<attribute default="**" name="testincludes" />
			<sequential>
				<junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" showoutput="true">
					<batchtest todir="${build.test.results.dir}">
						<fileset dir="${test.java.dir}" excludes="@{excludes},${excludes}" includes="@{includes}">
							<filename name="@{testincludes}" />
						</fileset>
						<fileset dir="${test.resources.dir}" excludes="@{excludes},${excludes}" includes="@{includes}">
							<filename name="@{testincludes}" />
						</fileset>
					</batchtest>
					<classpath>
						<path path="${run.test.classpath}" />
					</classpath>
					<syspropertyset>
						<propertyref prefix="test-sys-prop." />
						<mapper from="test-sys-prop.*" to="*" type="glob" />
					</syspropertyset>
					<formatter type="brief" usefile="false" />
					<formatter type="xml" />
					<jvmarg line="${run.jvmargs}" />
				</junit>
			</sequential>
		</macrodef>
	</target>
	<target name="-init-macrodef-nbjpda" depends="-init-debug-args">
		<macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/j2se-project/1">
			<attribute default="${main.class}" name="name" />
			<attribute default="${debug.classpath}" name="classpath" />
			<attribute default="" name="stopclassname" />
			<sequential>
				<nbjpdastart addressproperty="jpda.address" name="@{name}" stopclassname="@{stopclassname}" transport="${debug-transport}">
					<classpath>
						<path path="@{classpath}" />
					</classpath>
				</nbjpdastart>
			</sequential>
		</macrodef>
		<macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/j2se-project/1">
			<attribute default="${build.classes.dir}" name="dir" />
			<sequential>
				<nbjpdareload>
					<fileset dir="@{dir}" includes="${fix.classes}">
						<include name="${fix.includes}*.class" />
					</fileset>
				</nbjpdareload>
			</sequential>
		</macrodef>
	</target>
	<target name="-init-debug-args">
		<property name="version-output" value="java version &quot;${ant.java.version}" />
		<condition property="have-jdk-older-than-1.4">
			<or>
				<contains string="${version-output}" substring="java version &quot;1.0" />
				<contains string="${version-output}" substring="java version &quot;1.1" />
				<contains string="${version-output}" substring="java version &quot;1.2" />
				<contains string="${version-output}" substring="java version &quot;1.3" />
			</or>
		</condition>
		<condition else="-Xdebug" property="debug-args-line" value="-Xdebug -Xnoagent -Djava.compiler=none">
			<istrue value="${have-jdk-older-than-1.4}" />
		</condition>
		<condition else="dt_socket" property="debug-transport-by-os" value="dt_shmem">
			<os family="windows" />
		</condition>
		<condition else="${debug-transport-by-os}" property="debug-transport" value="${debug.transport}">
			<isset property="debug.transport" />
		</condition>
	</target>
	<target name="-init-macrodef-debug" depends="-init-debug-args">
		<macrodef name="debug" uri="http://www.netbeans.org/ns/j2se-project/3">
			<attribute default="${main.class}" name="classname" />
			<attribute default="${debug.classpath}" name="classpath" />
			<element name="customize" optional="true" />
			<sequential>
				<java classname="@{classname}" dir="${work.dir}" fork="true">
					<jvmarg line="${debug-args-line}" />
					<jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}" />
					<jvmarg value="-Dfile.encoding=${source.encoding}" />
					<redirector errorencoding="${source.encoding}" inputencoding="${source.encoding}" outputencoding="${source.encoding}" />
					<jvmarg line="${run.jvmargs}" />
					<classpath>
						<path path="@{classpath}" />
					</classpath>
					<syspropertyset>
						<propertyref prefix="run-sys-prop." />
						<mapper from="run-sys-prop.*" to="*" type="glob" />
					</syspropertyset>
					<customize />
				</java>
			</sequential>
		</macrodef>
	</target>
	<target name="-init-macrodef-java">
		<macrodef name="java" uri="http://www.netbeans.org/ns/j2se-project/1">
			<attribute default="${main.class}" name="classname" />
			<attribute default="${run.classpath}" name="classpath" />
			<element name="customize" optional="true" />
			<sequential>
				<java classname="@{classname}" dir="${work.dir}" fork="true">
					<jvmarg value="-Dfile.encoding=${source.encoding}" />
					<redirector errorencoding="${source.encoding}" inputencoding="${source.encoding}" outputencoding="${source.encoding}" />
					<jvmarg line="${run.jvmargs}" />
					<classpath>
						<path path="@{classpath}" />
					</classpath>
					<syspropertyset>
						<propertyref prefix="run-sys-prop." />
						<mapper from="run-sys-prop.*" to="*" type="glob" />
					</syspropertyset>
					<customize />
				</java>
			</sequential>
		</macrodef>
	</target>


	<target name="init" depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-junit,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar" />

	<target name="-init-presetdef-jar">
		<presetdef name="jar" uri="http://www.netbeans.org/ns/j2se-project/1">
			<jar compress="${jar.compress}" jarfile="${dist.jar}">
				<j2seproject1:fileset dir="${build.classes.dir}" />
			</jar>
		</presetdef>
	</target>

	<target name="-do-not-recompile">
		<property name="javac.includes.binary" value="" />
	</target>

	<target name="compile-test-single" depends="init,ivy.resolve,-compile.source" />

	<target name="compile-test" depends="init,ivy.resolve,-compile.source" />

	<target name="connect-debugger" if="do.debug.server" unless="is.debugged">
		<nbjpdaconnect address="${jpda.address}" host="${jpda.host}" name="${name}" transport="${jpda.transport}">
			<classpath>
				<path path="${debug.classpath}:${j2ee.platform.classpath}" />
			</classpath>
			<sourcepath>
				<path path="${web.docbase.dir}" />
			</sourcepath>
		</nbjpdaconnect>
	</target>

	<target name="connect-client-debugger" if="do.debug.client">
		<webproject1:nbjsdebugstart webUrl="${client.url}" />
	</target>

	<target name="test-single" depends="init,ivy.resolve,-compile.source,-unittest.run" description="Run single unit test." />

	<!--
      =================
      DEBUGGING SECTION
      =================
  -->
	<target depends="init" if="netbeans.home" name="-debug-start-debugger">
		<j2seproject1:nbjpdastart name="${debug.class}" />
	</target>
	<target depends="init" if="netbeans.home" name="-debug-start-debugger-main-test">
		<j2seproject1:nbjpdastart classpath="${debug.test.classpath}" name="${debug.class}" />
	</target>
	<target depends="init,-compile.source" name="-debug-start-debuggee">
		<j2seproject3:debug>
			<customize>
				<arg line="${application.args}" />
			</customize>
		</j2seproject3:debug>
	</target>
	<target depends="init,-compile.source,-debug-start-debugger,-debug-start-debuggee" description="Debug project in IDE." if="netbeans.home" name="debug" />
	<target depends="init" if="netbeans.home" name="-debug-start-debugger-stepinto">
		<j2seproject1:nbjpdastart stopclassname="${main.class}" />
	</target>
	<target depends="init,-compile.source,-debug-start-debugger-stepinto,-debug-start-debuggee" if="netbeans.home" name="debug-stepinto" />
	<target depends="init,-compile.source" if="netbeans.home" name="-debug-start-debuggee-single">
		<fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
		<j2seproject3:debug classname="${debug.class}" />
	</target>
	<target depends="init,-do-not-recompile,-compile.source,-debug-start-debugger,-debug-start-debuggee-single" if="netbeans.home" name="debug-single" />
	<target depends="init,compile-test-single" if="netbeans.home" name="-debug-start-debuggee-main-test">
		<fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
		<j2seproject3:debug classname="${debug.class}" classpath="${debug.test.classpath}" />
	</target>
	<target depends="init,-do-not-recompile,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test" if="netbeans.home" name="debug-test-with-main" />
	<target depends="init" name="-pre-debug-fix">
		<fail unless="fix.includes">Must set fix.includes</fail>
		<property name="javac.includes" value="${fix.includes}.java" />
	</target>
	<target depends="init,-pre-debug-fix,-compile.source" if="netbeans.home" name="-do-debug-fix">
		<j2seproject1:nbjpdareload />
	</target>
	<target depends="init,-pre-debug-fix,-do-debug-fix" if="netbeans.home" name="debug-fix" />
	<!--
      =======================
      JUNIT DEBUGGING SECTION
      =======================
  -->
	<target depends="init,compile-test" if="have.tests" name="-debug-start-debuggee-test">
		<fail unless="test.class">Must select one file in the IDE or set test.class</fail>
		<property location="${build.test.results.dir}/TEST-${test.class}.xml" name="test.report.file" />
		<delete file="${test.report.file}" />
		<mkdir dir="${build.test.results.dir}" />
		<j2seproject3:debug classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner" classpath="${ant.home}/lib/ant.jar:${ant.home}/lib/ant-junit.jar:${debug.test.classpath}">
			<customize>
				<syspropertyset>
					<propertyref prefix="test-sys-prop." />
					<mapper from="test-sys-prop.*" to="*" type="glob" />
				</syspropertyset>
				<arg value="${test.class}" />
				<arg value="showoutput=true" />
				<arg value="formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter" />
				<arg value="formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,${test.report.file}" />
			</customize>
		</j2seproject3:debug>
	</target>
	
	<target depends="init,compile-test" if="netbeans.home+have.tests" name="-debug-start-debugger-test">
		<j2seproject1:nbjpdastart classpath="${debug.test.classpath}" name="${test.class}" />
	</target>
	
	<target depends="init,-do-not-recompile,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test" name="debug-test" />
	
	<target depends="init,-pre-debug-fix,compile-test-single" if="netbeans.home" name="-do-debug-fix-test">
		<j2seproject1:nbjpdareload dir="${build.test.classes.dir}" />
	</target>

  <target depends="init,-compile.source" if="have.tests" name="-do-compile-test">
      <j2seproject3:javac classpath="${javac.test.classpath}" debug="true" destdir="${build.test.classes.dir}" srcdir="${test.java.dir}:${test.resources.dir}"/>
      <copy todir="${build.test.classes.dir}">
          <fileset dir="${test.java.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
          <fileset dir="${test.resources.dir}" excludes="${build.classes.excludes},${excludes}" includes="${includes}"/>
      </copy>
  </target>

</project>