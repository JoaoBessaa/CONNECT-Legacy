<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Workspace.Subversion.Scripts">

  <property name="Subversion.Console.Version" value="1.6.6.40053"/>
  <property name="Subversion.Console.Installer.File.Name" value="Setup-Subversion-1.6.6.msi"/>
  <property name="Subversion.Console.Installer.File.Path" value="C:\Temp\${Subversion.Console.Installer.File.Name}"/>
  <property name="Subversion.Console.Installer.File.Url" value="${Workspace.Ftp.Url}${Subversion.Console.Installer.File.Name}"/>

  <property name="Subversion.Tortoise.Version" value="1.6.7.18415"/>
  <switch value="${Processor.Type}">
    <case break="True" value="32">
      <property name="Subversion.Tortoise.Installer.File.Name" value="TortoiseSVN-1.6.7.18415-win32-svn-1.6.9.msi"/>
    </case>
    <case break="True" value="64">
      <property name="Subversion.Tortoise.Installer.File.Name" value="TortoiseSVN-1.6.7.18415-x64-svn-1.6.9.msi"/>
    </case>
  </switch>
  <property name="Subversion.Tortoise.Installer.File.Path" value="C:\Temp\${Subversion.Tortoise.Installer.File.Name}"/>
  <property name="Subversion.Tortoise.Installer.File.Url" value="http://downloads.sourceforge.net/tortoisesvn/${Subversion.Tortoise.Installer.File.Name}?download"/>

  <target name="Workspace.RequieredSoftware.Subversion">
    <call target="Workspace.RequieredSoftware.Subversion.Tortoise"/>
    <call target="Workspace.RequieredSoftware.Subversion.Console"/>
  </target>

  <target name="Workspace.RequieredSoftware.Subversion.Console.CheckUpgradeNeeded">
    <property name="Console.IsUpgradeNeeded" value="False"/>
    <if test="${file::exists(SvnBinPath + '\svn.exe')}" >
      <echo message="Installed version of Subversion Console:"/>
      <echo message="${fileversioninfo::get-file-version(fileversioninfo::get-version-info(SvnBinPath + '\svn.exe'))}"/>
      <if test="${version::compare(fileversioninfo::get-file-version(fileversioninfo::get-version-info(SvnBinPath + '\svn.exe')), version::parse(Subversion.Console.Version)) &lt; 0}">
        <property name="Console.IsUpgradeNeeded" value="True"/>
      </if>
    </if>
  </target>

  <target name="Workspace.RequieredSoftware.Subversion.Console">
    <call target="Workspace.RequieredSoftware.Subversion.Console.CheckUpgradeNeeded"/>
    <if test="${not file::exists(SvnBinPath + '\svn.exe') or bool::parse(Console.IsUpgradeNeeded)}" >
      <ask answer="Answer"
           question="It looks like the Subversion command line client is not installed, or an older version than ${Subversion.Console.Version} is installed.  This software is required.  Do you wish to install the software?"
           caption="Proceed Without Required Software?"
           showdialog="true" >
        <options>
          <string value="Install"/>
          <string value="Exit"/>
        </options>
      </ask>
      <ifthenelse test="${Answer == 'Install'}">
        <then>
          <get
              src="${Subversion.Console.Installer.File.Url}"
              dest="${Subversion.Console.Installer.File.Path}"
              unless="${file::exists(Subversion.Console.Installer.File.Path)}"
          />
          <exec
            workingdir="${path::get-directory-name(Subversion.Console.Installer.File.Path)}"
            program="msiexec"
            commandline='/i ${Subversion.Console.Installer.File.Path} /norestart /q INSTALLDIR="${ProgramFiles.Current.Processor.Type.Path}\Subversion"'
            verbose="true"
          />
        </then>
        <elseifs>
          <elseif test="${Answer == 'Exit'}">
            <fail message="Please install Subversion!" />
          </elseif>
        </elseifs>
      </ifthenelse>
    </if>
  </target>

  <target name="Workspace.RequieredSoftware.Subversion.Tortoise.CheckUpgradeNeeded">
    <property name="Tortoise.IsUpgradeNeeded" value="False"/>
    <if test="${file::exists(TortoisePath)}" >
      <echo message="Installed version of Tortoise:"/>
      <echo message="${fileversioninfo::get-file-version(fileversioninfo::get-version-info(TortoisePath))}"/>
      <if test="${version::compare(fileversioninfo::get-file-version(fileversioninfo::get-version-info(TortoisePath)), version::parse(Subversion.Tortoise.Version)) &lt; 0}">
        <property name="Tortoise.IsUpgradeNeeded" value="True"/>
      </if>
    </if>
  </target>

  <target name="Workspace.RequieredSoftware.Subversion.Tortoise">
    <call target="Workspace.RequieredSoftware.Subversion.Tortoise.CheckUpgradeNeeded"/>
    <if test="${not file::exists(TortoisePath) or bool::parse(Tortoise.IsUpgradeNeeded)}" >
      <ask answer="Answer"
           question="It looks like TortoiseSVN is not installed, or an older version than ${Subversion.Tortoise.Version} is installed.  This software is required.  Do you wish to install the software?"
           caption="Proceed Without Required Software?"
           showdialog="true" >
        <options>
          <string value="Install"/>
          <string value="Exit"/>
        </options>
      </ask>
      <ifthenelse test="${Answer == 'Install'}">
        <then>
          <get
              src="${Subversion.Tortoise.Installer.File.Url}"
              dest="${Subversion.Tortoise.Installer.File.Path}"
              unless="${file::exists(Subversion.Tortoise.Installer.File.Path)}"
          />
          <exec
            workingdir="${path::get-directory-name(Subversion.Tortoise.Installer.File.Path)}"
            program="msiexec"
            commandline='/i ${Subversion.Tortoise.Installer.File.Path} /norestart /q INSTALLDIR="${ProgramFiles.Current.Processor.Type.Path}\TortoiseSVN"'
            resultproperty="Return.Code"
            failonerror="false"
            verbose="true"
          />
          <fail if="${int::parse(Return.Code) != 0 and int::parse(Return.Code) != 3010}" message="msiexec (return code was ${Return.Code})"/>
        </then>
        <elseifs>
          <elseif test="${Answer == 'Exit'}">
            <fail message="Please install TortoiseSVN!" />
          </elseif>
        </elseifs>
      </ifthenelse>

    </if>
  </target>

</project>