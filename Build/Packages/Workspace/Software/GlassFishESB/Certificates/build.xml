<project name="keycopy" default="main" basedir=".">
<property environment="env"/>
<property name="AS_HOME" value="${env.AS_HOME}"/>
<property name="AS_KEYSTORE_PASSWORD" value="changeit" />
<property name="AS_KEY_PASSWORD" value="changeit" />
<property name="AS_ADMIN_USER" value="admin" />
<property name="AS_DOMAIN_NAME" value="domain1" />
<property name="AS_ADMIN_PASSWORDFILE" value="${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/domain-passwords" />

<target name="init">
        	<condition property="win">
		<and>
			<os family="Windows"/>
		</and>
	      </condition>
</target>

 <target name="appserver-asadmin">
   	<condition property="ASADMIN" value="${AS_HOME}/bin/asadmin">
   		<os family="Unix" />
   	</condition>
   	<condition property="ASADMIN" value="${AS_HOME}/bin/asadmin.bat">
   		<os family="Windows" />
   	</condition>    	
   </target>
<!-- ##################   start the AppServer     #######################-->
    <target name="start-appserver" depends="init,appserver-start-win,appserver-start-notwin">
    	<echo message="Appserver is starting up ... please wait"/>
        <sleep seconds="30"/>
    </target>
   <target name="appserver-start-win" depends="appserver-asadmin" if="win">
        <parallel>
        <sequential>
        <exec dir="${AS_HOME}/bin" executable="cmd.exe" spawn="true" os="${os.name}" failonerror="false" >
                <arg line="/c asadmin.bat start-domain --user ${AS_ADMIN_USER} --passwordfile ${AS_ADMIN_PASSWORDFILE} ${AS_DOMAIN_NAME}"/>
        </exec>
        </sequential>
        </parallel>
    </target>

    <target name="appserver-start-notwin" depends="appserver-asadmin" unless="win">
        <exec executable="${ASADMIN}">
		    <arg line="start-domain --user ${AS_ADMIN_USER} --passwordfile ${AS_ADMIN_PASSWORDFILE} ${AS_DOMAIN_NAME}"/>
	  </exec>  	
    </target>
<!-- ##################   stop the AppServer     #######################-->
    <target name="stop-appserver" depends="appserver-asadmin">
        <echo message="Appserver is shutting down ... please wait"/>
		<exec executable="${ASADMIN}">
	    	<arg line="stop-domain ${AS_DOMAIN_NAME}"/>	
		</exec>
    </target>

<target name="main" 
            description="copy v3 keypair to GF Keystore" depends="appserver-asadmin">
    <echo message="WARNING: currently we add non-CA certs to GF truststore, this will not be required in later releases when we WSIT starts supporting CertStore(s)" />
    <java  classname="KeyImport"
           dir="."
           fork="true"> 
         <arg value="srcstore=server-keystore.jks"/>
         <arg value="dststore=${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/keystore.jks" />
         <arg value="srcalias=xws-security-server" />
         <arg value="dstalias=xws-security-server"/>
         <arg value="dststorepass=${AS_KEYSTORE_PASSWORD}"/>
         <arg value="dstkeypass=${AS_KEY_PASSWORD}"/>
         <classpath>
           <pathelement location="./test.jar"/>
         </classpath>
    </java>
    <java  classname="KeyImport"
           dir="."
           fork="true"> 
         <arg value="srcstore=client-keystore.jks"/>
         <arg value="dststore=${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/keystore.jks" />
         <arg value="srcalias=xws-security-client" />
         <arg value="dstalias=xws-security-client"/>
         <arg value="dststorepass=${AS_KEYSTORE_PASSWORD}"/>
         <arg value="dstkeypass=${AS_KEY_PASSWORD}"/>
         <classpath>
           <pathelement location="./test.jar"/>
         </classpath>
    </java>
    <java  classname="KeyImport"
           dir="."
           fork="true"> 
         <arg value="srcstore=server-truststore.jks"/>
         <arg value="dststore=${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/cacerts.jks" />
         <arg value="srcalias=certificate-authority" />
         <arg value="dstalias=xwss-certificate-authority"/>
         <arg value="trustedentry=true"/>
         <arg value="dststorepass=${AS_KEYSTORE_PASSWORD}"/>
         <arg value="dstkeypass=${AS_KEY_PASSWORD}"/>
         <classpath>
           <pathelement location="./test.jar"/>
         </classpath>
    </java>
    
    <java  classname="KeyImport"
           dir="."
           fork="true"> 
         <arg value="srcstore=server-keystore.jks"/>
         <arg value="dststore=${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/keystore.jks" />
         <arg value="srcalias=wssip" />
         <arg value="dstalias=wssip"/>
         <arg value="dststorepass=${AS_KEYSTORE_PASSWORD}"/>
         <arg value="dstkeypass=${AS_KEY_PASSWORD}"/>
         <classpath>
           <pathelement location="./test.jar"/>
         </classpath>
    </java>
    
    <java  classname="KeyImport"
           dir="."
           fork="true"> 
         <arg value="srcstore=server-truststore.jks"/>
         <arg value="dststore=${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/cacerts.jks" />
         <arg value="srcalias=xws-security-client" />
         <arg value="dstalias=xws-security-client"/>
         <arg value="trustedentry=true"/>
         <arg value="dststorepass=${AS_KEYSTORE_PASSWORD}"/>
         <arg value="dstkeypass=${AS_KEY_PASSWORD}"/>
         <classpath>
           <pathelement location="./test.jar"/>
         </classpath>
    </java>
     <java  classname="KeyImport"
           dir="."
           fork="true"> 
         <arg value="srcstore=client-truststore.jks"/>
         <arg value="dststore=${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/cacerts.jks" />
         <arg value="srcalias=xws-security-server" />
         <arg value="dstalias=xws-security-server"/>
         <arg value="trustedentry=true"/>
         <arg value="dststorepass=${AS_KEYSTORE_PASSWORD}"/>
         <arg value="dstkeypass=${AS_KEY_PASSWORD}"/>
         <classpath>
           <pathelement location="./test.jar"/>
         </classpath>
    </java>

   <java  classname="KeyImport"
           dir="."
           fork="true"> 
         <arg value="srcstore=client-truststore.jks"/>
         <arg value="dststore=${AS_HOME}/domains/${AS_DOMAIN_NAME}/config/cacerts.jks" />
         <arg value="srcalias=wssip" />
         <arg value="dstalias=wssip"/>
         <arg value="trustedentry=true"/>
         <arg value="dststorepass=${AS_KEYSTORE_PASSWORD}"/>
         <arg value="dstkeypass=${AS_KEY_PASSWORD}"/>
         <classpath>
           <pathelement location="./test.jar"/>
         </classpath>
    </java>
    <echo message="Adding JVM Option for https outbound alias, this will take atleast One Minute...." />    
    <antcall target="start-appserver"/>
    <exec executable="${ASADMIN}">
	 <arg line="create-jvm-options --user ${AS_ADMIN_USER} --passwordfile ${AS_ADMIN_PASSWORDFILE}  -Dcom.sun.enterprise.security.httpsOutboundKeyAlias=s1as"/>	
    </exec>
    <antcall target="stop-appserver"/>
    
</target>
</project>
