<?xml version="1.0" encoding="utf-8" ?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Workspace.CCTray.Configuration.Scripts">

  <property name="CCTray.ConfigFilePath" value="${CCTray.Install.Path}\Settings.xml"/>
  <property name="CCTray.ExeFilePath" value="${CCTray.Install.Path}\cctray.exe"/>

  <target name="Workspace.Configuration.CCTray">
    <xmlpeek
      file='${CCTray.ConfigFilePath}'
      property='CCTray.Config.IsOld'
      xpath='boolean(/Configuration/Projects/Project[@serverUrl = "${Integration2.Server.Remoting.Url}" and @projectName = "${ProjectName}-${ProjectCodeLineName}-Conformance-Test"])'
    />

    <if test='${CCTray.Config.IsOld}'>
      <xmlpoke
        file='${CCTray.ConfigFilePath}'
        pokemode='ReplaceOuter'
        value=''
        xpath='/Configuration/Projects/Project'
      />
    </if>

    <loopthrough property="CCNet.Project.File.Name">
      <items>
        <strings refid="CCNet.Project.Files"/>
      </items>
      <do>
        <echo message="CCNet.Project.File.Name=${CCNet.Project.File.Name}"/>
        <xmlquery query='/cruisecontrol/project/@name' file='${Common.Directory.Build.Path}\${CCNet.Project.File.Name}' id='CCNetProjects' />
        <property name='CCTray.NeedRecycle' value='false'/>

        <xmlpeek
          file='${Common.Directory.Build.Path}\${CCNet.Project.File.Name}'
          property='Remoting.Url'
          nodeindex='0'
          xpath='/cruisecontrol/project/triggers/projectTriggerFilter/projectFilters/projectFilter[contains(@project,"${ProjectName}-${ProjectCodeLineName}-Build-Scripts")]/@serverUri'
        />

        <loopthrough property='CCNetProjectName'>
          <items>
            <xmlquery refid='CCNetProjects'/>
          </items>
          <do>
            <trycatch>
              <try>
                <xmlpeek
                  file='${CCTray.ConfigFilePath}'
                  property='trash'
                  xpath='/Configuration/Projects/Project[@serverUrl = "${Remoting.Url}" and @projectName = "${CCNetProjectName}"]'
                />
              </try>
              <catch property='exception'>
                <echo message='${exception}'/>
                <property name='CCTray.NeedRecycle' value='true'/>
                <largeproperty name="CCTrayProject">
                  <value expand="true" xml="true">
                    <Project serverUrl="${Remoting.Url}" projectName="${CCNetProjectName}" />
                  </value>
                </largeproperty>
                <xmlpoke
                  file='${CCTray.ConfigFilePath}'
                  xpath='/Configuration/Projects'
                  pokemode='Add'
                  value='${CCTrayProject}'
            />
              </catch>
            </trycatch>
          </do>
        </loopthrough>
      </do>
    </loopthrough>

    <if test="${CCTray.NeedRecycle}">
      <exec program="taskkill" commandline="/IM cctray.exe /F /T" verbose="true" failonerror="false"/>
    </if>

    <property name="CCTrayNotRunning" value="running"/>
    <property name="Running.CCTray.Instances" value=""/>
    <exec
      program="${Tools.pslist.Exe}"
      verbose="true"
      commandline="/accepteula CCTray"
      outputproperty="Running.CCTray.Instances"
      failonerror="false"
    />

    <loglevel level="None">
      <do>
        <regex
          input="${Running.CCTray.Instances}"
          pattern="(?'CCTrayNotRunning'was not found)"
          failonerror="false"
        />
      </do>
    </loglevel>

    <if test="${CCTrayNotRunning != 'running'}">
      <asyncexec
        program="${CCTray.ExeFilePath}"
        createnowindow="false"
        redirectoutput="false"
        useshellexecute="true"
        waitforexit="false"
      />
    </if>
  </target>
</project>