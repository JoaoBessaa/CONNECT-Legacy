<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="UnitTest">


  <target name="UnitTest.RunTests">
    <exec program="${Ant.Bat}" failonerror="true">
      <environment refid="${Common.EnvironmentVariables.RefId}"/>
      <arg line="UnitTestReport -buildfile ${Common.Directory.Product.Path}\build.xml" />

      <arg line="-DProductVersion=${CCNetLabel}" />
    </exec>

    <copy failonerror="false" overwrite="true" flatten="true" todir="${UnitTestReportsDirectoryPath}" verbose="true">
      <fileset basedir="${Common.Directory.Product.Path}\UnitTestResults">
        <include name="unittests.xml" />
      </fileset>
    </copy>

    <copy
			file='${UnitTestReportsDirectoryPath}\unittests.xml'
			todir='${Common.Directory.Artifact.Path}'
			if="${UnitTest.PublishXmlReport and file::exists(UnitTestReportsDirectoryPath + '\unittests.xml')}"
		/>

    <ifthenelse  test="${file::exists(UnitTestReportsDirectoryPath + '\unittests.xml')}">
      <then>
        <property name="UnitTest.HasFailures" value="true"/>
        <xmlpeek
					file="${UnitTestReportsDirectoryPath}\unittests.xml"
					property="UnitTest.HasFailures"
					xpath="boolean(/testsuites//testsuite[@errors>0] or /testsuites//testsuite[@failures>0])"
				/>

        <fail
					if="${UnitTest.HasFailures}"
					message="At least one unit test has failed.  Please check the unit test section for more details..."
				/>
      </then>
      <else>
        <fail message="It doesn't look like any unit tests were run, so the build was failed!"/>
      </else>
    </ifthenelse>
  </target>

  <target name="UnitTest.ShowReport">
    <property name="Common.ShowReport.XmlFile" value="${UnitTestReportsDirectoryPath}\unittests.xml"/>
    <property name="Common.ShowReport.HtmlFile" value="${UnitTestReportsDirectoryPath}\TestReport.html"/>
    <property name="Common.ShowReport.XslFile" value="${BuildDirectory}\Packages\JUnit\junit-noframes.xsl"/>
    <property name="Common.ShowReport.DetailsFilePath" value=""/>

    <call target="Common.ShowReport"/>
  </target>

  <target name="UnitTest.SetUp">
    <delete dir="${UnitTestReportsDirectoryPath}" if="${directory::exists(UnitTestReportsDirectoryPath)}" verbose="true"/>
    <mkdir dir="${UnitTestReportsDirectoryPath}" verbose="true"/>
  </target>

  <target name="UnitTest.TearDown">

  </target>

</project>