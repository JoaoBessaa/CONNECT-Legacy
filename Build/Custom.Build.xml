<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="Custom">

  <target name="Build.PublishZips">
    <call target="Build.PublishZip.Release.Installer"/>
    <call target="Build.PublishZip.Release.Interfaces"/>
    <call target="Build.PublishZip.ESCs"/>
    <call target="Build.PublishZip.SoapUI.Validation.Tests"/>
    <call target="Build.PublishZip.Release.Properties"/>
    <call target="Build.PublishZip.AdapterPEPWS"/>
    <call target="Build.PublishZip.LiFT.ManualTest"/>
  </target>

  <target name="Build.PublishZip.Release.Installer">
    <saveproperties file="${Common.Project.TempDirectory}\ReleaseInfo.txt" format="CommandLine" >
      <property name="CCNetLabel"/>
      <property name="CCNetBuildDate"/>
      <property name="CCNetBuildTime"/>
    </saveproperties>

    <property name="Installer.Zip.FileName" value="${ProjectFullName}_Binaries_${CCNetLabel}.zip"/>
    <property name="Installer.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${Installer.Zip.FileName}"/>

    <zip zipfile="${Installer.Zip.FilePath}">
      <fileset basedir="${GlassFish.Deploy.Directory.Path}">
        <include name="**\*"/>
      </fileset>
      <fileset basedir="${Common.Directory.Install.Path}">
        <include name="**\*"/>
      </fileset>
      <fileset basedir="${Common.Directory.DBScripts.Path}" prefix="${Common.Directory.DBScripts.Name}">
        <include name="**\*"/>
      </fileset>
      <fileset basedir="${Common.Project.TempDirectory}">
        <include name="ReleaseInfo.txt"/>
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${Installer.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    <call target="Publish.Link" />
  </target>

  <target name="Build.PublishZip.Release.Interfaces">
    <property name="Interfaces.Zip.FileName" value="${ProjectFullName}_Interfaces_${CCNetLabel}.zip"/>
    <property name="Interfaces.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${Interfaces.Zip.FileName}"/>

    <zip zipfile="${Interfaces.Zip.FilePath}">
      <fileset basedir="${Common.Directory.Production.Path}\" >
        <include name="Common\Interfaces\**" />
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${Interfaces.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    <call target="Publish.Link" />
  </target>

  <target name="Build.PublishZip.Release.Properties">
    <property name="Properties.Base.Dir" value="${Common.Directory.Production.Path}\Common\Properties\"/>

    <foreach item="Folder" property="Properties.Dir">
      <in>
        <items basedir="${Properties.Base.Dir}">
          <include name="*"/>
          <exclude name="${Properties.Base.Dir}"/>
        </items>
      </in>
      <do>
        <echo message="${Properties.Dir}"/>
        <property name="Properties.Dir.Name" value="${path::get-file-name-without-extension(Properties.Dir)}"/>
        <property name="Properties.Zip.FileName" value="${ProjectFullName}_Properties_${Properties.Dir.Name}_${CCNetLabel}.zip"/>
        <property name="Properties.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${Properties.Zip.FileName}"/>

        <zip zipfile="${Properties.Zip.FilePath}">
          <fileset basedir="${Properties.Base.Dir}\${Properties.Dir.Name}\" >
            <include name="*\**" />
          </fileset>
        </zip>

        <property name="Publish.Web.File.Name" value="${Properties.Zip.FileName}"/>
        <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

        <call target="Publish.Link" />
      </do>
    </foreach>
  </target>

  <target name="Build.PublishZip.ESCs">
    <call target="Build.PublishZip.ESCs.DynamicDocuments"/>
    <call target="Build.PublishZip.ESCs.FTA"/>
  </target>

  <target name="Build.PublishZip.ESCs.DynamicDocuments">
    <property name="ESC.Zip.FileName" value="${ProjectFullName}_DynamicDocuments_${CCNetLabel}.zip"/>
    <property name="ESC.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${ESC.Zip.FileName}"/>

    <zip zipfile="${ESC.Zip.FilePath}">
      <fileset basedir="${Common.Directory.Production.Path}\Adapters\Framework\AdapterCommonDataLayerEJB\dist\debug\" prefix="bin" failonempty="true">
        <include name="AdapterCommonDataLayerEJB.jar"/>
      </fileset>
      <fileset basedir="${Common.Directory.Production.Path}\Adapters\Framework\AdapterDocumentAssemblyProxyEJB\dist\debug\" prefix="bin" failonempty="true">
        <include name="AdapterDocumentAssemblyProxyEJB.jar"/>
      </fileset>
      <fileset basedir="${Common.Directory.Production.Path}\Adapters\Framework\AdapterDocumentRepositoryEJB\dist\debug\" prefix="bin" failonempty="true">
        <include name="AdapterDocumentRepositoryEJB.jar"/>
      </fileset>
      <fileset basedir="${Common.Directory.Production.Path}\Adapters\Framework\DocumentManagerEJB\dist\debug\" prefix="bin" failonempty="true">
        <include name="DocumentManagerEJB.jar"/>
      </fileset>
      <fileset basedir="${Common.Directory.Production.Path}\Adapters\Framework\NHINAdapterServiceEJB\dist\debug\" prefix="bin" failonempty="true">
        <include name="NHINAdapterServiceEJB.jar"/>
      </fileset>
      <fileset basedir="${Common.Directory.Product.Path}\SoapUI_Test\ManualSuite\" prefix="SelfTest\DynamicDocumentTest" failonempty="true">
        <include name="DynamicDocumentTest-Internal-soapui-project.*"/>
      </fileset>
      <fileset basedir="${Common.Directory.Product.Path}\SoapUI_Test\ManualSuite\" prefix="SelfTest\DynamicDocumentTest" failonempty="true">
        <include name="DynamicDocumentTest-EndtoEnd-soapui-project.*"/>
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${ESC.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    <call target="Publish.Link" />
  </target>  
  
  <target name="Build.PublishZip.SoapUI.Validation.Tests">
    <property name="SoapUI.Zip.FileName" value="${ProjectFullName}_Validation_Tests_${CCNetLabel}.zip"/>
    <property name="SoapUI.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${SoapUI.Zip.FileName}"/>

    <zip zipfile="${SoapUI.Zip.FilePath}">
      <fileset basedir="${Common.Directory.Product.Path}\SoapUI_Test\ValidationSuite" prefix="ValidationSuite" failonempty="true">
        <include name="*.*"/>
        <exclude name="build.xml"/>
      </fileset>
      <fileset basedir="${Common.Directory.Product.Path}\Production\Common\Properties\Dev" prefix="ValidationSuite" failonempty="true">
        <include name="mpi.xml"/>
        <include name="reidentification.xml"/>
      </fileset>
      <fileset basedir="${Common.Directory.Product.Path}\DBScripts\nhincdb" prefix="ValidationSuite" failonempty="true">
        <include name="populateTestData.sql"/>
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${SoapUI.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    <call target="Publish.Link" />

  </target>

  <target name="Build.PublishZip.ESCs.FTA">
    <property name="ESC.Name" value="Generic_File_Transfer_Adapter"/>
    
    <property name="FTA.Zip.FileName" value="${ProjectFullName}_${ESC.Name}_${CCNetLabel}.zip"/>
    <property name="FTA.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${FTA.Zip.FileName}"/>

    <zip zipfile="${FTA.Zip.FilePath}">
      <fileset basedir="${Common.Directory.Production.Path}\Adapters\GenericFileTransfer\FTATransferAdapterEJB\dist\debug" failonempty="true">
        <include name="*.jar"/>
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${FTA.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    <call target="Publish.Link" />
    
    <property name="FTAManualTest.Zip.FileName" value="${ProjectFullName}_${ESC.Name}_Test_${CCNetLabel}.zip"/>
    <property name="FTAManualTest.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${FTAManualTest.Zip.FileName}"/>

    <zip zipfile="${FTAManualTest.Zip.FilePath}">
      <fileset basedir="${Common.Directory.Product.Path}\SoapUI_Test\ManualSuite\FTAManualTest" prefix="FTAManualTest" failonempty="true">
        <include name="*.*"/>
        <exclude name="build.xml"/>
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${FTAManualTest.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    <call target="Publish.Link" />
  </target>

  <target name="Build.PublishZip.AdapterPEPWS">
    <property name="AdapterPEPWS.Zip.FileName" value="${ProjectFullName}_OpenSSO_AdapterPEPWS_Test_${CCNetLabel}.zip"/>
    <property name="AdapterPEPWS.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${AdapterPEPWS.Zip.FileName}"/>

    <zip zipfile="${AdapterPEPWS.Zip.FilePath}">
      <fileset basedir="${Common.Directory.Product.Path}\SoapUI_Test\ManualSuite\OpenSSO" prefix="OpenSSOAdapterPEPWSTest" failonempty="true">
        <include name="*.*"/>
        <exclude name="build.xml"/>
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${AdapterPEPWS.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    <call target="Publish.Link" />

  </target>

  <target name="Build.PublishZip.LiFT.ManualTest">
    <property name="LiFt.Zip.FileName" value="${ProjectFullName}_LiFT_Test_${CCNetLabel}.zip"/>
    <property name="LiFt.Zip.FilePath" value="${Common.Directory.Artifact.Path}\${LiFt.Zip.FileName}"/>

    <zip zipfile="${LiFt.Zip.FilePath}">
      <fileset basedir="${Common.Directory.Product.Path}\SoapUI_Test\ManualSuite\" prefix="LiFtWSTest" failonempty="true">
        <include name="EntityXDRLiFTAsyncRequestTests-soapui-project.xml"/>
        <include name="EntityXDRLiFTAsyncRequestTests-soapui-project.properties"/>
        <include name="LiFTEnabled_internalConnectionInfo.xml"/>
        <include name="LiFTDisabled_internalConnectionInfo.xml"/>
        <include name="LiftDocument.jpg"/>
      </fileset>
      <fileset basedir="${Common.Directory.Product.Path}\IntegrationTest\scripts\" prefix="LiFtWSScripts" failonempty="true">
        <include name="DBFunctions.groovy"/>
        <include name="FileUtils.groovy"/>
        <include name="GlassFishUtils.groovy"/>
        <include name="PropertyReader.groovy"/>
      </fileset>
    </zip>

    <property name="Publish.Web.File.Name" value="${LiFt.Zip.FileName}"/>
    <property name="Publish.Web.File.Path"	value="${Publish.WebPathRoot}/${Common.Directory.Artifact.Name}/${Publish.Web.File.Name}" />

    
    <call target="Publish.Link" />
    

  </target>
  
  <target name="Common.FindBuild">
    <strings id="builds"/>

    <function execute="${ccnet::get-project-some-build-labels(CCNetRemotingUrl, ProjectNameToPullFrom, 15, 'builds') }"/>

    <loopthrough property="build">
      <items>
        <strings refid="builds"/>
      </items>
      <do>
        <trycatch>
          <try>
            <regex input="${build}" pattern="log\d+Lbuild\.${CCNetLabel}\.xml$"/>
            <break/>
          </try>
          <catch/>
        </trycatch>
      </do>
    </loopthrough>
  </target>

  <macrodef name="ask.published.good.build">
    <attributes>
      <attribute name="resultproperty" default="Build.Version" type="string"/>
      <attribute name="remotingurl" default="${CCNet.Server.Remoting.Url}" type="string"/>
      <attribute name="project" default="${ProjectName}-${ProjectCodeLineName}-Release" type="string"/>
    </attributes>
    <sequential>

      <strings id="goodbuilds"/>
      <strings id="builds"/>

      <function execute="${ccnet::get-project-some-build-labels(remotingurl, project, 15, 'builds') }"/>

      <property name="count" value="0"/>

      <loopthrough property="build">
        <items>
          <strings refid="builds"/>
        </items>
        <do>
          <trycatch>
            <try>
              <regex input="${build}" pattern="log\d+Lbuild\.(?'Label'.*)\.xml$"/>
              <function execute="${stringlist::add('goodbuilds', Label)}"/>
              <property name="count" value="${int::parse(count) + 1}"/>
            </try>
            <catch/>
          </trycatch>
          <break if="${int::parse(count) == 6}"/>
        </do>
      </loopthrough>

      <ask
          answer="${resultproperty}"
          caption="Choose which build?"
          question="Choose which build?">
        <options refid="goodbuilds" />
      </ask>
    </sequential>
  </macrodef>

  <macrodef name="get.published.artifact">
    <attributes>
      <attribute name="artifact" require="True" type="string"/>
      <attribute name="dest" require="True" type="string"/>
      <attribute name="build" require="True" type="string"/>
      <attribute name="remotingurl" default="${CCNet.Server.Remoting.Url}" type="string"/>
      <attribute name="project" default="${ProjectName}-${ProjectCodeLineName}-Release" type="string"/>
      <attribute name="webroot" default="http://${BuildServerHostName}/${ProjectName}-${ProjectCodeLineName}/${Common.Directory.ArtifactRoot.Name}" type="string"/>
      <attribute name="username" default="${Web.Credentials.UserName}" type="string"/>
      <attribute name="password" default="${Web.Credentials.Password}" type="string"/>
    </attributes>
    <sequential>

      <strings id="builds"/>
      <function execute="${ccnet::get-project-some-build-labels(remotingurl, project, 15, 'builds') }"/>
      <loopthrough property="BuildName">
        <items>
          <strings refid="builds"/>
        </items>
        <do>
          <trycatch>
            <try>
              <regex input="${BuildName}" pattern="log(?'BuildArchiveFolderName'\d+)Lbuild\.${build}\.xml$"/>
              <break/>
            </try>
            <catch/>
          </trycatch>
        </do>
      </loopthrough>

      <regex input="${BuildArchiveFolderName}" pattern="(?'Year'\d\d\d\d)(?'Month'\d\d)(?'Day'\d\d)"/>

      <mkdir dir="${path::get-directory-name(dest)}" unless="${directory::exists(path::get-directory-name(dest))}"/>

      <get
        dest="${dest}"
        src="${webroot}/${BuildArchiveFolderName}/${artifact}"
        verbose="true"
      >
        <credentials username="${username}" password="${password}"/>
      </get>
    </sequential>
  </macrodef>

</project>
